{"version":3,"sources":["api/api.js","components/pages/music/music.module.css","components/pages/news/news.module.css","components/pages/settings/settings.module.css","components/sidebar/friendPanel/friendPanel.module.css","components/modules/loader/loader.module.css","components/modules/inputErorPanel/input.jsx","components/pages/music/music.jsx","store/newsReducer.js","components/pages/news/newsDrawer.jsx","components/pages/news/newsContainer.js","components/pages/settings/settings.jsx","components/header/authorization/autorizationDrawer.jsx","store/autorizationReduser.js","components/header/authorization/autorizationContainer.jsx","components/header/header.js","components/sidebar/friendPanel/friendsPanelDrawer.jsx","store/leftColonyReducer.js","components/sidebar/friendPanel/friendsPanelContainer.jsx","components/sidebar/sidebar.js","store/messageReducer.js","components/pages/message/messageDrawer.jsx","components/pages/message/messageContainer.jsx","store/profileReducer.js","components/pages/profile/history/massageWall.jsx","components/pages/profile/profileDrawer.js","components/pages/profile/profileContainer.js","store/usersReducer.js","components/pages/users/usersDrawer.jsx","components/pages/users/usersContainer.js","App.js","store/rStore.js","reportWebVitals.js","index.js","store/commonReduser.js","components/pages/message/message.module.css","components/pages/users/users.module.css","components/modules/loader/loader.jsx","components/header/authorization/autorization.module.css","components/modules/inputErorPanel/input.module.css","components/pages/profile/history/massWall.module.css","components/sidebar/sidebar.module.css","components/pages/profile/user.module.css","components/pages/profile/newpost.module.css"],"names":["instanceDummy","axios","baseURL","headers","instanceMock","serverAL","getUsersList","CurrentPage","maxUsersAtPage","get","then","res","data","buttonPressed","userID","byl","put","isFollow","getUserbyId","getQuotebyUsrId","updateQuote","qText","quote","updateElement","whatElement","text","likeButtPressed","postID","likes","newWallPost","post","newUser","userInit","Promise","resolve","reject","setTimeout","getSubscrUsers","getNewsList","getCurrPM","id","sendPM","module","exports","inputCondition","required","value","undefined","maxLength","max","length","minLength","min","number","isNaN","Number","minValue","email","test","renderField","input","label","type","meta","touched","error","warning","className","inputStyle","field","erors","placeholder","bigField","bField","MusicPage","props","music","main","SET_NEWS_POSTS","init","newsList","image","link","tags","publishDate","owner","_setPosts","state","action","newsReducer","NewsPage","news","connect","newsPart","getNewsPostsTC","dispatch","a","newsAnswData","console","log","useEffect","SettingsPage","settings","maxLength10","minLength2","AutorizationDrawer","userData","isLoggedIn","autiruzationStyle","login","userAvatarLogin","src","loginData","avatar","userName","loginButt","onClick","tryLogout","LogFormWithRed","reduxForm","form","pristine","submitting","onSubmit","handleSubmit","Field","component","name","validate","disabled","to","logout","loginFormSubmit","notLogined","React","memo","TRY_LOGIN","TRY_LOGOUT","LOGIN_FORM_SUBMIT","token","inputLogin","inputPassword","_loginSend","_loginFormSubmit","elem","_logout","autorizationReduser","AutorizationContainerConnect","regButtonPress","this","editLoginArea","editPasswordArea","Component","compose","autorizationPart","tryLogin","withRouter","Header","CompactFriendPanel","friendPanelStyle","friendPanel","map","friend","count","picture","alt","userNotLogined","UPDATE_FRIEND_PANEL","udpateFriends","_setAvatars","leftColonePartReducer","FriendColoneContainer","leftColonePart","updateFriendsTC","wallPostSucces","LeftButton","leftColone","button","href","activeClassName","active","Sidebar","store","SET_USERS_LIST_PM","SET_CURRENT_DIEALOGS_PM","CHANGE_ISSELECTED_USER","ADD_NEW_PM","setUsersListPM","usersPMlist","firstName","selectedDiadlog","pmId","pmSettings","isUserSelected","_switchIsSelected","changedText","PMtext","_setUsersList","_setCurrentDialog","_pushPM","messageReducer","MessagePage","userListForPM","current","message","choosenPM","oneMess","ava","SendPostForm","autor","dialogMassage","inputArea","sendMassageToServer","MassagePageContainer","massagePart","isSomethingLoading","commonPart","loadingModules","getUsersPMlistTC","changeLoadStatus","userAnsw","getCurrentDialogPM","dialogsAnsw","setIsUserSelected","bul","addSendPm","pmID","match","params","userPMId","getPM","WALL_POST_PUBLISH","TEXTAREA_EDIT_WALL","GET_USER","LODAER_WAITER_CHANGER","EDIT_QUOTE_TEXT","ENABLE_EDIT_ELEMENT","DISABLE_EDIT_ELEMENT","EDIT_CURR_ELEM","GET_USER_WALL","WALL_LIKE_BUTTON_CHANGE","getUser","changeIsFinished","isFinished","getUserWallPost","postsWall","createdAt","wallText","isLoadinFinished","whatEdit","isEditorOneNeed","title","lastName","dateOfBirth","registerDate","phone","adressCity","adressCountry","_textAreaEditWall","_postWallComment","curr","avatarImg","postArea","date","_getUser","_loaderWaitSwitch","_editChangeStatus","_enableEditElement","_disableEditElement","_editCurrElem","_getUsrWall","_changeLike","now","postId","bodyReducer","PostHistory","massWall","history","clock","buttActive","buttPass","oncl","e","likeChangeTC","userId","maxLength50","minLength10","Profile","doubleClickHolder","stringName","enableEditElement","DrawEditor","areaNewPost","createRef","ref","onChange","editProfilePart","autoFocus","onBlur","updateQuoteOnServer","formWall","currenUserData","userStyle","userdataBlock","onDoubleClick","newPost","newpost","editText","inputt","wallSend","bodyPart","wallPostSend","wallPostEdit","getUserByIdTC","userAnswer","userQuote","editQuote","updateQuteServer","buttonEvent","subBool","target","userid","newWallPostTC","updateWallPost","usrID","usrFunc","CHANGE_FOLLOW","GET_MORE_USERS","CHANGE_CURRENT_PAGE","GET_MAX_USERS","updateUserChange","changeCurPage","getMaxUsers","usersList","pageSettings","currentPage","allUsersCount","_changeFollowed","_getUsrs","_usersPageSwitch","_setMaxUsers","usersReducer","UsersPage","maxPagesNumber","maxItemsInPage","pagesToDraw","Math","ceil","pageButtOns","i","push","users","activeB","regularB","changePage","formUsers","currUsers","onError","onerror","adress","userFollowChange","usersPart","getUsersPageThunkCreator","Page","userListData","changeSubscribeThunkCreator","buttPressAnswer","getUPtc","RegiserContainer","lazy","App","exact","from","path","render","Suspense","fallback","reducersPush","combineReducers","commonReduser","formReducer","createStore","composeWithDevTools","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getState","bind","document","getElementById","CHANGE_LOADING_STATUS","APP_INIT_DONE","status","isInitComplete","_changeLoadStatus","_appInitComplete","LoadingModule","loader","lds_circle"],"mappings":"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","file":"static/js/main.0283ca69.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\nimport { changeLoadStatus } from \"../store/commonReduser\";\r\n\r\nconst instanceDummy = axios.create({\r\n  baseURL: \"https://dummyapi.io/data/api/post\",\r\n  headers: {\r\n    \"app-id\": `608ec88017752b6496d65b8f`,\r\n  },\r\n});\r\n\r\nconst instancefakeapi = axios.create({\r\n  baseURL: \"https://www.fakeapi.online/api/apis/agent32/\",\r\n});\r\n\r\nconst instanceMock = axios.create({\r\n  baseURL: \"https://60885809a6f4a300174263e9.mockapi.io/users/\",\r\n});\r\n\r\n//https://www.fakeapi.online/apis\r\n\r\nexport const serverAL = {\r\n  //---------------users------------------\r\n  getUsersList: (CurrentPage = 0, maxUsersAtPage = 10) => {\r\n    return instanceMock\r\n      .get(`?page=${CurrentPage}&limit=${maxUsersAtPage}`)\r\n\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  },\r\n\r\n  buttonPressed: (userID, byl) => {\r\n    return instanceMock\r\n      .put(`${userID}`, {\r\n        isFollow: byl,\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  },\r\n    //-----------profile------------------\r\n    getUserbyId: (userID = 1) => {\r\n      return instanceMock.get(`${userID}`).then((res) => {\r\n        return res.data;\r\n      });\r\n    },\r\n    getQuotebyUsrId: (userID = 1) => {\r\n      return instanceMock.get(`${userID}/wallPost/`).then((res) => {\r\n        return res.data;\r\n      });\r\n    },\r\n  updateQuote: (userID, qText) => {\r\n    return instanceMock\r\n      .put(`${userID}`, {\r\n        quote: qText,\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  },\r\n  updateElement: (userID, whatElement, text) => {\r\n    return instanceMock\r\n      .put(`${userID}`, {\r\n        [whatElement]: text,\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  },\r\n  likeButtPressed: (userID, postID, byl) => {\r\n    debugger\r\n    return instanceMock\r\n      .put(`${userID}/wallPost/${postID}`, {\r\n        likes: byl,\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  },\r\n  newWallPost: (userID, data) => {\r\n    return instanceMock\r\n      .post(`${userID}/wallPost/`, {\r\n        ...data\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  },\r\n    //-----------registr------------------\r\n  newUser: (data) => {\r\n    return instanceMock\r\n      .post(``, {\r\n        ...data\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  },\r\n   //-----------init------------------\r\n  userInit: () => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        resolve();\r\n      }, 300);\r\n    });\r\n  },\r\n     //-----------friendPannel------------------\r\n  getSubscrUsers: () => {\r\n    \r\n    return instanceMock\r\n      .get(`?search=true&p=1&l=4`)\r\n\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  },\r\n    //-----------NewsPart------------------\r\n    getNewsList: () => {\r\n      return instanceDummy\r\n        .get(`?limit=10`)\r\n  \r\n        .then((res) => {\r\n          return res.data;\r\n        });\r\n    },\r\n\r\n  //-----------pm------------------\r\n    getCurrPM: (id) => {\r\n      return instanceMock\r\n        .get( `${id}/privatMassage`)\r\n  \r\n        .then((res) => {\r\n          return res.data;\r\n        });\r\n    },\r\n    sendPM: (userID, data) => {\r\n      return instanceMock\r\n        .post(`${userID}/privatMassage/`, {\r\n          ...data\r\n        })\r\n        .then((res) => {\r\n          return res.data;\r\n        });\r\n    },\r\n};\r\n//https://60885809a6f4a300174263e9.mockapi.io/users/1/wallPost/\r\n\r\n//https://60885809a6f4a300174263e9.mockapi.io/users/?search=true&p=1&l=4 getPM","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"music_main__OqcXD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"news_main__2cNg_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"settings_main__P9Tzb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"friendPanel_main__2-xIY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds_circle\":\"loader_lds_circle__3KGB7\"};","import inputStyle from \"./input.module.css\";\r\n\r\n//---------------------------------------------------------------------------------------------\r\nexport const inputCondition = {\r\n  required: (value) => {\r\n    return value || typeof value === \"number\" ? undefined : \"Required\";\r\n  },\r\n  maxLength: (max) => (value) => {\r\n    return value && value.length > max ? `Max is ${max}` : undefined;\r\n  },\r\n  minLength: (min) => (value) =>\r\n    value && value.length < min ? `Min is ${min}` : undefined,\r\n  number: (value) =>\r\n    value && isNaN(Number(value)) ? \"Must be a numb\" : undefined,\r\n  minValue: (min) => (value) =>\r\n    value && value < min ? `Must be at least ${min}` : undefined,\r\n  email: (value) =>\r\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n      ? \"Invalid email\"\r\n      : undefined,\r\n};\r\n\r\n//---------------------------------------------------------------------------------------------\r\n\r\n//---------------------------------------------------------------------------------------------\r\n\r\nexport const renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <span\r\n    className={\r\n      inputStyle.field + \" \" + (touched && error ? inputStyle.erors : \"\")\r\n    }\r\n  >\r\n    <input\r\n      {...input}\r\n      placeholder={touched && error ? error : label}\r\n      type={type}\r\n    />\r\n\r\n    {}\r\n  </span>\r\n);\r\n\r\nexport const bigField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <span>\r\n    <input\r\n      {...input}\r\n      placeholder={touched && error ? error : label}\r\n      type={type}\r\n      className={\r\n        inputStyle.bField + \" \" + (touched && error ? inputStyle.erors : \"\")\r\n      }\r\n    />\r\n\r\n    {}\r\n  </span>\r\n);\r\n//---------------------------------------------------------------------------------------------\r\n","import music from './music.module.css'\r\n\r\nfunction MusicPage (props) {\r\n  return <div className={music.main}>MusicList</div>\r\n}\r\n\r\nexport default MusicPage\r\n","import { serverAL } from \"../api/api\";\r\n\r\n// ========================================\r\n\r\nconst SET_NEWS_POSTS = \"SET-NEWS-POSTS/newsPart\";\r\n\r\n// ========================================\r\n\r\n// --------------\r\nexport const setNewsPosts = (data) => ({\r\n  type: SET_NEWS_POSTS,\r\n  data,\r\n});\r\n// --------------\r\n\r\nconst init = {\r\n  newsList: [\r\n    {\r\n      text: \"\",\r\n      image: \"\",\r\n      likes: \"\",\r\n      link: \"\",\r\n      tags: \"\",\r\n      publishDate: \"\",\r\n      owner: {},\r\n    },\r\n  ],\r\n};\r\n// ========================================\r\nfunction newsReducer(state = init, action) {\r\n  switch (action.type) {\r\n    // --------------\r\n\r\n    // --------------\r\n    case SET_NEWS_POSTS: {\r\n      return _setPosts(state, action);\r\n    }\r\n\r\n    // --------------\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// ========================================\r\n//, owner: ...action.data.owner\r\n// ---------------------------------------\r\nfunction _setPosts(state, action) {\r\n  return {\r\n    ...state,\r\n    newsList: [...action.data],\r\n  };\r\n}\r\n// ---------------------------------------\r\n\r\n// ========================================\r\nexport const getNewsPostsTC = () => async (dispatch) => {\r\n  try {\r\n    // dispatch(changeIsFinished(false));\r\n    const newsAnswData = await serverAL.getNewsList();\r\n\r\n    dispatch(setNewsPosts(newsAnswData));\r\n\r\n    //dispatch(changeIsFinished(true));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n// ---------------------------------------\r\n\r\n// ========================================\r\nexport default newsReducer;\r\n","import news from \"./news.module.css\";\r\n\r\nfunction NewsPage(props) {\r\n  return <div className={news.main}>News List</div>;\r\n}\r\n\r\nexport default NewsPage;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getNewsPostsTC } from \"../../../store/newsReducer\";\r\nimport NewsPage from \"./newsDrawer\";\r\n\r\nfunction NewsConnectContainer(props) {\r\n    useEffect(() => {\r\n    props.getNewsPostsTC()\r\n    \r\n  }, []); \r\n  // {props.changedText.isLoadinFinished ? null : <LoadingModule />}\r\n  return (\r\n    <>\r\n      <NewsPage />\r\n    </>\r\n  );\r\n}\r\n\r\n// ========================================\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    newsList: state.newsPart.newsList,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getNewsPostsTC })(\r\n  NewsConnectContainer\r\n);\r\n","import settings from './settings.module.css'\r\n\r\nfunction SettingsPage (props) {\r\n    return (\r\n  \r\n    <div className={settings.main} >Settings go</div>\r\n  \r\n    )\r\n  }\r\n\r\nexport default SettingsPage","import autiruzationStyle from \"./autorization.module.css\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {renderField, inputCondition } from \"../../modules/inputErorPanel/input\";\r\n\r\nconst maxLength10 = inputCondition.maxLength(10)\r\nconst minLength2 = inputCondition.minLength(2)\r\n\r\nfunction AutorizationDrawer(props) {\r\n\r\n    //---------------------------------------------------------\r\n  function logined() {\r\n    return (\r\n      <div className={autiruzationStyle.login}>\r\n        <div>\r\n          <img\r\n            className={autiruzationStyle.userAvatarLogin}\r\n            src={props.userData.loginData.avatar}\r\n          />{\" \"}\r\n          Hello {props.userData.loginData.userName}\r\n        </div>\r\n        <div className={autiruzationStyle.loginButt}>\r\n          {\" \"}\r\n          <button onClick={props.tryLogout}> Logout</button>{\" \"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function notLogined() {\r\n    //---------------------------------------------------------\r\n    const LogFormWithRed = reduxForm({\r\n      form: \"loginForm\",\r\n    })(LoginForm);\r\n  //---------------------------------------------------------\r\n    function LoginForm(props) {\r\n      const {  pristine, submitting } = props\r\n      return (\r\n        <form onSubmit={props.handleSubmit}>\r\n          {\" \"}\r\n          <div>\r\n            <Field \r\n            \r\n            component=\"input\" name=\"login\" placeholder={`Login`}\r\n            validate={[inputCondition.required, maxLength10, minLength2]}\r\n            \r\n              />{\" \"}\r\n          </div>{\" \"}\r\n          <div>\r\n            <Field\r\n              component=\"input\"\r\n              name=\"password\"\r\n              placeholder={`Password`}\r\n              type=\"password\"\r\n              validate={[inputCondition.required, maxLength10, minLength2]}\r\n            />{\" \"}\r\n          </div>\r\n          <button type=\"submit\"  disabled={pristine || submitting}> Login </button>{\" \"}\r\n          <NavLink to={`/register`}>\r\n            <button>Registration</button>{\" \"}\r\n          </NavLink>\r\n        </form>\r\n      );\r\n    }\r\n  //---------------------------------------------------------\r\n\r\n    return (\r\n      <div className={autiruzationStyle.logout}>\r\n        <LogFormWithRed onSubmit={props.loginFormSubmit} />\r\n      </div>\r\n    );\r\n  }\r\n  //---------------------------------------------------------\r\n  return <> {props.userData.isLoggedIn ? logined() : notLogined()}</>;\r\n}\r\n\r\nexport default React.memo( AutorizationDrawer);\r\n","//import { cloneDeep } from \"lodash\";\r\n// ========================================\r\nconst TRY_LOGIN = \"TRY-LOGIN\";\r\nconst TRY_LOGOUT = \"TRY-LOGOUT\";\r\nconst LOGIN_FORM_SUBMIT = \"LOGIN-FORM-SUBMIT\";\r\n\r\n// ========================================\r\nexport const tryLogin = (data) => ({ type: TRY_LOGIN, data });\r\n// --------------\r\n// --------------\r\nexport const loginFormSubmit = (elem) => ({ type: LOGIN_FORM_SUBMIT, elem });\r\n// --------------\r\nexport const tryLogout = () => ({ type: TRY_LOGOUT });\r\n\r\n// ========================================\r\n\r\nconst init = {\r\n  userData: {\r\n    token: \"\",\r\n    inputLogin: \"\",\r\n    inputPassword: \"\",\r\n    isLoggedIn: false,\r\n    loginData: {\r\n      userName: \"\",\r\n      avatar: \"\",\r\n    },\r\n  },\r\n};\r\n// ========================================\r\n\r\nfunction autorizationReduser(state = init, action) {\r\n  switch (action.type) {\r\n    // --------------\r\n\r\n    case TRY_LOGIN: {\r\n      return _loginSend(state, action);\r\n    }\r\n    // --------------\r\n\r\n    case LOGIN_FORM_SUBMIT: {\r\n      return _loginFormSubmit(state, action);\r\n    }\r\n    // --------------\r\n\r\n    case TRY_LOGOUT: {\r\n      return _logout(state, action);\r\n    }\r\n    // --------------\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// ========================================\r\n\r\n// ---------------------------------------\r\nfunction _loginSend(state, action) {\r\n  return {\r\n    ...state,\r\n    userData: {\r\n      ...state.userData,\r\n      isLoggedIn: true,\r\n      inputLogin: \"\",\r\n      inputPassword: \"\",\r\n      token: action.data.token,\r\n      loginData: {\r\n        userName: action.data.userName,\r\n        avatar: action.data.avatar,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\n// ---------------------------------------\r\n// ---------------------------------------\r\nfunction _loginFormSubmit (state, action) {\r\n//if (!action.elem.login) { return state} \r\n  return {\r\n    ...state,\r\n    userData: {\r\n      ...state.userData,\r\n      isLoggedIn: true,\r\n      inputLogin: \"\",\r\n      inputPassword: \"\",\r\n      token: 'agagag',\r\n      loginData: {\r\n        userName: action.elem.login,\r\n      },\r\n    },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _logout(state, action) {\r\n  return {\r\n    ...state,\r\n    userData: {\r\n      ...state.userData,\r\n      isLoggedIn: false,\r\n      inputLogin: \"\",\r\n      inputPassword: \"\",\r\n      token: \"\",\r\n      loginData: {\r\n        userName: \"\",\r\n        avatar: \"\",\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default autorizationReduser;\r\n","import React from \"react\";\r\n\r\nimport AutorizationDrawer from \"./autorizationDrawer\";\r\nimport { connect } from \"react-redux\";\r\nimport * as axios from \"axios\";\r\nimport { Redirect, NavLink, withRouter } from \"react-router-dom\";\r\nimport {\r\n  tryLogin,\r\n  tryLogout,\r\n  loginFormSubmit,\r\n} from \"../../../store/autorizationReduser\";\r\n\r\nimport { compose } from \"redux\";\r\n\r\nclass AutorizationContainerConnect extends React.Component {\r\n  regButtonPress = () => {\r\n    return <Redirect to={\"/register\"} />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <AutorizationDrawer\r\n          userData={this.props.userData}\r\n          editLoginArea={this.props.editLoginArea}\r\n          editPasswordArea={this.props.editPasswordArea}\r\n          tryLogout={this.props.tryLogout}\r\n          regButtonPress={this.regButtonPress}\r\n          loginFormSubmit={this.props.loginFormSubmit}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\n// ========================================\r\nconst mapStateToProps = (state) => {\r\n  return { userData: state.autorizationPart.userData };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { tryLogin, tryLogout, loginFormSubmit }),\r\n  withRouter\r\n)(AutorizationContainerConnect);\r\n","import '../../App.css'\r\nimport AutorizationContainer from './authorization/autorizationContainer'\r\n\r\nfunction Header (props) {\r\n  return (\r\n    \r\n    <header className='headS'>\r\n      <img className='mainIMG' src='https://upload.wikimedia.org/wikipedia/commons/thumb/1/1c/DC_Comics_logo.png/600px-DC_Comics_logo.png' />\r\n      <div className='pap'>  </div>\r\n      <div className='login'><AutorizationContainer /> </div> \r\n    </header>\r\n\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import friendPanelStyle from \"./friendPanel.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction CompactFriendPanel(props) {\r\n  function logined() {\r\n    return (\r\n      <div className={friendPanelStyle.main}>\r\n        {\" \"}\r\n        {props.friendPanel.map((friend, count) => (\r\n          <NavLink to={`/profile/${friend.id}`}>\r\n            {\" \"}\r\n            <img key={count} src={friend.picture} alt={\"friendPic\"} />{\" \"}\r\n          </NavLink>\r\n        ))}{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function userNotLogined() {}\r\n\r\n  return <> {props.isLoggedIn ? logined() : userNotLogined()} </>;\r\n}\r\n\r\nexport default CompactFriendPanel;\r\n","import { serverAL } from \"../api/api\";\r\n\r\n// ========================================\r\nconst UPDATE_FRIEND_PANEL = \"UPDATE-FRIEND-PANEL/COLONY-REDUCER\";\r\n// ========================================\r\nexport const udpateFriends = (data) => ({\r\n  type: UPDATE_FRIEND_PANEL,\r\n  data,\r\n});\r\n// ========================================s\r\nconst init = {\r\n  friendPanel: [],\r\n};\r\n\r\nfunction leftColonePartReducer(state = init, action) {\r\n  switch (action.type) {\r\n    // --------------\r\n\r\n    case UPDATE_FRIEND_PANEL: {\r\n      return _setAvatars(state, action);\r\n    }\r\n    // --------------\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// ========================================\r\nfunction _setAvatars(state, action) {\r\n  return {\r\n    ...state,\r\n    friendPanel: [...action.data],\r\n  };\r\n}\r\n// ---------------------------------------\r\nexport const updateFriendsTC = (data) => async (dispatch) => {\r\n  try {\r\n    const wallPostSucces = await serverAL.getSubscrUsers();\r\n\r\n    dispatch(udpateFriends(wallPostSucces.data));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n// ---------------------------------------\r\n\r\nexport default leftColonePartReducer;\r\n","import { connect } from \"react-redux\";\r\nimport React from \"react\";\r\nimport CompactFriendPanel from \"./friendsPanelDrawer\";\r\nimport { updateFriendsTC } from \"../../../store/leftColonyReducer\";\r\n\r\nfunction FriendsPannelConnect(props) {\r\n  React.useEffect(() => {\r\n    if (props.isLoggedIn) {\r\n      props.updateFriendsTC();\r\n    }\r\n  }, [props.isLoggedIn]);\r\n\r\n  return <CompactFriendPanel {...props} />;\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    friendPanel: state.leftColonePart.friendPanel,\r\n    isLoggedIn: state.autorizationPart.userData.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst FriendColoneContainer = connect(mapStateToProps, { updateFriendsTC })(\r\n  FriendsPannelConnect\r\n);\r\n\r\nexport default FriendColoneContainer;\r\n","import '../../App.css'\r\n\r\nimport FriendColoneContainer from './friendPanel/friendsPanelContainer'\r\nimport leftColone from './sidebar.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction Sidebar (props) {\r\n  // <LeftButton href='/settings' name='Settings' />\r\n  //<LeftButton href='/music' name='Music' />\r\n\r\n  return (\r\n    <div className='columLeft'>\r\n        <LeftButton href='/users' name='Users' />\r\n      <LeftButton href='/profile' name='Profile' />\r\n      <LeftButton href='/message' name='Massage' />\r\n      <LeftButton href='/news' name='News' />\r\n      \r\n    \r\n\r\n      <FriendColoneContainer store={props.store} />\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction LeftButton (props) {\r\n  return (\r\n    <div className={leftColone.button}>\r\n      <NavLink to={props.href} activeClassName={leftColone.active}>\r\n        {props.name}{' '}\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import { cloneDeep } from \"lodash\";\r\nimport { serverAL } from \"../api/api\";\r\nimport { changeLoadStatus } from \"./commonReduser\";\r\n\r\n// ========================================\r\n\r\nconst SET_USERS_LIST_PM = \"SET-USERS-LIST-PM/message-part\";\r\nconst SET_CURRENT_DIEALOGS_PM = \"SET-CURRENT-DIEALOGS-PM/message-part\";\r\nconst CHANGE_ISSELECTED_USER = \"CHANGE_ISSELECTED_USER/message-part\";\r\nconst ADD_NEW_PM = \"ADD-NEW-PM/message-part\";\r\n// ========================================\r\n\r\nexport const setUsersListPM = (data) => ({\r\n  type: SET_USERS_LIST_PM,\r\n  data,\r\n});\r\nexport const setCuttentDialog = (data) => ({\r\n  type: SET_CURRENT_DIEALOGS_PM,\r\n  data,\r\n});\r\nexport const setIsUserSelected = (bul) => ({\r\n  type: SET_CURRENT_DIEALOGS_PM,\r\n  bul,\r\n});\r\nexport const addSendPm = (data) => ({\r\n  type: ADD_NEW_PM,\r\n  data,\r\n});\r\n// ========================================\r\n\r\nconst init = {\r\n  usersPMlist: [{ id: 0, firstName: \"Borya\", picture: \"\" }],\r\n  selectedDiadlog: [\r\n    {\r\n      text: \"\",\r\n      avatar: \"\",\r\n      pmId: \"\",\r\n      firstName: \"\",\r\n    },\r\n  ],\r\n  pmSettings: {\r\n    isUserSelected: false,\r\n  },\r\n};\r\n\r\n// ========================================\r\nfunction messageReducer(state = init, action) {\r\n  switch (action.type) {\r\n    // --------------\r\n\r\n    // --------------\r\n    case SET_USERS_LIST_PM: {\r\n      return _setUsersList(state, action);\r\n    }\r\n    // --------------\r\n    case SET_CURRENT_DIEALOGS_PM: {\r\n      return _setCurrentDialog(state, action);\r\n    }\r\n    // --------------\r\n    case CHANGE_ISSELECTED_USER: {\r\n      return _switchIsSelected(state, action);\r\n    }\r\n    // --------------\r\n    case ADD_NEW_PM: {\r\n      return _pushPM(state, action);\r\n    }\r\n    // --------------\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// ========================================\r\n\r\n// ---------------------------------------\r\n\r\n// ---------------------------------------\r\nfunction _switchIsSelected(state, action) {\r\n  return {\r\n    ...state,\r\n    changedText: { ...state.changedText, PMtext: action.text },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _setUsersList(state, action) {\r\n  return {\r\n    ...state,\r\n    usersPMlist: [...action.data],\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _setCurrentDialog(state, action) {\r\n  return {\r\n    ...state,\r\n    selectedDiadlog: [...action.data],\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _pushPM(state, action) {\r\n  return {\r\n    ...state,\r\n    selectedDiadlog: [...state.selectedDiadlog, action.data],\r\n  };\r\n}\r\n// ---------------------------------------\r\nexport const getUsersPMlistTC = (data) => async (dispatch) => {\r\n  try {\r\n    dispatch(changeLoadStatus(true));\r\n    const userAnsw = await serverAL.getSubscrUsers();\r\n\r\n    dispatch(setUsersListPM(userAnsw.data));\r\n    dispatch(changeLoadStatus(false));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const getCurrentDialogPM = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch(changeLoadStatus(true));\r\n    const dialogsAnsw = await serverAL.getCurrPM(id);\r\n\r\n    dispatch(setCuttentDialog(dialogsAnsw));\r\n    dispatch(changeLoadStatus(false));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const newPM = (userID, data) => async (dispatch) => {\r\n  try {\r\n    dispatch(changeLoadStatus(false));\r\n\r\n    const wallPostSucces = await serverAL.sendPM(userID, data);\r\n\r\n    const updateWallPost = await serverAL.getQuotebyUsrId(userID);\r\n    dispatch(updateWallPost);\r\n    dispatch(changeLoadStatus(true));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport default messageReducer;\r\n","import message from \"./message.module.css\";\r\nimport React, { useState } from \"react\";\r\nimport { BrowserRouter, Route, NavLink } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { bigField, inputCondition } from \"../../modules/inputErorPanel/input\";\r\nfunction MessagePage(props) {\r\n  const userListForPM = props.usersPMlist.map((current, count) => {\r\n    return (\r\n      <NavLink\r\n        to={`/message/${current.id}`}\r\n        activeClassName={message.active}\r\n        key={current.id}\r\n      >\r\n        <div>{current.firstName}</div>\r\n      </NavLink>\r\n    );\r\n  });\r\n\r\n  //--------------------------------------------------------\r\n  const choosenPM = props.selectedDiadlog.map((current, count) => {\r\n    return (\r\n      <div className={message.oneMess} >\r\n        <img src={current.avatar} className={message.ava} />\r\n        <span\r\n          key={current.pmId}\r\n          className={message.text}\r\n        >{`${current.firstName}: ${current.text}`}</span>\r\n      </div>\r\n    );\r\n  });\r\n  //--------------------------------------------------------\r\n\r\n  const sendPanel = (props) => {\r\n    const { pristine, submitting } = props;\r\n    return (\r\n      <form onSubmit={props.handleSubmit}>\r\n        <Field\r\n          component=\"textarea\"\r\n          label={`What on mind?`}\r\n          component={bigField}\r\n          validate={[inputCondition.required]}\r\n          name=\"text\"\r\n        />\r\n        <br />\r\n        <button type=\"submit\" disabled={pristine || submitting}>\r\n          Send\r\n        </button>\r\n      </form>\r\n    );\r\n  };\r\n  //----------------\r\n  const SendPostForm = reduxForm({\r\n    form: \"wallPostForm\",\r\n  })(sendPanel);\r\n  //--------------------------------------------------------\r\n  return (\r\n    <div className={message.main}>\r\n      {\" \"}\r\n      <div className={message.autor}>{userListForPM}</div>\r\n      <div className={message.dialogMassage}>\r\n        {choosenPM}\r\n        <div className={message.inputArea}>\r\n          {\" \"}\r\n          <SendPostForm onSubmit={props.sendMassageToServer} />{\" \"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(MessagePage);\r\n","import { connect } from \"react-redux\";\r\nimport React, { useEffect } from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport {\r\n  getUsersPMlistTC,\r\n  getCurrentDialogPM,\r\n  setIsUserSelected,\r\n  addSendPm,\r\n} from \"../../../store/messageReducer\";\r\n\r\nimport MassagePage from \"./messageDrawer\";\r\nimport LoadingModule from \"../../modules/loader/loader\";\r\nimport { serverAL } from \"../../../api/api\";\r\n\r\nfunction MessageContainerConnect(props) {\r\n  const pmID = props.match.params.userPMId;\r\n\r\n  useEffect(() => {\r\n    props.getUsersPMlistTC();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isNaN(pmID)) {\r\n      props.getCurrentDialogPM(pmID);\r\n    } else {\r\n      props.getCurrentDialogPM(1);\r\n    }\r\n  }, [pmID]);\r\n\r\n  async function sendMassageToServer(data) {\r\n    try {\r\n      const getPM = await serverAL.sendPM(pmID, data);\r\n      props.addSendPm(getPM);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {props.isSomethingLoading ? <LoadingModule /> : null}\r\n      <MassagePage {...props} sendMassageToServer={sendMassageToServer} />{\" \"}\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    usersPMlist: state.massagePart.usersPMlist,\r\n    selectedDiadlog: state.massagePart.selectedDiadlog,\r\n    pmSettings: state.massagePart.pmSettings,\r\n    isSomethingLoading: state.commonPart.loadingModules.isSomethingLoading,\r\n  };\r\n};\r\n\r\nconst MassagePageContainer = compose(\r\n  connect(mapStateToProps, {\r\n    getUsersPMlistTC,\r\n    getCurrentDialogPM,\r\n    setIsUserSelected,\r\n    addSendPm,\r\n  }),\r\n  withRouter,\r\n  React.memo\r\n)(MessageContainerConnect);\r\n\r\nexport default MassagePageContainer;\r\n","import { serverAL } from \"../api/api\";\r\n\r\n// ========================================\r\nconst WALL_POST_PUBLISH = \"WALL-POST-PUBLISH\";\r\nconst TEXTAREA_EDIT_WALL = \"TEXTAREA-EDIT-WALL\";\r\nconst GET_USER = \"GET-USER\";\r\nconst LODAER_WAITER_CHANGER = \"LODAER-WAITER-CHANGER\";\r\nconst EDIT_QUOTE_TEXT = \"EDIT-QUOTE-TEXT\";\r\nconst ENABLE_EDIT_ELEMENT = \"ENABLE_EDIT_ELEMENT\";\r\nconst DISABLE_EDIT_ELEMENT = \"DISABLE_EDIT_ELEMENT\";\r\nconst EDIT_CURR_ELEM = \"EDIT-CURR-ELEM\";\r\nconst GET_USER_WALL = \"GET-USER-WALL\";\r\nconst WALL_LIKE_BUTTON_CHANGE = \"WALL-LIKE-BUTTON-CHANGE\";\r\n// ========================================\r\nexport const wallPostSend = (text) => ({ type: WALL_POST_PUBLISH, text });\r\n//----------------------------\r\nexport const wallPostEdit = (text) => ({\r\n  type: TEXTAREA_EDIT_WALL,\r\n  text: text,\r\n});\r\n//----------------------------\r\nexport const getUser = (text) => ({ type: GET_USER, text });\r\n// --------------\r\nexport const changeIsFinished = (isFinished) => ({\r\n  type: LODAER_WAITER_CHANGER,\r\n  isFinished: isFinished,\r\n});\r\n// --------------\r\nexport const editQuote = (text) => ({ type: EDIT_QUOTE_TEXT, text });\r\n// --------------\r\nexport const enableEditElement = (elem) => ({\r\n  type: ENABLE_EDIT_ELEMENT,\r\n  elem,\r\n});\r\n// --------------\r\nexport const diesableEditElement = () => ({\r\n  type: DISABLE_EDIT_ELEMENT,\r\n});\r\n// --------------\r\nexport const editProfilePart = (text) => ({\r\n  type: EDIT_CURR_ELEM,\r\n  text,\r\n});\r\n// --------------\r\nexport const getUserWallPost = (data) => ({\r\n  type: GET_USER_WALL,\r\n  data,\r\n});\r\n// --------------\r\nexport const likeChange = (userid, postId) => ({\r\n  type: WALL_LIKE_BUTTON_CHANGE,\r\n  userid,\r\n  postId,\r\n});\r\n// ========================================\r\n\r\nconst init = {\r\n  // ---------------------------------------\r\n  postsWall: [\r\n    {\r\n      id: 0,\r\n      picture: \"loading\",\r\n      text: \"loading\",\r\n      createdAt: \"loading\",\r\n      likes: false,\r\n    },\r\n  ],\r\n  // ---------------------------------------\r\n  changedText: {\r\n    wallText: \"\",\r\n    isLoadinFinished: false,\r\n    whatEdit: null,\r\n    isEditorOneNeed: false,\r\n  },\r\n  // ---------------------------------------\r\n  userData: {\r\n    id: `loading`,\r\n    title: `loading`,\r\n    firstName: `loading`,\r\n    lastName: `loading`,\r\n    email: `loading`,\r\n    dateOfBirth: `loading`,\r\n    registerDate: `loading`,\r\n    phone: `loading`,\r\n    quote: ``,\r\n    picture: ``,\r\n    adressCity: ``,\r\n    adressCountry: ``,\r\n  },\r\n};\r\n// ========================================\r\n\r\nfunction bodyReducer(state = init, action) {\r\n  switch (action.type) {\r\n    // --------------\r\n\r\n    case TEXTAREA_EDIT_WALL: {\r\n      return _textAreaEditWall(state, action);\r\n    }\r\n    // --------------\r\n    case WALL_POST_PUBLISH: {\r\n      return _postWallComment(state, action);\r\n    }\r\n    // --------------\r\n    case GET_USER: {\r\n      return _getUser(state, action);\r\n    }\r\n    // --------------\r\n    case GET_USER_WALL: {\r\n      return _getUsrWall(state, action);\r\n    }\r\n    // --------------\r\n    case LODAER_WAITER_CHANGER: {\r\n      return _loaderWaitSwitch(state, action);\r\n    }\r\n    // --------------\r\n    case EDIT_QUOTE_TEXT: {\r\n      return _editChangeStatus(state, action);\r\n    }\r\n    // --------------\r\n    case ENABLE_EDIT_ELEMENT: {\r\n      return _enableEditElement(state, action);\r\n    }\r\n    // --------------\r\n    case DISABLE_EDIT_ELEMENT: {\r\n      return _disableEditElement(state, action);\r\n    }\r\n    // --------------\r\n    case EDIT_CURR_ELEM: {\r\n      return _editCurrElem(state, action);\r\n    }\r\n    // --------------\r\n    case WALL_LIKE_BUTTON_CHANGE: {\r\n      return _changeLike(state, action);\r\n    }\r\n\r\n    // --------------\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// ========================================\r\n\r\n// ---------------------------------------\r\nfunction _textAreaEditWall(state, action) {\r\n  return {\r\n    ...state,\r\n    changedText: { ...state.changedText, wallText: action.text },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _postWallComment(state, action) {\r\n  const curr = {\r\n    avatarImg:\r\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSq_I0JFO2DxoAV3J-sI7ajtx0qW0Q5neaY_A&usqp=CAU\",\r\n    text: action.text.postArea,\r\n    date: \"15.04.21\",\r\n    likes: 0,\r\n  };\r\n\r\n  return {\r\n    ...state,\r\n    postsWall: [...state.postsWall, curr],\r\n    changedText: { ...state.changedText, wallText: \"\" },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _getUser(state, action) {\r\n  return {\r\n    ...state,\r\n    userData: { ...action.text },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _loaderWaitSwitch(state, action) {\r\n  return {\r\n    ...state,\r\n    changedText: { ...state.changedText, isLoadinFinished: action.isFinished },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _editChangeStatus(state, action) {\r\n  return {\r\n    ...state,\r\n    userData: { ...state.userData, quote: action.text },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _enableEditElement(state, action) {\r\n  return {\r\n    ...state,\r\n    changedText: {\r\n      ...state.changedText,\r\n      isEditorOneNeed: true,\r\n      whatEdit: action.elem,\r\n    },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _disableEditElement(state, action) {\r\n  return {\r\n    ...state,\r\n    changedText: {\r\n      ...state.changedText,\r\n      isEditorOneNeed: false,\r\n      whatEdit: \"\",\r\n    },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _editCurrElem(state, action) {\r\n  return {\r\n    ...state,\r\n    userData: { ...state.userData, [state.changedText.whatEdit]: action.text },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _getUsrWall(state, action) {\r\n  return {\r\n    ...state,\r\n    postsWall: [...action.data],\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _changeLike(state, action) {\r\n  return {\r\n    ...state,\r\n    postsWall: state.postsWall.map((now, id) => {\r\n      if (now.id === action.postId) {\r\n        now.likes = !now.likes;\r\n      }\r\n      return now;\r\n    }),\r\n  };\r\n}\r\n\r\n// ---------------------------------------\r\n// ========================================\r\n\r\nexport const getUserByIdTC =\r\n  (userID = 1) =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(changeIsFinished(false));\r\n\r\n      const userAnswer = await serverAL.getUserbyId(userID);\r\n      dispatch(getUser(userAnswer));\r\n\r\n      const userQuote = await serverAL.getQuotebyUsrId(userID);\r\n      dispatch(getUserWallPost(userQuote));\r\n\r\n      dispatch(changeIsFinished(true));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n// ---------------------------------------\r\nexport const updateQuteServer = (id, whatEdit, text) => async (dispatch) => {\r\n  try {\r\n    dispatch(changeIsFinished(false));\r\n    await serverAL.updateElement(id, whatEdit, text);\r\n    dispatch(diesableEditElement());\r\n    dispatch(changeIsFinished(true));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n// ---------------------------------------\r\nexport const likeChangeTC =\r\n  (userID, postID, buttonEvent, subBool) => async (dispatch) => {\r\n    try {\r\n      buttonEvent.target.disabled = true;\r\n      dispatch(changeIsFinished(false));\r\n      await serverAL.likeButtPressed(userID, postID, !subBool);\r\n      dispatch(likeChange(userID, postID));\r\n      buttonEvent.target.disabled = false;\r\n      dispatch(changeIsFinished(true));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n// ---------------------------------------\r\nexport const newWallPostTC = (userID, data) => async (dispatch) => {\r\n  try {\r\n    dispatch(changeIsFinished(false));\r\n\r\n    const wallPostSucces = await serverAL.newWallPost(userID, data);\r\n\r\n    const updateWallPost = await serverAL.getQuotebyUsrId(userID);\r\n    dispatch(getUserWallPost(updateWallPost));\r\n    dispatch(changeIsFinished(true));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n// ---------------------------------------\r\n// ========================================\r\nexport default bodyReducer;\r\n","import massWall from './massWall.module.css'\r\nimport React from \"react\";\r\nconst PostHistory = React.memo( (props) => {\r\n  \r\n  return (\r\n    <div className={massWall.history}>\r\n      <img src={props.picture} />\r\n      <div>\r\n      <div>  <div className={massWall.clock}>{props.createdAt}</div>\r\n     \r\n       \r\n        <button className= {props.likes ? massWall.buttActive : massWall.buttPass } onClick={props.oncl}\r\n            \r\n            onClick={(e) => {\r\n              props.likeChangeTC(props.userId, props.postId, e, props.likes);\r\n            }}\r\n>Like { props.likes ? `🖒`: `` }</button></div>\r\n        <h3> {props.text}</h3>\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n})\r\n\r\n\r\n\r\nexport default PostHistory\r\n","import userStyle from \"./user.module.css\";\r\nimport newPost from \"./newpost.module.css\";\r\nimport PostHistory from \"./history/massageWall\";\r\nimport React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  bigField,\r\n  inputCondition,\r\n} from \"../../modules/inputErorPanel/input\";\r\n\r\nconst maxLength50 = inputCondition.maxLength(50);\r\nconst minLength10 = inputCondition.minLength(10);\r\n\r\nconst Profile = (props) => {\r\n  const userData = props.userData;\r\n  const postsWall = props.postsWall;\r\n  // ---------------------------------------\r\n  // ========================================\r\n\r\n  //elem - stringТ\r\n  const doubleClickHolder = (stringName) => {\r\n    console.log(userData.picture);\r\n\r\n    if (!props.changedText.isEditorOneNeed) {\r\n      props.enableEditElement(stringName);\r\n    }\r\n  };\r\n  // --------------------изменить примитив при двойном нажатии-------------------------\r\n  const DrawEditor = () => {\r\n    const areaNewPost = React.createRef();\r\n    const nothing = () => {\r\n      return <></>;\r\n    };\r\n    const textForm = () => {\r\n      return (\r\n        <div>\r\n          {\" \"}\r\n          <input\r\n            ref={areaNewPost}\r\n            onChange={() => props.editProfilePart(areaNewPost.current.value)}\r\n            autoFocus={true}\r\n            value={props.userData[props.changedText.whatEdit]}\r\n            onBlur={() => {\r\n              props.updateQuoteOnServer();\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    };\r\n    // state whatEdit IsEditorNeed isAnotherRedacted\r\n    //double click - isAnotherRedacted? IsEditorNeed=true, whatEdit\r\n\r\n    //\r\n    return (\r\n      <>\r\n        {props.changedText.isLoadinFinished && props.changedText.isEditorOneNeed\r\n          ? textForm()\r\n          : nothing()}\r\n      </>\r\n    );\r\n  };\r\n  // ========================================\r\n\r\n  const formWall = postsWall.map((post, count) => (\r\n    <PostHistory\r\n      key={count}\r\n      picture={post.picture}\r\n      text={post.text}\r\n      createdAt={post.createdAt}\r\n      likes={post.likes}\r\n      postId={post.id}\r\n      userId={post.userId}\r\n      likeChangeTC={props.likeChangeTC}\r\n    />\r\n  ));\r\n\r\n  // ---------------------------------------\r\n  const currenUserData = (\r\n    <div className={userStyle.userdataBlock}>\r\n      <img\r\n        onDoubleClick={() => doubleClickHolder(`picture`)}\r\n        src={userData.picture}\r\n      />\r\n      <div>\r\n        <div>id: {userData.id}</div>\r\n        <div>\r\n          Name:\r\n          <span onDoubleClick={() => doubleClickHolder(`title`)}>\r\n            {` ${userData.title}`}{\" \"}\r\n          </span>\r\n          <span onDoubleClick={() => doubleClickHolder(`firstName`)}>\r\n            {\" \"}\r\n            {`${userData.firstName}`}{\" \"}\r\n          </span>\r\n          <span onDoubleClick={() => doubleClickHolder(`lastName`)}>\r\n            {\" \"}\r\n            {`${userData.lastName}`}{\" \"}\r\n          </span>\r\n        </div>\r\n        <div onDoubleClick={() => doubleClickHolder(`email`)}>\r\n          {\" \"}\r\n          Mail: {userData.email}\r\n        </div>\r\n        <div onDoubleClick={() => doubleClickHolder(`registerDate`)}>\r\n          {\" \"}\r\n          Register: {userData.registerDate}\r\n        </div>\r\n        <div onDoubleClick={() => doubleClickHolder(`phone`)}>\r\n          {\" \"}\r\n          Phone: {userData.phone}\r\n        </div>\r\n        <div>\r\n          Country:\r\n          <span onDoubleClick={() => doubleClickHolder(`adressCountry`)}>\r\n            {\" \"}\r\n            {userData.adressCountry}{\" \"}\r\n          </span>\r\n          City:\r\n          <span onDoubleClick={() => doubleClickHolder(`adressCity`)}>\r\n            {\" \"}\r\n            {userData.adressCity}{\" \"}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  // ---------------------------------------\r\n  //---------------------------------------------------------\r\n  const SendPostForm = reduxForm({\r\n    form: \"wallPostForm\",\r\n  })(SendPost);\r\n  //---------------------------------------------------------\r\n  //wallPostSend\r\n  function SendPost(props) {\r\n    const { pristine, submitting } = props;\r\n    return (\r\n      <form className={newPost.newpost} onSubmit={props.handleSubmit}>\r\n        <div className={userStyle.editText}>\r\n          Двойной клик по полю для редактирования\r\n        </div>\r\n        <h2> My posts</h2>\r\n        <Field\r\n          className={newPost.inputt}\r\n          component=\"textarea\"\r\n          label={`What on mind?`}\r\n          component={bigField}\r\n          validate={[inputCondition.required, minLength10, maxLength50]}\r\n          name=\"text\"\r\n        />\r\n        <br />\r\n        <button type=\"submit\" disabled={pristine || submitting}>\r\n          {\" \"}\r\n          Send\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  // ========================================\r\n\r\n  // ========================================\r\n  return (\r\n    <div>\r\n      <img src=\"https://static3.depositphotos.com/1000454/256/i/600/depositphotos_2567474-stock-photo-wide-panorama-of-french-alps.jpg\" />\r\n\r\n      <div>\r\n        {\" \"}\r\n        <div onDoubleClick={() => doubleClickHolder(`quote`)}>\r\n          {userData.quote}\r\n        </div>{\" \"}\r\n      </div>\r\n      {currenUserData}\r\n      <DrawEditor />\r\n      <SendPostForm onSubmit={props.wallSend} />\r\n      {formWall}\r\n    </div>\r\n  );\r\n};\r\n// ==================Profile end======================\r\n\r\n// ========================================\r\n\r\nexport default React.memo(Profile);\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  wallPostSend,\r\n  wallPostEdit,\r\n  getUser,\r\n  changeIsFinished,\r\n  getUserByIdTC,\r\n  editQuote,\r\n  updateQuteServer,\r\n  editProfilePart,\r\n  enableEditElement,\r\n  likeChangeTC,\r\n  newWallPostTC,\r\n} from \"../../../store/profileReducer\";\r\nimport Profile from \"./profileDrawer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingModule from \"../../modules/loader/loader\";\r\n\r\nimport { compose } from \"redux\";\r\n\r\nfunction ProfileConnectContainer(props) {\r\n  const usrID = props.match.params.userId;\r\n  const usrFunc = props.getUserByIdTC;\r\n \r\n  useEffect(() => {\r\n    usrFunc(usrID);\r\n  }, [usrID, usrFunc]);\r\n\r\n  const updateQuoteOnServer = () => {\r\n    props.updateQuteServer(\r\n      props.userData.id,\r\n      props.changedText.whatEdit,\r\n      props.userData[props.changedText.whatEdit]\r\n    );\r\n  };\r\n\r\n  const wallSend = (data) => {\r\n    props.newWallPostTC(props.userData.id, data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.changedText.isLoadinFinished ? null : <LoadingModule />}\r\n\r\n      <Profile\r\n        changedText={props.changedText}\r\n        userData={props.userData}\r\n        postsWall={props.postsWall}\r\n        wallSend={wallSend}\r\n        wallPostEdit={props.wallPostEdit}\r\n        getUser={props.getUser}\r\n        editQuote={props.editQuote}\r\n        updateQuoteOnServer={updateQuoteOnServer}\r\n        enableEditElement={props.enableEditElement}\r\n        editProfilePart={props.editProfilePart}\r\n        likeChangeTC={props.likeChangeTC}\r\n        newWallPostTC={props.newWallPostTC}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n// ========================================\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    changedText: state.bodyPart.changedText,\r\n    userData: state.bodyPart.userData,\r\n    postsWall: state.bodyPart.postsWall,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    wallPostSend,\r\n    wallPostEdit,\r\n    getUser,\r\n    changeIsFinished,\r\n    getUserByIdTC,\r\n    editQuote,\r\n    updateQuteServer,\r\n    enableEditElement,\r\n    editProfilePart,\r\n    likeChangeTC,\r\n    newWallPostTC,\r\n  }),\r\n  withRouter\r\n)(ProfileConnectContainer);\r\n","import { cloneDeep } from \"lodash\";\r\nimport { serverAL } from \"../api/api\";\r\n\r\n// ========================================\r\nconst CHANGE_FOLLOW = \"CHANGE-FOLLOW\";\r\nconst GET_MORE_USERS = \"GET-MORE-USERS\";\r\nconst CHANGE_CURRENT_PAGE = \"CHANGE-CURRENT-PAGE\";\r\nconst LODAER_WAITER_CHANGER = \"LODAER-WAITER-CHANGER\";\r\nconst GET_MAX_USERS = \"GET-MAX-USERS\";\r\n\r\n// ========================================\r\nexport const userFollowChange = (id) => ({\r\n  type: CHANGE_FOLLOW,\r\n  id: id,\r\n});\r\n// --------------\r\nexport const updateUserChange = (id) => ({\r\n  type: GET_MORE_USERS,\r\n  id: id,\r\n});\r\n// --------------\r\nexport const changeCurPage = (id) => ({\r\n  type: CHANGE_CURRENT_PAGE,\r\n  id: id,\r\n});\r\n// --------------\r\nexport const changeIsFinished = (isFinished) => ({\r\n  type: LODAER_WAITER_CHANGER,\r\n  isFinished: isFinished,\r\n});\r\n// --------------\r\nexport const getMaxUsers = (count) => ({\r\n  type: GET_MAX_USERS,\r\n  count,\r\n});\r\n// --------------\r\n\r\n//------------------------------------------\r\nconst friendTest = [\r\n  {\r\n    id: 111,\r\n    isFollow: false,\r\n    firstName: \"Борян\",\r\n    lastName: \"Полякович\",\r\n    email: \"nicituEbal@mail\",\r\n    title: \"mr\",\r\n    picture: \"https://cdn.discordapp.com/emojis/814691159544561685.png?v=1\",\r\n  },\r\n  {\r\n    id: 222,\r\n    isFollow: false,\r\n    firstName: \"Cаня\",\r\n    lastName: \"зауральский1087\",\r\n    email: \"nicituEbal@mail\",\r\n    title: \"mr\",\r\n    picture: \"https://cdn.discordapp.com/emojis/814691159544561685.png?v=1\",\r\n  },\r\n  {\r\n    id: 333,\r\n    isFollow: false,\r\n    firstName: \"Никита\",\r\n    lastName: \"Питерский\",\r\n    email: \"nicituEbal@mail\",\r\n    title: \"mr\",\r\n    picture: \"https://cdn.discordapp.com/emojis/814691159544561685.png?v=1\",\r\n  },\r\n  {\r\n    id: 444,\r\n    isFollow: false,\r\n    firstName: \"Барак\",\r\n    lastName: \"Обэма\",\r\n    email: \"russkievpered@mail\",\r\n    title: \"mr\",\r\n    picture: \"https://cdn.discordapp.com/emojis/814691159544561685.png?v=1\",\r\n  },\r\n];\r\n// ========================================\r\n\r\nconst init = {\r\n  usersList: [\r\n    {\r\n      id: 1,\r\n      isFollow: false,\r\n      firstName: \"Борян\",\r\n      lastName: \"Полякович\",\r\n      email: \"nicituEbal@mail\",\r\n      title: \"mr\",\r\n      picture: \"https://cdn.discordapp.com/emojis/814691159544561685.png?v=1\",\r\n      adressCity: \"gaga\",\r\n      adressCountry: \"baba\",\r\n      quote: \"waaaa wa wa\",\r\n    },\r\n  ],\r\n  pageSettings: {\r\n    currentPage: 1,\r\n    allUsersCount: 25,\r\n    maxUsersAtPage: 5,\r\n    isLoadinFinished: false,\r\n  },\r\n};\r\n// ========================================\r\nfunction usersReducer(state = init, action) {\r\n  switch (action.type) {\r\n    // --------------\r\n\r\n    case CHANGE_FOLLOW: {\r\n      return _changeFollowed(state, action);\r\n    }\r\n    // --------------\r\n    case GET_MORE_USERS: {\r\n      return _getUsrs(state, action);\r\n    }\r\n\r\n    // --------------\r\n    case CHANGE_CURRENT_PAGE: {\r\n      return _usersPageSwitch(state, action);\r\n    }\r\n    // --------------\r\n    case LODAER_WAITER_CHANGER: {\r\n      return _loaderWaitSwitch(state, action);\r\n    }\r\n    // --------------\r\n    case GET_MAX_USERS: {\r\n      return _setMaxUsers(state, action);\r\n    }\r\n\r\n    // --------------\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// ========================================\r\n\r\nfunction _changeFollowed(state, action) {\r\n  return {\r\n    ...state,\r\n    usersList: state.usersList.map((now, id) => {\r\n      if (now.id === action.id) {\r\n        now.isFollow = !now.isFollow;\r\n      }\r\n      return now;\r\n    }),\r\n  };\r\n}\r\n// ---------------------------------------\r\n\r\nfunction _getUsrs(state, action) {\r\n  return {\r\n    ...state,\r\n    usersList: [...action.id],\r\n  };\r\n}\r\n\r\n// ---------------------------------------\r\n\r\nfunction _usersPageSwitch(state, action) {\r\n  return {\r\n    ...state,\r\n    pageSettings: { ...state.pageSettings, currentPage: action.id },\r\n  };\r\n}\r\n// ---------------------------------------\r\n\r\nfunction _loaderWaitSwitch(state, action) {\r\n  return {\r\n    ...state,\r\n    pageSettings: {\r\n      ...state.pageSettings,\r\n      isLoadinFinished: action.isFinished,\r\n    },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _setMaxUsers(state, action) {\r\n  return {\r\n    ...state,\r\n    pageSettings: { ...state.pageSettings, allUsersCount: action.count },\r\n  };\r\n}\r\n\r\n// ========================================\r\nexport const getUsersPageThunkCreator =\r\n  (Page = 1, maxUsersAtPage = 5) =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(changeIsFinished(false));\r\n      const userListData = await serverAL.getUsersList(Page, maxUsersAtPage);\r\n      dispatch(getMaxUsers(userListData.count));\r\n      dispatch(updateUserChange(userListData.data));\r\n      dispatch(changeCurPage(Page));\r\n      dispatch(changeIsFinished(true));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n// ---------------------------------------\r\nexport const changeSubscribeThunkCreator =\r\n  (userID, buttonEvent, subBool) => async (dispatch) => {\r\n    try {\r\n      buttonEvent.target.disabled = true;\r\n      dispatch(changeIsFinished(false));\r\n      const buttPressAnswer = await serverAL.buttonPressed(userID, !subBool);\r\n      console.log(buttPressAnswer);\r\n      dispatch(userFollowChange(userID));\r\n      buttonEvent.target.disabled = false;\r\n      dispatch(changeIsFinished(true));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n// ========================================\r\nexport default usersReducer;\r\n","import users from \"./users.module.css\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n// -----------------------------------------\r\nfunction UsersPage(props) {\r\n\r\n  const maxPagesNumber = props.pageSettings.allUsersCount;\r\n  const maxItemsInPage = props.pageSettings.maxUsersAtPage;\r\n\r\n  const pagesToDraw = Math.ceil(maxPagesNumber / maxItemsInPage);\r\n\r\n  //------------------------------\r\n  const pageButtOns = []; \r\n  for (let i = 1; i <= pagesToDraw; i++) {\r\n    pageButtOns.push(\r\n      <span key={i}>\r\n        <button\r\n          className={\r\n            props.pageSettings.currentPage === i //css\r\n              ? users.activeB\r\n              : users.regularB\r\n          }\r\n          onClick={() => props.changePage(i)}\r\n        >\r\n          {i}\r\n        </button>{\" \"}\r\n      </span>\r\n    );\r\n  }\r\n  // ------------------------------\r\n  const formUsers = props.usersList.map((currUsers, count) => {\r\n    return (\r\n      <div className={users.post} key={currUsers.id}>\r\n        <NavLink to={`/profile/${currUsers.id}`}>\r\n          <img\r\n            alt={\"UsersPicture\"}\r\n            src={currUsers.picture}\r\n            onError={(e) => {\r\n              e.target.onerror = null;\r\n              e.target.src =\r\n                \"https://discord.com/assets/dd77cf000a729a9bf0fc03b97e1e4a5d.svg\";\r\n            }}\r\n          />\r\n        </NavLink>\r\n\r\n        <div className={users.name}>\r\n          {`${currUsers.title} ${currUsers.firstName} ${currUsers.lastName}`}\r\n        </div>\r\n\r\n        <div className={users.adress}>\r\n          {` ${currUsers.adressCountry} ${currUsers.adressCity}`}\r\n\r\n          <button\r\n            id={currUsers.id}\r\n            onClick={(e) => {\r\n              props.userFollowChange(currUsers.id, e, currUsers.isFollow);\r\n            }}\r\n          >\r\n            {currUsers.isFollow ? \"UnSubscribe\" : \"Subscribe\"}\r\n          </button>\r\n        </div>\r\n        <div className={users.quote}> {` ${currUsers.quote} `} </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  //-----------------------------------------//-----------------------------------------\r\n\r\n  return (\r\n    <div className={users.main}>\r\n      <div>{pageButtOns}</div>\r\n      {formUsers}\r\n      <div>{pageButtOns}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo( UsersPage);\r\n","import { connect } from \"react-redux\";\r\nimport * as axios from \"axios\";\r\nimport {\r\n  getUsersPageThunkCreator,\r\n  changeSubscribeThunkCreator,\r\n} from \"../../../store/usersReducer\";\r\nimport UsersPage from \"./usersDrawer\";\r\nimport React, { useEffect } from \"react\";\r\nimport LoadingModule from \"../../modules/loader/loader\";\r\nimport { compose } from \"redux\";\r\n\r\nconst UserConnectConreiner = (props) =>  {\r\n  const getUPtc = props.getUsersPageThunkCreator\r\n  const maxUsersAtPage = props.pageSettings.maxUsersAtPage\r\n\r\n  useEffect(() => {\r\n    getUPtc(1, maxUsersAtPage);\r\n  }, [maxUsersAtPage, getUPtc]);\r\n\r\n  \r\n// -----------------------------------------\r\n  const changePage = (Page) => {\r\n    if (Page !== props.pageSettings.currentPage) {\r\n      props.getUsersPageThunkCreator(\r\n        Page,\r\n        props.pageSettings.maxUsersAtPage\r\n      );\r\n    }\r\n  };\r\n  // ========================================\r\n\r\n \r\n    return (\r\n      <>\r\n        {\" \"}\r\n        {props.pageSettings.isLoadinFinished ? null : <LoadingModule />}\r\n        <UsersPage\r\n          pageSettings={props.pageSettings}\r\n          usersList={props.usersList}\r\n          changePage={changePage}\r\n          userFollowChange={props.changeSubscribeThunkCreator}\r\n        />{\" \"}\r\n      </>\r\n    );\r\n \r\n}\r\n\r\n//-----------------------------------------//-----------------------------------------\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    usersList: state.usersPart.usersList,\r\n    pageSettings: state.usersPart.pageSettings,\r\n  };\r\n};\r\n// -----------------------------------------\r\n\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUsersPageThunkCreator,\r\n    changeSubscribeThunkCreator,\r\n  })\r\n\r\n) (UserConnectConreiner) \r\n","import \"./App.css\";\r\n\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport MusicPage from \"./components/pages/music/music\";\r\nimport NewsPage from \"./components/pages/news/newsContainer\";\r\nimport React from \"react\";\r\nimport SettingsPage from \"./components/pages/settings/settings\";\r\nimport Header from \"./components/header/header\";\r\nimport LeftColone from \"./components/sidebar/sidebar\";\r\nimport MassagePageContainer from \"./components/pages/message/messageContainer\";\r\nimport ProfileContainer from \"./components/pages/profile/profileContainer\";\r\nimport UserContainer from \"./components/pages/users/usersContainer\";\r\n\r\n// import RegiserContainer from \"./components/pages/register/regContainer\";\r\nconst RegiserContainer = React.lazy(() =>\r\n  import(\"./components/pages/register/regContainer\")\r\n);\r\nfunction App({ store, ...props }) {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n\r\n      <LeftColone store={store} />\r\n\r\n      <div className=\"mainCont\">\r\n        <Switch>\r\n          <Redirect exact from=\"/\" to=\"/users\" />\r\n\r\n          <Route\r\n            path=\"/profile/:userId?\"\r\n            render={() => <ProfileContainer store={store} />}\r\n          />\r\n\r\n          <Route\r\n            path=\"/message/:userPMId?\"\r\n            render={() => <MassagePageContainer store={store} />}\r\n          />\r\n          <Route path=\"/news\" component={NewsPage} />\r\n\r\n          <Route path=\"/music\" component={MusicPage} />\r\n\r\n          <Route path=\"/users\" render={() => <UserContainer store={store} />} />\r\n\r\n          <Route path=\"/settings\" component={SettingsPage} />\r\n\r\n          <Route\r\n            path=\"/register\"\r\n            render={() => (\r\n              <React.Suspense fallback=\"Loadingu\">\r\n                {\" \"}\r\n                <RegiserContainer />{\" \"}\r\n              </React.Suspense>\r\n            )}\r\n          />\r\n\r\n          <Route path=\"*\" render={() => <div>404</div>} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\n\r\nimport bodyReducer from \"./profileReducer\";\r\nimport leftColonePartReducer from \"./leftColonyReducer\";\r\nimport messageReducer from \"./messageReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport autorizationReduser from \"./autorizationReduser\";\r\nimport newsReducer from \"./newsReducer\";\r\nimport thunk from \"redux-thunk\";  //thunk middleware\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport commonReduser from \"./commonReduser\";\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\n\r\n\r\nlet reducersPush = combineReducers({\r\n  bodyPart: bodyReducer,\r\n  massagePart: messageReducer,\r\n  usersPart: usersReducer,\r\n  leftColonePart: leftColonePartReducer,\r\n  autorizationPart: autorizationReduser,\r\n   commonPart: commonReduser,\r\n   newsPart: newsReducer,\r\n  form: formReducer,\r\n});\r\n\r\n\r\n\r\nconst store = createStore(reducersPush, composeWithDevTools(applyMiddleware(thunk)));\r\nexport default store;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport store from './store/rStore'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\n// ========================================\r\n\r\n\r\nReactDOM.render(\r\n\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n          <App state={store.getState()} dispatch={store.dispatch.bind(store)} store={store} />\r\n        </Provider>\r\n    </HashRouter>\r\n    ,\r\n    document.getElementById('root')\r\n)\r\n\r\nreportWebVitals()\r\n","//import { cloneDeep } from \"lodash\";\r\n\r\nimport { serverAL } from \"../api/api\";\r\n\r\n// ========================================\r\nconst CHANGE_LOADING_STATUS = \"CHANGE-LOADING-STATUS\";\r\nconst APP_INIT_DONE = \"APP-INIT-DONE\";\r\n\r\n\r\n// ========================================\r\nexport const changeLoadStatus = (status) => ({ type: CHANGE_LOADING_STATUS, status });\r\n// --------------\r\nexport const initComplete = () => ({ type: APP_INIT_DONE });\r\n// ========================================\r\n\r\nconst init = {\r\n  loadingModules: {\r\n isSomethingLoading:false,\r\n isInitComplete:false,\r\n  },\r\n};\r\n// ========================================\r\n\r\nfunction commonReduser(state = init, action) {\r\n  switch (action.type) {\r\n    // --------------\r\n\r\n    case CHANGE_LOADING_STATUS: {\r\n      return _changeLoadStatus(state, action);\r\n    }\r\n    case APP_INIT_DONE: {\r\n      return _appInitComplete(state, action);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// ========================================\r\n\r\n\r\n// ---------------------------------------\r\nfunction _changeLoadStatus(state, action) {\r\n  \r\n  return {\r\n    ...state,\r\n    loadingModules: { isSomethingLoading: action.status },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _appInitComplete(state, action) {\r\n  \r\n  return {\r\n    ...state,\r\n    loadingModules: { isInitComplete: true },\r\n  };\r\n}\r\n// ========================================\r\n// ========================================\r\n\r\nexport const initPageTC = () => {\r\n  return (dispatch) => {\r\n   \r\n    dispatch(changeLoadStatus(false));\r\n\r\n  const promiseMass = promiseMass.push(  serverAL.userInit() )\r\n\r\n   Promise.all([promiseMass]).then ( ()=> { \r\n      dispatch(initComplete())\r\n      dispatch(changeLoadStatus(true));\r\n    })\r\n  };\r\n};\r\nexport default commonReduser;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"message_main__2jE2B\",\"autor\":\"message_autor__3Jdlu\",\"active\":\"message_active__2OsO4\",\"oneMess\":\"message_oneMess__1NeG-\",\"ava\":\"message_ava__WCFui\",\"dialogMassage\":\"message_dialogMassage__ET2gQ\",\"text\":\"message_text__1GRp-\",\"inputArea\":\"message_inputArea__2ni8V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"users_main__bfcD7\",\"post\":\"users_post__2MrWB\",\"name\":\"users_name__1Tss8\",\"adress\":\"users_adress__ecSKK\",\"quote\":\"users_quote__-dOEO\",\"activeB\":\"users_activeB__j847P\",\"regularB\":\"users_regularB__1WREL\"};","import loader from './loader.module.css'\r\n\r\nfunction LoadingModule (props) {\r\n    return (\r\n  \r\n    <span className={loader.lds_circle} ><span></span></span>\r\n  \r\n    )\r\n  }\r\n\r\nexport default LoadingModule","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logout\":\"autorization_logout__feZNw\",\"loginButt\":\"autorization_loginButt__3orwJ\",\"login\":\"autorization_login__28M-c\",\"userAvatarLogin\":\"autorization_userAvatarLogin__30wSQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"input_field__RGFYC\",\"bField\":\"input_bField__4gl20\",\"erors\":\"input_erors__3w3KW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"massWall_history__1ec4V\",\"clock\":\"massWall_clock__1Yhl4\",\"buttActive\":\"massWall_buttActive__1REhQ\",\"buttPass\":\"massWall_buttPass__1-nlw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"sidebar_button__cPYJ7\",\"active\":\"sidebar_active__3vO5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userdataBlock\":\"user_userdataBlock__1uaOI\",\"editText\":\"user_editText__1du2v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newpost\":\"newpost_newpost__3z6tG\",\"inputt\":\"newpost_inputt__3pZsl\"};"],"sourceRoot":""}