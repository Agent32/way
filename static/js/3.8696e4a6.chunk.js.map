{"version":3,"sources":["easyWb/bodComp/register/reg.module.css","easyWb/bodComp/register/regDrawer.jsx","easyWb/bodComp/register/regContainer.js","easyWb/commonComponent/commonContainer.jsx"],"names":["module","exports","maxLength10","inputCondition","maxLength","minLength2","minLength","RegDrawer","props","ContactForm","reduxForm","form","React","memo","RegForm","pristine","submitting","className","reg","onSubmit","handleSubmit","Field","component","name","label","renderField","required","email","placeholder","type","disabled","main","subitRegToServer","RegFormConnectContainer","subData","changeLoadStatus","serverAL","newUser","then","ans","console","log","this","isSomethingLoading","LoadingModule","Component","compose","connect","state","ConnectLoadin","Wat","mapStateToProps","commonPart","loadingModules","regRedirect","isLoggedIn","to","autorizationPart","userData"],"mappings":"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","file":"static/js/3.8696e4a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"reg_main__3I9h3\",\"form\":\"reg_form__mKuWp\",\"field\":\"reg_field__4okCO\",\"erors\":\"reg_erors__2FlmL\"};","import reg from \"./reg.module.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  renderField,\r\n  inputCondition,\r\n} from \"../../commonComponent/inputErorPanel/input\";\r\nimport React from \"react\";\r\n\r\n//---------------------------------------------------------------------------------------------\r\n\r\n//---------------------------------------------------------------------------------------------\r\nconst maxLength10 = inputCondition.maxLength(10);\r\nconst minLength2 = inputCondition.minLength(2);\r\n\r\n//---------------------------------------------------------------------------------------------\r\nfunction RegDrawer(props) {\r\n  const ContactForm = reduxForm({\r\n    form: \"registerForm\",\r\n  })(React.memo(RegForm) );\r\n  //-----------------------****------------------------------\r\n  function RegForm (props) {\r\n    \r\n    const { pristine, submitting } = props;\r\n    return (\r\n      <form className={reg.form} onSubmit={props.handleSubmit}>\r\n        <div>\r\n          {\" \"}\r\n          <Field\r\n            component=\"input\"\r\n            name=\"firstName\"\r\n            label={`First Name`}\r\n            component={renderField}\r\n            validate={[inputCondition.required, maxLength10, minLength2]}\r\n          />\r\n          <Field\r\n            component=\"input\"\r\n            name=\"lastName\"\r\n            label={`Second Name`}\r\n            component={renderField}\r\n            validate={[inputCondition.required, maxLength10, minLength2]}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          {\" \"}\r\n          <Field\r\n            component=\"input\"\r\n            name=\"email\"\r\n            label={`email`}\r\n            component={renderField}\r\n            validate={[inputCondition.required, inputCondition.email]}\r\n          />{\" \"}\r\n        </div>\r\n\r\n        <div>\r\n          {\" \"}\r\n          <Field\r\n            component=\"input\"\r\n            name=\"adressCountry\"\r\n            label={`Country`}\r\n            component={renderField}\r\n            validate={[inputCondition.required, maxLength10]}\r\n          />\r\n          <Field\r\n            component=\"input\"\r\n            name=\"adressCity\"\r\n            label={`City`}\r\n            component={renderField}\r\n            validate={[inputCondition.required, maxLength10]}\r\n          />{\" \"}\r\n        </div>\r\n        <div>\r\n          <Field\r\n            component=\"input\"\r\n            name=\"quote\"\r\n            label={`qwote`}\r\n            component={renderField}\r\n            validate={[minLength2]}\r\n          />{\" \"}\r\n        </div>\r\n        <div>\r\n          {\" \"}\r\n          <Field\r\n            component=\"input\"\r\n            name=\"picture\"\r\n            placeholder={`Avatar Url`}\r\n          />{\" \"}\r\n        </div>\r\n        <div>\r\n          {\" \"}\r\n          Born:    <Field component=\"input\" name=\"isFollow\" type={`checkbox`} />\r\n          Yes{\" \"}\r\n        </div>\r\n\r\n        <div>\r\n          {\" \"}\r\n          <button type=\"submit\" disabled={pristine || submitting}>\r\n            {\" \"}\r\n            Send{\" \"}\r\n          </button>{\" \"}\r\n          {` `}\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  //-----------------------****------------------------------\r\n\r\n  //if logined then redirect to profile\r\n  return (\r\n    <div className={reg.main}>\r\n      <ContactForm onSubmit={props.subitRegToServer} />\r\n    </div>\r\n  );\r\n}\r\n\r\n//=============================================================\r\nexport default RegDrawer;\r\n","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { serverAL } from \"../../../redux/dal/api\";\r\nimport RegDrawer from \"./regDrawer\";\r\nimport { withAutoredirectNotLogOut, withLoading } from \"../../commonComponent/commonContainer\";\r\n\r\n\r\nclass RegFormConnectContainer extends React.Component {\r\n \r\n\r\n subitRegToServer = (subData) =>\r\n {\r\n   \r\n  this.props.changeLoadStatus(true)\r\n   serverAL.newUser(subData). then (ans => {console.log(ans) \r\n    this.props.changeLoadStatus(false)\r\n  })\r\n  \r\n }\r\n  \r\n  render() {\r\n    \r\n   \r\n    \r\n    return (\r\n      <> \r\n       { this.props.isSomethingLoading ? <this.props.LoadingModule />: null }\r\n       \r\n        <RegDrawer\r\n         subitRegToServer = {this.subitRegToServer} \r\n         \r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\n// ========================================\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n  \r\n  };\r\n};\r\n\r\n\r\nexport default compose ( connect(mapStateToProps, {}),\r\nwithLoading, \r\nwithAutoredirectNotLogOut,\r\n)\r\n(RegFormConnectContainer)\r\n","import { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport React from \"react\";\r\nimport { compose } from \"redux\";\r\nimport LoadingModule from \"./loader/loader\";\r\nimport { changeLoadStatus } from \"../../redux/commonReduser\";\r\nimport { renderField, inputCondition } from \"./inputErorPanel/input\";\r\n//---------------------------------------------------------\r\nexport const withAutoredirectNotLogIn = (Component) => {\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      isLoggedIn: state.autorizationPart.userData.isLoggedIn,\r\n    };\r\n  };\r\n  class regRedirect extends React.Component {\r\n    render() {\r\n      if (!this.props.isLoggedIn) {\r\n        return <Redirect to={\"/register\"} />;\r\n      }\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  return connect(mapStateToProps, {})(regRedirect);\r\n};\r\n//---------------------------------------------------------\r\nexport const withAutoredirectNotLogOut = (Component) => {\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      isLoggedIn: state.autorizationPart.userData.isLoggedIn,\r\n    };\r\n  };\r\n  class regRedirect extends React.Component {\r\n    render() {\r\n      if (this.props.isLoggedIn) {\r\n        return <Redirect to={\"/profile\"} />;\r\n      }\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  return connect(mapStateToProps, {})(regRedirect);\r\n};\r\n\r\n//---------------------------------------------------------\r\nexport const withLoading = (Component) => {\r\n  class ConnectLoadin extends React.Component {\r\n    render() {\r\n      const Wat = connect(mapStateToProps, { changeLoadStatus })(Component);\r\n      return <Wat {...this.props} LoadingModule={LoadingModule} />;\r\n    }\r\n  }\r\n\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      isSomethingLoading: state.commonPart.loadingModules.isSomethingLoading,\r\n    };\r\n  };\r\n\r\n  return ConnectLoadin;\r\n};\r\n//---------------------------------------------------------\r\n\r\nexport const changeObjInMass = (arrayOfProps, needChangePropNameStr, needChangePropNameValue, newValueStr) =>\r\n{\r\n return arrayOfProps.map ((current, count) => {\r\n if (current[needChangePropNameStr] === needChangePropNameValue) { current[newValueStr]= !current[newValueStr]}\r\n return current\r\n })\r\n\r\n}"],"sourceRoot":""}