{"version":3,"sources":["redux/commonReduser.js","easyWb/bodComp/music/music.module.css","easyWb/bodComp/news/news.module.css","easyWb/bodComp/settings/settings.module.css","easyWb/leftColone/friendPanel/friendPanel.module.css","easyWb/commonComponent/loader/loader.module.css","redux/dal/api.js","easyWb/commonComponent/inputErorPanel/input.jsx","easyWb/bodComp/massage/massage.module.css","easyWb/bodComp/music/music.jsx","easyWb/bodComp/news/news.jsx","easyWb/bodComp/settings/settings.jsx","easyWb/headerPart/authorization/autorizationDrawer.jsx","redux/autorizationReduser.js","easyWb/headerPart/authorization/autorizationContainer.jsx","easyWb/headerPart/header.js","easyWb/leftColone/friendPanel/friendsPanel.jsx","easyWb/leftColone/friendPanel/friendsPanelContainer.jsx","easyWb/leftColone/leftColone.js","redux/massageReducer.js","easyWb/bodComp/massage/massageDrawer.jsx","easyWb/bodComp/massage/massageContainer.jsx","redux/profileReducer.js","easyWb/bodComp/profile/history/massageWall.jsx","easyWb/bodComp/profile/profileDrawer.js","easyWb/bodComp/profile/profileContainer.js","redux/usersReducer.js","easyWb/bodComp/users/usersDrawer.jsx","easyWb/bodComp/users/usersContainer.js","App.js","redux/leftColonyReducer.js","redux/rStore.js","reportWebVitals.js","index.js","easyWb/bodComp/users/users.module.css","easyWb/headerPart/authorization/autorization.module.css","easyWb/commonComponent/inputErorPanel/input.module.css","easyWb/bodComp/profile/history/massWall.module.css","easyWb/commonComponent/loader/loader.jsx","easyWb/leftColone/leftColone.module.css","easyWb/bodComp/profile/user.module.css","easyWb/bodComp/profile/newpost.module.css"],"names":["CHANGE_LOADING_STATUS","APP_INIT_DONE","changeLoadStatus","status","type","init","loadingModules","isSomethingLoading","isInitComplete","_changeLoadStatus","state","action","_appInitComplete","commonReduser","module","exports","instanceMock","axios","baseURL","headers","serverAL","getUsersList","CurrentPage","maxUsersAtPage","get","then","res","data","buttonPressed","userID","byl","put","isFollow","getUserbyId","getQuotebyUsrId","updateQuote","qText","quote","updateElement","whatElement","text","likeButtPressed","postID","likes","newWallPost","post","newUser","userInit","Promise","resolve","reject","setTimeout","inputCondition","required","value","undefined","maxLength","max","length","minLength","min","number","isNaN","Number","minValue","email","test","renderField","input","label","meta","touched","error","warning","className","inputStyle","field","erors","placeholder","bigField","bField","MusicPage","props","music","main","NewsPage","news","SettingsPage","settings","maxLength10","minLength2","AutorizationDrawer","userData","isLoggedIn","autiruzationStyle","login","userAvatarLogin","src","loginData","avatar","userName","loginButt","onClick","tryLogout","LogFormWithRed","reduxForm","form","pristine","submitting","onSubmit","handleSubmit","Field","component","name","validate","disabled","to","logout","loginFormSubmit","notLogined","React","memo","TRY_LOGIN","TRY_LOGOUT","LOGIN_FORM_SUBMIT","token","inputLogin","inputPassword","_loginSend","_loginFormSubmit","elem","_logout","autorizationReduser","AutorizationContainerConnect","regButtonPress","this","editLoginArea","editPasswordArea","Component","compose","connect","autorizationPart","tryLogin","withRouter","Header","CompactFriendPanel","friendPanelStyle","friendPanel","map","friend","count","userNotLogined","FriendColoneContainer","leftColonePart","LeftButton","leftColone","button","href","activeClassName","active","LeftColon","store","POST_PRIVATE_MASSAGE","EDIT_PM_AREA","dialogsMain","id","path","userDialogs","changedText","PMtext","_postMassage","currState","cloneDeep","curr","push","_privMassTempAreaEdit","massageReducer","MassagePage","massagePart","useState","selecId","setCount","DrawAutors","massage","nameAut","selectedId","autor","formDialog","dialog","formMassage","autorUser","DrawDialog","chat","NewPost","editPM","sendPM","dialogMassage","DrawMassageText","current","slice","includes","autorNotUser","areaPMtemp","createRef","newpost","ref","onChange","MassagePageContainer","dispatch","editPmTempActionCreator","pmSendActionCreator","WALL_POST_PUBLISH","TEXTAREA_EDIT_WALL","GET_USER","LODAER_WAITER_CHANGER","EDIT_QUOTE_TEXT","ENABLE_EDIT_ELEMENT","DISABLE_EDIT_ELEMENT","EDIT_CURR_ELEM","GET_USER_WALL","WALL_LIKE_BUTTON_CHANGE","getUser","changeIsFinished","isFinished","getUserWallPost","postsWall","picture","createdAt","wallText","isLoadinFinished","whatEdit","isEditorOneNeed","title","firstName","lastName","dateOfBirth","registerDate","phone","adressCity","adressCountry","_textAreaEditWall","_postWallComment","avatarImg","postArea","date","_getUser","_loaderWaitSwitch","_editChangeStatus","_enableEditElement","_disableEditElement","_editCurrElem","_getUsrWall","_changeLike","now","postId","bodyReducer","PostHistory","massWall","history","clock","buttActive","buttPass","oncl","e","likeChangeTC","userId","maxLength50","minLength10","Profile","doubleClickHolder","stringName","console","log","enableEditElement","DrawEditor","areaNewPost","editProfilePart","autoFocus","onBlur","updateQuoteOnServer","formWall","currenUserData","userStyle","userdataBlock","onDoubleClick","SendPostForm","newPost","editText","inputt","wallSend","bodyPart","wallPostSend","wallPostEdit","getUserByIdTC","a","userAnswer","userQuote","editQuote","updateQuteServer","buttonEvent","subBool","target","userid","newWallPostTC","updateWallPost","usrID","match","params","usrFunc","useEffect","CHANGE_FOLLOW","GET_MORE_USERS","CHANGE_CURRENT_PAGE","GET_MAX_USERS","updateUserChange","changeCurPage","getMaxUsers","usersList","pageSettings","currentPage","allUsersCount","_changeFollowed","_getUsrs","_usersPageSwitch","_setMaxUsers","usersReducer","UsersPage","maxPagesNumber","maxItemsInPage","pagesToDraw","Math","ceil","pageButtOns","i","users","activeB","regularB","changePage","formUsers","currUsers","alt","onError","onerror","adress","userFollowChange","usersPart","getUsersPageThunkCreator","Page","userListData","changeSubscribeThunkCreator","buttPressAnswer","getUPtc","RegiserContainer","lazy","App","render","Suspense","fallback","url","leftColonePartReducer","reducersPush","combineReducers","commonPart","formReducer","createStore","composeWithDevTools","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getState","bind","document","getElementById","LoadingModule","loader","lds_circle"],"mappings":"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","file":"static/js/main.319fd634.chunk.js","sourcesContent":["//import { cloneDeep } from \"lodash\";\r\n\r\nimport { serverAL } from \"./dal/api\";\r\n\r\n// ========================================\r\nconst CHANGE_LOADING_STATUS = \"CHANGE-LOADING-STATUS\";\r\nconst APP_INIT_DONE = \"APP-INIT-DONE\";\r\n\r\n\r\n// ========================================\r\nexport const changeLoadStatus = (status) => ({ type: CHANGE_LOADING_STATUS, status });\r\n// --------------\r\nexport const initComplete = () => ({ type: APP_INIT_DONE });\r\n// ========================================\r\n\r\nconst init = {\r\n  loadingModules: {\r\n isSomethingLoading:false,\r\n isInitComplete:false,\r\n  },\r\n};\r\n// ========================================\r\n\r\nfunction commonReduser(state = init, action) {\r\n  switch (action.type) {\r\n    // --------------\r\n\r\n    case CHANGE_LOADING_STATUS: {\r\n      return _changeLoadStatus(state, action);\r\n    }\r\n    case APP_INIT_DONE: {\r\n      return _appInitComplete(state, action);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// ========================================\r\n\r\n\r\n// ---------------------------------------\r\nfunction _changeLoadStatus(state, action) {\r\n  \r\n  return {\r\n    ...state,\r\n    loadingModules: { isSomethingLoading: action.status },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _appInitComplete(state, action) {\r\n  \r\n  return {\r\n    ...state,\r\n    loadingModules: { isInitComplete: true },\r\n  };\r\n}\r\n// ========================================\r\n// ========================================\r\n\r\nexport const initPageTC = () => {\r\n  return (dispatch) => {\r\n   \r\n    dispatch(changeLoadStatus(false));\r\n\r\n  const promiseMass = promiseMass.push(  serverAL.userInit() )\r\n\r\n   Promise.all([promiseMass]).then ( ()=> { \r\n      dispatch(initComplete())\r\n      dispatch(changeLoadStatus(true));\r\n    })\r\n  };\r\n};\r\nexport default commonReduser;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"music_main__2sIof\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"news_main__1_SFP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"settings_main__3BFBm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"friendPanel_main__13s_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds_circle\":\"loader_lds_circle__31Xqo\"};","import * as axios from \"axios\";\r\n\r\nconst instanceDummy = axios.create({\r\n  baseURL: \"https://dummyapi.io/data/api/user/\",\r\n  headers: {\r\n    \"app-id\": `608ec88017752b6496d65b8f`,\r\n  },\r\n});\r\n\r\nconst instancefakeapi = axios.create({\r\n  baseURL: \"https://www.fakeapi.online/api/apis/agent32/\",\r\n});\r\n\r\nconst instanceMock = axios.create({\r\n  baseURL: \"https://60885809a6f4a300174263e9.mockapi.io/users/\",\r\n});\r\n\r\n//https://www.fakeapi.online/apis\r\n\r\nexport const serverAL = {\r\n  //---------------users------------------\r\n  getUsersList: (CurrentPage = 0, maxUsersAtPage = 10) => {\r\n    return instanceMock\r\n      .get(`?page=${CurrentPage}&limit=${maxUsersAtPage}`)\r\n\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  },\r\n\r\n  buttonPressed: (userID, byl) => {\r\n    return instanceMock\r\n      .put(`${userID}`, {\r\n        isFollow: byl,\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  },\r\n    //-----------profile------------------\r\n    getUserbyId: (userID = 1) => {\r\n      return instanceMock.get(`${userID}`).then((res) => {\r\n        return res.data;\r\n      });\r\n    },\r\n    getQuotebyUsrId: (userID = 1) => {\r\n      return instanceMock.get(`${userID}/wallPost/`).then((res) => {\r\n        return res.data;\r\n      });\r\n    },\r\n  updateQuote: (userID, qText) => {\r\n    return instanceMock\r\n      .put(`${userID}`, {\r\n        quote: qText,\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  },\r\n  updateElement: (userID, whatElement, text) => {\r\n    return instanceMock\r\n      .put(`${userID}`, {\r\n        [whatElement]: text,\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  },\r\n  likeButtPressed: (userID, postID, byl) => {\r\n    debugger\r\n    return instanceMock\r\n      .put(`${userID}/wallPost/${postID}`, {\r\n        likes: byl,\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  },\r\n  newWallPost: (userID, data) => {\r\n    return instanceMock\r\n      .post(`${userID}/wallPost/`, {\r\n        ...data\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  },\r\n    //-----------registr------------------\r\n  newUser: (data) => {\r\n    return instanceMock\r\n      .post(``, {\r\n        ...data\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  },\r\n   //-----------init------------------\r\n  userInit: () => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        resolve();\r\n      }, 300);\r\n    });\r\n  },\r\n};\r\n//https://60885809a6f4a300174263e9.mockapi.io/users/1/wallPost/","import inputStyle from './input.module.css'\r\n\r\n//---------------------------------------------------------------------------------------------\r\nexport const inputCondition =\r\n{\r\n  required :  (value) => {return (value || typeof value === 'number' ? undefined : 'Required')},\r\n   maxLength: (max) => (value) => { return (\r\n    value && value.length > max ? `Max is ${max}` : undefined)},\r\n    minLength: min => value =>\r\n  value && value.length < min ? `Min is ${min}` : undefined,\r\n   number: value =>\r\n  value && isNaN(Number(value)) ? 'Must be a numb' : undefined,\r\n minValue : min => value =>\r\n  value && value < min ? `Must be at least ${min}` : undefined,\r\n   email: value =>\r\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n    ? 'Invalid email'\r\n    : undefined,\r\n\r\n\r\n}\r\n\r\n//---------------------------------------------------------------------------------------------\r\n\r\n\r\n//---------------------------------------------------------------------------------------------\r\n\r\n    export const renderField = ({\r\n      input,\r\n      label,\r\n      type,\r\n      meta: { touched, error, warning }\r\n    }) => (\r\n      // className={reg.erors}\r\n        <span className={inputStyle.field + \" \" +(touched && error ?  inputStyle.erors: '' )}>\r\n          <input {...input} \r\n          placeholder={touched && error ? error : label} \r\n          type={type} />\r\n         \r\n        {/*   {touched &&\r\n            ((error && <span>{error}</span>) ||\r\n              (warning && <span>{warning}</span>))} */}\r\n              \r\n        </span>\r\n     \r\n    )\r\n\r\n    export const bigField = ({\r\n      input,\r\n      label,\r\n      type,\r\n      meta: { touched, error, warning }\r\n    }) => (\r\n      // className={reg.erors}\r\n        <span >\r\n          <input {...input} \r\n          placeholder={touched && error ? error : label} \r\n          type={type} \r\n          className={inputStyle.bField + \" \" +(touched && error ?  inputStyle.erors: '' )}\r\n          />\r\n         \r\n        {/*   {touched &&\r\n            ((error && <span>{error}</span>) ||\r\n              (warning && <span>{warning}</span>))} */}\r\n              \r\n        </span>\r\n     \r\n    )\r\n//---------------------------------------------------------------------------------------------","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"massage_main__345kd\",\"autor\":\"massage_autor__1mumc\",\"nameAut\":\"massage_nameAut__1bTym\",\"active\":\"massage_active__2mt3y\",\"dialogMassage\":\"massage_dialogMassage__5eL0i\",\"autorNotUser\":\"massage_autorNotUser__2P10v\",\"autorUser\":\"massage_autorUser__25ypu\",\"newpost\":\"massage_newpost__2Yqpn\"};","import music from './music.module.css'\r\n\r\nfunction MusicPage (props) {\r\n  return <div className={music.main}>MusicList</div>\r\n}\r\n\r\nexport default MusicPage\r\n","import news from \"./news.module.css\";\r\n\r\nfunction NewsPage(props) {\r\n  return <div className={news.main}>News List</div>;\r\n}\r\n\r\nexport default NewsPage;\r\n","import settings from './settings.module.css'\r\n\r\nfunction SettingsPage (props) {\r\n    return (\r\n  \r\n    <div className={settings.main} >Settings go</div>\r\n  \r\n    )\r\n  }\r\n\r\nexport default SettingsPage","import autiruzationStyle from \"./autorization.module.css\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {renderField, inputCondition } from \"../../commonComponent/inputErorPanel/input\";\r\n\r\nconst maxLength10 = inputCondition.maxLength(10)\r\nconst minLength2 = inputCondition.minLength(2)\r\n\r\nfunction AutorizationDrawer(props) {\r\n\r\n    //---------------------------------------------------------\r\n  function logined() {\r\n    return (\r\n      <div className={autiruzationStyle.login}>\r\n        <div>\r\n          <img\r\n            className={autiruzationStyle.userAvatarLogin}\r\n            src={props.userData.loginData.avatar}\r\n          />{\" \"}\r\n          Hello {props.userData.loginData.userName}\r\n        </div>\r\n        <div className={autiruzationStyle.loginButt}>\r\n          {\" \"}\r\n          <button onClick={props.tryLogout}> Logout</button>{\" \"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function notLogined() {\r\n    //---------------------------------------------------------\r\n    const LogFormWithRed = reduxForm({\r\n      form: \"loginForm\",\r\n    })(LoginForm);\r\n  //---------------------------------------------------------\r\n    function LoginForm(props) {\r\n      const {  pristine, submitting } = props\r\n      return (\r\n        <form onSubmit={props.handleSubmit}>\r\n          {\" \"}\r\n          <div>\r\n            <Field \r\n            \r\n            component=\"input\" name=\"login\" placeholder={`Login`}\r\n            validate={[inputCondition.required, maxLength10, minLength2]}\r\n            \r\n              />{\" \"}\r\n          </div>{\" \"}\r\n          <div>\r\n            <Field\r\n              component=\"input\"\r\n              name=\"password\"\r\n              placeholder={`Password`}\r\n              type=\"password\"\r\n              validate={[inputCondition.required, maxLength10, minLength2]}\r\n            />{\" \"}\r\n          </div>\r\n          <button type=\"submit\"  disabled={pristine || submitting}> Login </button>{\" \"}\r\n          <NavLink to={`/register`}>\r\n            <button>Registration</button>{\" \"}\r\n          </NavLink>\r\n        </form>\r\n      );\r\n    }\r\n  //---------------------------------------------------------\r\n\r\n    return (\r\n      <div className={autiruzationStyle.logout}>\r\n        <LogFormWithRed onSubmit={props.loginFormSubmit} />\r\n      </div>\r\n    );\r\n  }\r\n  //---------------------------------------------------------\r\n  return <> {props.userData.isLoggedIn ? logined() : notLogined()}</>;\r\n}\r\n\r\nexport default React.memo( AutorizationDrawer);\r\n","//import { cloneDeep } from \"lodash\";\r\n// ========================================\r\nconst TRY_LOGIN = \"TRY-LOGIN\";\r\nconst TRY_LOGOUT = \"TRY-LOGOUT\";\r\nconst LOGIN_FORM_SUBMIT = \"LOGIN-FORM-SUBMIT\";\r\n\r\n// ========================================\r\nexport const tryLogin = (data) => ({ type: TRY_LOGIN, data });\r\n// --------------\r\n// --------------\r\nexport const loginFormSubmit = (elem) => ({ type: LOGIN_FORM_SUBMIT, elem });\r\n// --------------\r\nexport const tryLogout = () => ({ type: TRY_LOGOUT });\r\n\r\n// ========================================\r\n\r\nconst init = {\r\n  userData: {\r\n    token: \"\",\r\n    inputLogin: \"\",\r\n    inputPassword: \"\",\r\n    isLoggedIn: false,\r\n    loginData: {\r\n      userName: \"\",\r\n      avatar: \"\",\r\n    },\r\n  },\r\n};\r\n// ========================================\r\n\r\nfunction autorizationReduser(state = init, action) {\r\n  switch (action.type) {\r\n    // --------------\r\n\r\n    case TRY_LOGIN: {\r\n      return _loginSend(state, action);\r\n    }\r\n    // --------------\r\n\r\n    case LOGIN_FORM_SUBMIT: {\r\n      return _loginFormSubmit(state, action);\r\n    }\r\n    // --------------\r\n\r\n    case TRY_LOGOUT: {\r\n      return _logout(state, action);\r\n    }\r\n    // --------------\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// ========================================\r\n\r\n// ---------------------------------------\r\nfunction _loginSend(state, action) {\r\n  return {\r\n    ...state,\r\n    userData: {\r\n      ...state.userData,\r\n      isLoggedIn: true,\r\n      inputLogin: \"\",\r\n      inputPassword: \"\",\r\n      token: action.data.token,\r\n      loginData: {\r\n        userName: action.data.userName,\r\n        avatar: action.data.avatar,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\n// ---------------------------------------\r\n// ---------------------------------------\r\nfunction _loginFormSubmit (state, action) {\r\n//if (!action.elem.login) { return state} \r\n  return {\r\n    ...state,\r\n    userData: {\r\n      ...state.userData,\r\n      isLoggedIn: true,\r\n      inputLogin: \"\",\r\n      inputPassword: \"\",\r\n      token: 'agagag',\r\n      loginData: {\r\n        userName: action.elem.login,\r\n      },\r\n    },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _logout(state, action) {\r\n  return {\r\n    ...state,\r\n    userData: {\r\n      ...state.userData,\r\n      isLoggedIn: false,\r\n      inputLogin: \"\",\r\n      inputPassword: \"\",\r\n      token: \"\",\r\n      loginData: {\r\n        userName: \"\",\r\n        avatar: \"\",\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default autorizationReduser;\r\n","import React from \"react\";\r\n\r\nimport AutorizationDrawer from \"./autorizationDrawer\";\r\nimport { connect } from \"react-redux\";\r\nimport * as axios from \"axios\";\r\nimport { Redirect, NavLink, withRouter } from \"react-router-dom\";\r\nimport { tryLogin,  tryLogout, loginFormSubmit} from \"../../../redux/autorizationReduser\";\r\n\r\n\r\nimport { compose } from \"redux\";\r\n\r\n\r\nclass AutorizationContainerConnect extends React.Component {\r\n\r\n/* \r\n  getAutorization = () =>\r\n  { \r\n     \r\n     const returnDataEmu = {\r\n         avatar: 'https://cdn.discordapp.com/emojis/621056505373786112.png?v=1',\r\n         userName: 'NAGIBATOR2000',\r\n         token: 'IIIIIAAAAUUUU'\r\n         \r\n     }\r\n   this.props.tryLogin(returnDataEmu)\r\n\r\n  }\r\n  */\r\n\r\n  //<NavLink to={`/register`}> Registration</NavLink>\r\n  regButtonPress = () => {\r\n    \r\nreturn <Redirect to = { \"/register\"} />\r\n\r\n  }\r\n\r\n  // https://reqres.in/api/login\r\n\r\n  render() {\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n      <> \r\n        <AutorizationDrawer \r\n        userData={this.props.userData} \r\n        editLoginArea={this.props.editLoginArea}\r\n        editPasswordArea={this.props.editPasswordArea}\r\n       \r\n        tryLogout= {this.props.tryLogout}\r\n        regButtonPress= {this.regButtonPress}\r\n        loginFormSubmit={this.props.loginFormSubmit}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\n// ========================================\r\nconst mapStateToProps = (state) => {\r\n  return { userData: state.autorizationPart.userData };\r\n};\r\n\r\n//const AutorizationContainer = (withRouter(AutorizationContainerConnect));\r\n\r\nexport default compose(\r\n  connect(  mapStateToProps,  {tryLogin, tryLogout,loginFormSubmit}) ,\r\n  withRouter,\r\n  ) (AutorizationContainerConnect);\r\n","import '../../App.css'\r\nimport AutorizationContainer from './authorization/autorizationContainer'\r\n\r\nfunction Header (props) {\r\n  return (\r\n    \r\n    <header className='headS'>\r\n      <img className='mainIMG' src='https://upload.wikimedia.org/wikipedia/commons/thumb/1/1c/DC_Comics_logo.png/600px-DC_Comics_logo.png' />\r\n      <div className='pap'>  </div>\r\n      <div className='login'><AutorizationContainer /> </div> \r\n    </header>\r\n\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import friendPanelStyle from './friendPanel.module.css'\r\n\r\nfunction CompactFriendPanel (props) {\r\n\r\n\r\n\r\n function  logined ()\r\n {\r\n   \r\nreturn  <div className={friendPanelStyle.main} > {props.friendPanel.map ( (friend, count) => (<img key={count} src={friend.avatar}></img> ) )} </div>\r\n }\r\n\r\n function userNotLogined ()\r\n {\r\n\r\n }\r\n//{props.isLoginned?  userNotLogined(): logined ()\r\n\r\n    return (\r\n  \r\n  <> {props.isLoggedIn?  logined () : userNotLogined()}  </>\r\n  \r\n    )\r\n  }\r\n\r\nexport default CompactFriendPanel","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CompactFriendPanel from \"./friendsPanel\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n    return { friendPanel: state.leftColonePart.friendPanel, isLoggedIn: state.autorizationPart.userData.isLoggedIn };\r\n};\r\n\r\nconst FriendColoneContainer = connect(\r\n    mapStateToProps,\r\n    {}\r\n)(CompactFriendPanel);\r\n\r\nexport default FriendColoneContainer;\r\n//isLoginned={props.state.autorizationPart.userData.isLoggedIn}","import '../../App.css';\r\n\r\nimport FriendColoneContainer from './friendPanel/friendsPanelContainer'\r\nimport leftColone from './leftColone.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction LeftColon (props) {\r\n\r\n// <LeftButton href='/settings' name='Settings' />\r\n  \r\n  return (\r\n    <div className='columLeft'>\r\n      <LeftButton href='/profile' name='Profile' />\r\n      <LeftButton href='/massage' name='Massage' />\r\n      <LeftButton href='/news' name='News' />\r\n      <LeftButton href='/music' name='Music' />\r\n      <LeftButton href='/users' name='Users' />\r\n     \r\n      \r\n      <FriendColoneContainer store={props.store}/>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nfunction LeftButton (props) {\r\n  return (\r\n    <div className={leftColone.button}>\r\n      <NavLink to={props.href} activeClassName={leftColone.active}>{props.name} </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LeftColon\r\n","import { cloneDeep } from \"lodash\";\r\n// ========================================\r\nconst POST_PRIVATE_MASSAGE = \"POST-PRIVATE-MASSAGE\";\r\nconst EDIT_PM_AREA = \"EDIT-PM-AREA\";\r\n// ========================================\r\nexport const pmSendActionCreator = (id, text) => ({\r\n  type: POST_PRIVATE_MASSAGE,\r\n  id: id,\r\n  text: text,\r\n});\r\nexport const editPmTempActionCreator = (text) => ({\r\n  type: EDIT_PM_AREA,\r\n  text: text,\r\n});\r\n// ========================================\r\n\r\n//state= this._state.massagePart//\r\nconst init = {\r\n  dialogsMain: [\r\n    {\r\n      id: 0,\r\n      name: \"Борян\",\r\n      path: \"/massage/test\",\r\n      userDialogs: [\r\n        \"Борян: Еп, никитин баланс\",\r\n        \"Я: Похуй\",\r\n        \"Борян: Калаш с отдачей ХК?\",\r\n        \"Борян: мы абузим\",\r\n        \"Я: Лах\",\r\n      ],\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Саня\",\r\n      path: \"/massage/test2\",\r\n      userDialogs: [\r\n        \"Саня: Объявляю крестовый поход на Харьков\",\r\n        \"Саня: Ну отслужил и иди на пограмиста\",\r\n        \"Я: Отслужил тебе за зеку, проверяй\",\r\n        \"Саня: Это и есть прогрессивный налог\",\r\n        \"Я: Сасай кудасай\",\r\n      ],\r\n    },\r\n  ],\r\n  changedText: {\r\n    PMtext: \"\",\r\n  },\r\n};\r\n// ========================================\r\nfunction massageReducer(state = init, action) {\r\n  switch (action.type) {\r\n    // --------------\r\n\r\n    case POST_PRIVATE_MASSAGE: {\r\n      return _postMassage(state, action);\r\n    }\r\n    // --------------\r\n    case EDIT_PM_AREA: {\r\n      return _privMassTempAreaEdit(state, action);\r\n    }\r\n\r\n    // --------------\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// ========================================\r\n\r\n// ---------------------------------------\r\nfunction _postMassage(state, action) {\r\n  const currState = cloneDeep(state);\r\n  const curr = \"Я: \" + state.changedText.PMtext;\r\n  currState.dialogsMain[action.id].userDialogs.push(curr);\r\n  currState.changedText.PMtext = \"\";\r\n  return currState;\r\n}\r\n// ---------------------------------------\r\nfunction _privMassTempAreaEdit(state, action) {\r\n  return {\r\n    ...state,\r\n    changedText: { ...state.changedText, PMtext: action.text },\r\n  };\r\n}\r\n// ---------------------------------------\r\n\r\nexport default massageReducer;\r\n","import massage from \"./massage.module.css\";\r\nimport React, { useState } from \"react\";\r\nimport { BrowserRouter, Route, NavLink } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\n/*  <Route path='/massage/test' component={()=><DrawDialog  chat={dialog.userDialogs} /> }/>\r\n      <Route path='/massage/test2' component={()=><DrawDialog  chat={dialog2.userDialogs} /> }/>\r\n       <DrawAutors autor={dialog.name} href='/massage/test'/>\r\n    <DrawAutors autor={dialog2.name} href='/massage/test2'/>\r\n\r\n     ((dialog.userDialogs.slice(0, dialog.userDialogs.length).includes(dialog.name)) ? \r\n         massage.autorUser : massage.autorNotUser ) \r\n         \r\n         поиск по массиву, получение всех с кем есть диалог, добавление кнопки \"сенд пм в профаил\"\r\n      */\r\n\r\nfunction MassagePage(props) {\r\n\r\n  const dialogsMain = props.massagePart.dialogsMain;\r\n  const [selecId, setCount] = useState(0);\r\n  // ========================================\r\n  function DrawAutors(props) {\r\n  \r\n    return (\r\n      <div className={massage.nameAut}>\r\n        <NavLink\r\n          to={props.href}\r\n          activeClassName={massage.active}\r\n          onClick={() => setCount(props.selectedId)}\r\n        >\r\n          {props.autor}{\" \"}\r\n        </NavLink>\r\n      </div>\r\n    );\r\n  }\r\n  // ========================================\r\n\r\n  const formDialog = dialogsMain.map((dialog, count) => (\r\n    <DrawAutors\r\n      key={count}\r\n      autor={dialog.name}\r\n      href={dialog.path}\r\n      selectedId={dialog.id}\r\n    />\r\n  ));\r\n  // ========================================\r\n  const formMassage = dialogsMain.map((dialog, count) => (\r\n    <Route\r\n      className={massage.autorUser}\r\n      key={count}\r\n      path={dialog.path}\r\n      component={() => (\r\n        <DrawDialog autor={dialog.name} chat={dialog.userDialogs} />\r\n      )}\r\n    />\r\n  ));\r\n  // ========================================\r\n  //---------------------------------------------------------\r\n  /* \r\nfunction NewPost(props) {\r\n \r\n  return (\r\n    <form onSubmit={props.handleSubmit}>  <div className={massage.newpost}>\r\n     \r\n      <h2> My posts</h2>\r\n      <Field component=\"input\" name=\"Your news\" placeholder={`newWallPost`} />\r\n      <div />\r\n      <button>\r\n        {\" \"}\r\n        Send\r\n      </button> \r\n    </div></form>\r\n  );\r\n}\r\n\r\n //---------------------------------------------------------\r\nconst SendWallPost = reduxForm({\r\n  form: \"wallPostForm\",\r\n})(NewPost); */\r\n  // ========================================\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className={massage.main}>\r\n        <div className={massage.autor}>{formDialog}</div>\r\n        {formMassage}\r\n      </div>{\" \"}\r\n      <NewPost\r\n        id={selecId}\r\n        editPM={props.editPM} sendPM={props.sendPM}\r\n        changedText= {props.massagePart.changedText}\r\n      />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nfunction DrawDialog(props) {\r\n  return (\r\n    <span className={massage.dialogMassage}>\r\n      <DrawMassageText autor={props.autor} dialog={props.chat} />\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction DrawMassageText(props) {\r\n  const baba = props.dialog.map((current, count) => (\r\n    <div\r\n      key={count}\r\n      className={\r\n        current.slice(0, props.autor.length).includes(props.autor)\r\n          ? massage.autorUser\r\n          : massage.autorNotUser\r\n      }\r\n    >\r\n      {current}\r\n    </div>\r\n  ));\r\n  return baba;\r\n}\r\n \r\n\r\nfunction NewPost(props) {\r\n  let areaPMtemp = React.createRef();\r\n  // let butValue = areaNewPost.current.value\r\n  // props.postMassage(areaNewPost.current.value, props.id)\r\n\r\n  return (\r\n    <div className={massage.newpost}>\r\n      <h2> My posts</h2>\r\n      <textarea\r\n        ref={areaPMtemp}\r\n        onChange={ () =>\r\n          props.editPM(areaPMtemp.current.value)\r\n        }\r\n        value={props.changedText.PMtext}\r\n        placeholder=\"your news...\"\r\n      />\r\n      <div />\r\n      <button\r\n        onClick={() =>\r\n          \r\n            props.sendPM(props.id)\r\n         \r\n        }\r\n      >\r\n        {\" \"}\r\n        Send\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(MassagePage);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  pmSendActionCreator,\r\n  editPmTempActionCreator,\r\n} from \"../../../redux/massageReducer\";\r\n\r\nimport MassagePage from \"./massageDrawer\";\r\n\r\n/* function MassagePageContainer(props) {\r\n  // ========================================\r\n\r\n  //-----------------------------------\r\n  const editPM = (text) => {\r\n    props.store.dispatch(editPmTempActionCreator(text));\r\n  };\r\n  //-----------------------------------\r\n  const sendPM = (id) => {\r\n    props.store.dispatch(pmSendActionCreator(id));\r\n  };\r\n\r\n  //-----------------------------------\r\n  return <MassagePage massagePart={props.store.getState().massagePart} editPM={editPM} sendPM={sendPM} />;\r\n} */\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { massagePart: state.massagePart };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    editPM: (text) => dispatch(editPmTempActionCreator(text)),\r\n    sendPM: (id) => dispatch(pmSendActionCreator(id)),\r\n  };\r\n};\r\nconst MassagePageContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MassagePage);\r\n\r\nexport default MassagePageContainer;\r\n","//import { cloneDeep } from \"lodash\";\r\n\r\nimport { serverAL } from \"./dal/api\";\r\n\r\n// ========================================\r\nconst WALL_POST_PUBLISH = \"WALL-POST-PUBLISH\";\r\nconst TEXTAREA_EDIT_WALL = \"TEXTAREA-EDIT-WALL\";\r\nconst GET_USER = \"GET-USER\";\r\nconst LODAER_WAITER_CHANGER = \"LODAER-WAITER-CHANGER\";\r\nconst EDIT_QUOTE_TEXT = \"EDIT-QUOTE-TEXT\";\r\nconst ENABLE_EDIT_ELEMENT = \"ENABLE_EDIT_ELEMENT\";\r\nconst DISABLE_EDIT_ELEMENT = \"DISABLE_EDIT_ELEMENT\";\r\nconst EDIT_CURR_ELEM = \"EDIT-CURR-ELEM\";\r\nconst GET_USER_WALL = \"GET-USER-WALL\";\r\nconst WALL_LIKE_BUTTON_CHANGE = \"WALL-LIKE-BUTTON-CHANGE\";\r\n// ========================================\r\nexport const wallPostSend = (text) => ({ type: WALL_POST_PUBLISH, text });\r\n//----------------------------\r\nexport const wallPostEdit = (text) => ({\r\n  type: TEXTAREA_EDIT_WALL,\r\n  text: text,\r\n});\r\n//----------------------------\r\nexport const getUser = (text) => ({ type: GET_USER, text });\r\n// --------------\r\nexport const changeIsFinished = (isFinished) => ({\r\n  type: LODAER_WAITER_CHANGER,\r\n  isFinished: isFinished,\r\n});\r\n// --------------\r\nexport const editQuote = (text) => ({ type: EDIT_QUOTE_TEXT, text });\r\n// --------------\r\nexport const enableEditElement = (elem) => ({\r\n  type: ENABLE_EDIT_ELEMENT,\r\n  elem,\r\n});\r\n// --------------\r\nexport const diesableEditElement = () => ({\r\n  type: DISABLE_EDIT_ELEMENT,\r\n});\r\n// --------------\r\nexport const editProfilePart = (text) => ({\r\n  type: EDIT_CURR_ELEM,\r\n  text,\r\n});\r\n// --------------\r\nexport const getUserWallPost = (data) => ({\r\n  type: GET_USER_WALL,\r\n  data,\r\n});\r\n// --------------\r\nexport const likeChange = (userid, postId) => ({\r\n  type: WALL_LIKE_BUTTON_CHANGE,\r\n  userid,\r\n  postId,\r\n});\r\n// ========================================\r\n//state= this._state.bodyPart\r\n\r\n/*\r\n\"https://www.vokrug.tv/pic/person/2/b/f/4/2bf448098b7badf3b37e87c510da29bc.jpeg\",\r\n    \"Anon\",\r\n    \"2 jan\",\r\n    \"Minsk\",\r\n    \"HNAGH-11\",\r\n    \"https://learn.javascript\",\r\n    */\r\n\r\nconst init = {\r\n  // ---------------------------------------\r\n  postsWall: [\r\n    {\r\n      id: 0,\r\n      picture:\r\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSq_I0JFO2DxoAV3J-sI7ajtx0qW0Q5neaY_A&usqp=CAU\",\r\n      text: \"I hate my life\",\r\n      createdAt: \"27.01.21\",\r\n      likes: false,\r\n    },\r\n    {\r\n      id: 1,\r\n      picture:\r\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSq_I0JFO2DxoAV3J-sI7ajtx0qW0Q5neaY_A&usqp=CAU\",\r\n      text: \"Fuck de system\",\r\n      createdAt: \"23.02.21\",\r\n      likes: false,\r\n    },\r\n  ],\r\n  // ---------------------------------------\r\n  changedText: {\r\n    wallText: \"\",\r\n    isLoadinFinished: false,\r\n    whatEdit: null,\r\n    isEditorOneNeed: false,\r\n  },\r\n  // ---------------------------------------\r\n  userData: {\r\n    id: `loading`,\r\n    title: `loading`,\r\n    firstName: `loading`,\r\n    lastName: `loading`,\r\n    email: `loading`,\r\n    dateOfBirth: `loading`,\r\n    registerDate: `loading`,\r\n    phone: `loading`,\r\n    quote: ``,\r\n    picture: ``,\r\n    adressCity: ``,\r\n    adressCountry: ``,\r\n  },\r\n};\r\n// ========================================\r\n\r\nfunction bodyReducer(state = init, action) {\r\n  switch (action.type) {\r\n    // --------------\r\n\r\n    case TEXTAREA_EDIT_WALL: {\r\n      return _textAreaEditWall(state, action);\r\n    }\r\n    // --------------\r\n    case WALL_POST_PUBLISH: {\r\n      return _postWallComment(state, action);\r\n    }\r\n    // --------------\r\n    case GET_USER: {\r\n      return _getUser(state, action);\r\n    }\r\n    // --------------\r\n    case GET_USER_WALL: {\r\n      return _getUsrWall(state, action);\r\n    }\r\n    // --------------\r\n    case LODAER_WAITER_CHANGER: {\r\n      return _loaderWaitSwitch(state, action);\r\n    }\r\n    // --------------\r\n    case EDIT_QUOTE_TEXT: {\r\n      return _editChangeStatus(state, action);\r\n    }\r\n    // --------------\r\n    case ENABLE_EDIT_ELEMENT: {\r\n      return _enableEditElement(state, action);\r\n    }\r\n    // --------------\r\n    case DISABLE_EDIT_ELEMENT: {\r\n      return _disableEditElement(state, action);\r\n    }\r\n    // --------------\r\n    case EDIT_CURR_ELEM: {\r\n      return _editCurrElem(state, action);\r\n    }\r\n    // --------------\r\n    case WALL_LIKE_BUTTON_CHANGE: {\r\n      return _changeLike(state, action);\r\n    }\r\n\r\n    // --------------\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// ========================================\r\n\r\n// ---------------------------------------\r\nfunction _textAreaEditWall(state, action) {\r\n  return {\r\n    ...state,\r\n    changedText: { ...state.changedText, wallText: action.text },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _postWallComment(state, action) {\r\n  const curr = {\r\n    avatarImg:\r\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSq_I0JFO2DxoAV3J-sI7ajtx0qW0Q5neaY_A&usqp=CAU\",\r\n    text: action.text.postArea,\r\n    date: \"15.04.21\",\r\n    likes: 0,\r\n  };\r\n\r\n  return {\r\n    ...state,\r\n    postsWall: [...state.postsWall, curr],\r\n    changedText: { ...state.changedText, wallText: \"\" },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _getUser(state, action) {\r\n  return {\r\n    ...state,\r\n    userData: { ...action.text },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _loaderWaitSwitch(state, action) {\r\n  return {\r\n    ...state,\r\n    changedText: { ...state.changedText, isLoadinFinished: action.isFinished },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _editChangeStatus(state, action) {\r\n  return {\r\n    ...state,\r\n    userData: { ...state.userData, quote: action.text },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _enableEditElement(state, action) {\r\n  /*   state.userData.[action.elem] = 'zaebus'\r\n  console.log(state.userData.picture)\r\n  debugger */\r\n  return {\r\n    ...state,\r\n    changedText: {\r\n      ...state.changedText,\r\n      isEditorOneNeed: true,\r\n      whatEdit: action.elem,\r\n    },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _disableEditElement(state, action) {\r\n  /*   state.userData.[action.elem] = 'zaebus'\r\n  console.log(state.userData.picture)\r\n  debugger */\r\n  return {\r\n    ...state,\r\n    changedText: {\r\n      ...state.changedText,\r\n      isEditorOneNeed: false,\r\n      whatEdit: \"\",\r\n    },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _editCurrElem(state, action) {\r\n  return {\r\n    ...state,\r\n    userData: { ...state.userData, [state.changedText.whatEdit]: action.text },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _getUsrWall(state, action) {\r\n  return {\r\n    ...state,\r\n    postsWall: [...action.data],\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _changeLike(state, action) {\r\n  return {\r\n    ...state,\r\n    postsWall: state.postsWall.map((now, id) => {\r\n      if (now.id === action.postId) {\r\n        now.likes = !now.likes;\r\n      }\r\n      return now;\r\n    }),\r\n  };\r\n}\r\n\r\n// ---------------------------------------\r\n// ========================================\r\n\r\nexport const getUserByIdTC =\r\n  (userID = 1) =>\r\n  async (dispatch) => {\r\n    dispatch(changeIsFinished(false));\r\n\r\n    const userAnswer = await serverAL.getUserbyId(userID);\r\n    dispatch(getUser(userAnswer));\r\n\r\n    const userQuote = await serverAL.getQuotebyUsrId(userID);\r\n    dispatch(getUserWallPost(userQuote));\r\n\r\n    dispatch(changeIsFinished(true));\r\n  };\r\n// ---------------------------------------\r\nexport const updateQuteServer = (id, whatEdit, text) => async (dispatch) => {\r\n  \r\n    dispatch(changeIsFinished(false));\r\n await  serverAL.updateElement(id, whatEdit, text)\r\n      dispatch(diesableEditElement());\r\n      dispatch(changeIsFinished(true));\r\n   \r\n \r\n};\r\n// ---------------------------------------\r\nexport const likeChangeTC =\r\n  (userID, postID, buttonEvent, subBool) => async (dispatch) => {\r\n    buttonEvent.target.disabled = true;\r\n    dispatch(changeIsFinished(false));\r\n    await serverAL.likeButtPressed(userID, postID, !subBool);\r\n    dispatch(likeChange(userID, postID));\r\n    buttonEvent.target.disabled = false;\r\n    dispatch(changeIsFinished(true));\r\n  };\r\n\r\n// ---------------------------------------\r\nexport const newWallPostTC = (userID, data) => async (dispatch) =>{\r\n  \r\n    dispatch(changeIsFinished(false));\r\n\r\n   const wallPostSucces = await serverAL.newWallPost(userID, data)\r\n\r\n    const updateWallPost= await  serverAL.getQuotebyUsrId(userID)\r\n        dispatch(getUserWallPost(updateWallPost));\r\n        dispatch(changeIsFinished(true));\r\n    \r\n    \r\n  \r\n};\r\n\r\n// ---------------------------------------\r\n// ========================================\r\nexport default bodyReducer;\r\n","import massWall from './massWall.module.css'\r\nimport React from \"react\";\r\nconst PostHistory = React.memo( (props) => {\r\n  \r\n  return (\r\n    <div className={massWall.history}>\r\n      <img src={props.picture} />\r\n      <div>\r\n      <div>  <div className={massWall.clock}>{props.createdAt}</div>\r\n     \r\n       \r\n        <button className= {props.likes ? massWall.buttActive : massWall.buttPass } onClick={props.oncl}\r\n            \r\n            onClick={(e) => {\r\n              props.likeChangeTC(props.userId, props.postId, e, props.likes);\r\n            }}\r\n>Like { props.likes ? `🖒`: `` }</button></div>\r\n        <h3> {props.text}</h3>\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n})\r\n\r\n\r\n\r\nexport default PostHistory\r\n","import userStyle from \"./user.module.css\";\r\nimport newPost from \"./newpost.module.css\";\r\nimport PostHistory from \"./history/massageWall\";\r\nimport React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  bigField,\r\n  inputCondition,\r\n} from \"../../commonComponent/inputErorPanel/input\";\r\n\r\nconst maxLength50 = inputCondition.maxLength(50);\r\nconst minLength10 = inputCondition.minLength(10);\r\n\r\nconst Profile = (props) => {\r\n\r\n  const userData = props.userData;\r\n  const postsWall = props.postsWall;\r\n  // ---------------------------------------\r\n  // ========================================\r\n\r\n  //elem - stringТ\r\n  const doubleClickHolder = (stringName) => {\r\n    console.log(userData.picture);\r\n\r\n    if (!props.changedText.isEditorOneNeed) {\r\n      props.enableEditElement(stringName);\r\n    }\r\n  };\r\n  // ---------------------------------------\r\n  const DrawEditor = () => {\r\n    const areaNewPost = React.createRef();\r\n    const nothing = () => {\r\n      return <></>;\r\n    };\r\n    const textForm = () => {\r\n      return (\r\n        <div>\r\n          {\" \"}\r\n          <input\r\n            ref={areaNewPost}\r\n            onChange={() => props.editProfilePart(areaNewPost.current.value)}\r\n            autoFocus={true}\r\n            value={props.userData[props.changedText.whatEdit]}\r\n            onBlur={() => {\r\n              props.updateQuoteOnServer();\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    };\r\n    // state whatEdit IsEditorNeed isAnotherRedacted\r\n    //double click - isAnotherRedacted? IsEditorNeed=true, whatEdit\r\n\r\n    //\r\n    return (\r\n      <>\r\n        {props.changedText.isLoadinFinished && props.changedText.isEditorOneNeed\r\n          ? textForm()\r\n          : nothing()}\r\n      </>\r\n    );\r\n  };\r\n  // ========================================\r\n\r\n  const formWall = postsWall.map((post, count) => (\r\n    <PostHistory\r\n      key={count}\r\n      picture={post.picture}\r\n      text={post.text}\r\n      createdAt={post.createdAt}\r\n      likes={post.likes}\r\n      postId={post.id}\r\n      userId={post.userId}\r\n      likeChangeTC={props.likeChangeTC}\r\n    />\r\n  ));\r\n\r\n  // ---------------------------------------\r\n  const currenUserData = (\r\n    <div className={userStyle.userdataBlock}>\r\n      <img\r\n        onDoubleClick={() => doubleClickHolder(`picture`)}\r\n        src={userData.picture}\r\n      />\r\n      <div>\r\n        <div>id: {userData.id}</div>\r\n        <div>\r\n          Name:\r\n          <span onDoubleClick={() => doubleClickHolder(`title`)}>\r\n            {` ${userData.title}`}{\" \"}\r\n          </span>\r\n          <span onDoubleClick={() => doubleClickHolder(`firstName`)}>\r\n            {\" \"}\r\n            {`${userData.firstName}`}{\" \"}\r\n          </span>\r\n          <span onDoubleClick={() => doubleClickHolder(`lastName`)}>\r\n            {\" \"}\r\n            {`${userData.lastName}`}{\" \"}\r\n          </span>\r\n        </div>\r\n        <div onDoubleClick={() => doubleClickHolder(`email`)}>\r\n          {\" \"}\r\n          Mail: {userData.email}\r\n        </div>\r\n        <div onDoubleClick={() => doubleClickHolder(`registerDate`)}>\r\n          {\" \"}\r\n          Register: {userData.registerDate}\r\n        </div>\r\n        <div onDoubleClick={() => doubleClickHolder(`phone`)}>\r\n          {\" \"}\r\n          Phone: {userData.phone}\r\n        </div>\r\n        <div>\r\n          Country:\r\n          <span onDoubleClick={() => doubleClickHolder(`adressCountry`)}>\r\n            {\" \"}\r\n            {userData.adressCountry}{\" \"}\r\n          </span>\r\n          City:\r\n          <span onDoubleClick={() => doubleClickHolder(`adressCity`)}>\r\n            {\" \"}\r\n            {userData.adressCity}{\" \"}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  // ---------------------------------------\r\n  //---------------------------------------------------------\r\n  const SendPostForm = reduxForm({\r\n    form: \"wallPostForm\",\r\n  })(SendPost);\r\n  //---------------------------------------------------------\r\n  //wallPostSend\r\n  function SendPost(props) {\r\n    const { pristine, submitting } = props;\r\n    return (\r\n      <form className={newPost.newpost} onSubmit={props.handleSubmit}>\r\n        <div className={userStyle.editText}>Двойной клик по полю для редактирования</div>\r\n        <h2> My posts</h2>\r\n        <Field\r\n          className={newPost.inputt}\r\n          component=\"textarea\"\r\n          label={`What on mind?`}\r\n          component={bigField}\r\n          validate={[inputCondition.required, minLength10, maxLength50]}\r\n          name=\"text\"\r\n        />\r\n        <br />\r\n        <button type=\"submit\" disabled={pristine || submitting}>\r\n          {\" \"}\r\n          Send\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  // ========================================\r\n\r\n  // ========================================\r\n  return (\r\n    <div>\r\n      <img src=\"https://static3.depositphotos.com/1000454/256/i/600/depositphotos_2567474-stock-photo-wide-panorama-of-french-alps.jpg\" />\r\n\r\n      <div>\r\n        {\" \"}\r\n        <div onDoubleClick={() => doubleClickHolder(`quote`)}>\r\n          {userData.quote}\r\n        </div>{\" \"}\r\n      </div>\r\n      {currenUserData}\r\n      <DrawEditor />\r\n      <SendPostForm onSubmit={props.wallSend} />\r\n      {formWall}\r\n    </div>\r\n  );\r\n}\r\n// ==================Profile end======================\r\n\r\n// ========================================\r\n\r\nexport default React.memo(Profile);\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  wallPostSend,\r\n  wallPostEdit,\r\n  getUser,\r\n  changeIsFinished,\r\n  getUserByIdTC,\r\n  editQuote,\r\n  updateQuteServer,\r\n  editProfilePart,\r\n  enableEditElement,\r\n  likeChangeTC,\r\n  newWallPostTC,\r\n} from \"../../../redux/profileReducer\";\r\nimport Profile from \"./profileDrawer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingModule from \"../../commonComponent/loader/loader\";\r\n\r\nimport { compose } from \"redux\";\r\n\r\nfunction ProfileConnectContainer(props) {\r\n  const usrID = props.match.params.userId;\r\n  const usrFunc = props.getUserByIdTC;\r\n//console.log(`2`)\r\n  useEffect(() => {\r\n    usrFunc(usrID);\r\n  }, [usrID, usrFunc]);\r\n\r\n  const updateQuoteOnServer = () => {\r\n    props.updateQuteServer(\r\n      props.userData.id,\r\n      props.changedText.whatEdit,\r\n      props.userData[props.changedText.whatEdit]\r\n    );\r\n  };\r\n\r\n  const wallSend = (data) => {\r\n   \r\n    props.newWallPostTC(props.userData.id, data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.changedText.isLoadinFinished ? null : <LoadingModule />}\r\n\r\n      <Profile\r\n        changedText={props.changedText}\r\n        userData={props.userData}\r\n        postsWall={props.postsWall}\r\n        wallSend={wallSend}\r\n        wallPostEdit={props.wallPostEdit}\r\n        getUser={props.getUser}\r\n        editQuote={props.editQuote}\r\n        updateQuoteOnServer={updateQuoteOnServer}\r\n        enableEditElement={props.enableEditElement}\r\n        editProfilePart={props.editProfilePart}\r\n        likeChangeTC={props.likeChangeTC}\r\n        newWallPostTC={props.newWallPostTC}\r\n      />\r\n    </>\r\n  );\r\n}\r\n/* \r\nclass ProfileConnectContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getUserByIdTC(this.props.match.params.userId);\r\n\r\n    //props.match.params - navlink income\r\n  }\r\n\r\n  updateQuoteOnServer = () => {\r\n    this.props.updateQuteServer(\r\n      this.props.userData.id,\r\n      this.props.changedText.whatEdit,\r\n      this.props.userData[this.props.changedText.whatEdit]\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.changedText.isLoadinFinished ? null : <LoadingModule />}\r\n\r\n        <Profile\r\n          changedText={this.props.changedText}\r\n          userData={this.props.userData}\r\n          postsWall={this.props.postsWall}\r\n          wallPostSend={this.props.wallPostSend}\r\n          wallPostEdit={this.props.wallPostEdit}\r\n          getUser={this.props.getUser}\r\n          editQuote={this.props.editQuote}\r\n          updateQuoteOnServer={this.updateQuoteOnServer}\r\n          enableEditElement={this.props.enableEditElement}\r\n          editProfilePart={this.props.editProfilePart}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n} */\r\n\r\n// ========================================\r\n\r\n// ========================================\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    changedText: state.bodyPart.changedText,\r\n    userData: state.bodyPart.userData,\r\n    postsWall: state.bodyPart.postsWall,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    wallPostSend,\r\n    wallPostEdit,\r\n    getUser,\r\n    changeIsFinished,\r\n    getUserByIdTC,\r\n    editQuote,\r\n    updateQuteServer,\r\n    enableEditElement,\r\n    editProfilePart,\r\n    likeChangeTC,\r\n    newWallPostTC,\r\n  }),\r\n  withRouter\r\n)(ProfileConnectContainer);\r\n","import { cloneDeep } from \"lodash\";\r\nimport { serverAL } from \"./dal/api\";\r\n\r\n// ========================================\r\nconst CHANGE_FOLLOW = \"CHANGE-FOLLOW\";\r\nconst GET_MORE_USERS = \"GET-MORE-USERS\";\r\nconst CHANGE_CURRENT_PAGE = \"CHANGE-CURRENT-PAGE\";\r\nconst LODAER_WAITER_CHANGER = \"LODAER-WAITER-CHANGER\";\r\nconst GET_MAX_USERS = \"GET-MAX-USERS\";\r\n\r\n// ========================================\r\nexport const userFollowChange = (id) => ({\r\n  type: CHANGE_FOLLOW,\r\n  id: id,\r\n});\r\n// --------------\r\nexport const updateUserChange = (id) => ({\r\n  type: GET_MORE_USERS,\r\n  id: id,\r\n});\r\n// --------------\r\nexport const changeCurPage = (id) => ({\r\n  type: CHANGE_CURRENT_PAGE,\r\n  id: id,\r\n});\r\n// --------------\r\nexport const changeIsFinished = (isFinished) => ({\r\n  type: LODAER_WAITER_CHANGER,\r\n  isFinished: isFinished,\r\n});\r\n// --------------\r\nexport const getMaxUsers = (count) => ({\r\n  type: GET_MAX_USERS,\r\n  count,\r\n});\r\n// --------------\r\n\r\n//------------------------------------------\r\nconst friendTest = [\r\n  {\r\n    id: 111,\r\n    isFollow: false,\r\n    firstName: \"Борян\",\r\n    lastName: \"Полякович\",\r\n    email: \"nicituEbal@mail\",\r\n    title: \"mr\",\r\n    picture: \"https://cdn.discordapp.com/emojis/814691159544561685.png?v=1\",\r\n  },\r\n  {\r\n    id: 222,\r\n    isFollow: false,\r\n    firstName: \"Cаня\",\r\n    lastName: \"зауральский1087\",\r\n    email: \"nicituEbal@mail\",\r\n    title: \"mr\",\r\n    picture: \"https://cdn.discordapp.com/emojis/814691159544561685.png?v=1\",\r\n  },\r\n  {\r\n    id: 333,\r\n    isFollow: false,\r\n    firstName: \"Никита\",\r\n    lastName: \"Питерский\",\r\n    email: \"nicituEbal@mail\",\r\n    title: \"mr\",\r\n    picture: \"https://cdn.discordapp.com/emojis/814691159544561685.png?v=1\",\r\n  },\r\n  {\r\n    id: 444,\r\n    isFollow: false,\r\n    firstName: \"Барак\",\r\n    lastName: \"Обэма\",\r\n    email: \"russkievpered@mail\",\r\n    title: \"mr\",\r\n    picture: \"https://cdn.discordapp.com/emojis/814691159544561685.png?v=1\",\r\n  },\r\n];\r\n// ========================================\r\n//https://60885809a6f4a300174263e9.mockapi.io/Test\r\n//state= this._state.massagePart//\r\n\r\n/*\r\nhttps://60885809a6f4a300174263e9.mockapi.io/Test/?id=5 \r\nhttps://60885809a6f4a300174263e9.mockapi.io/Test/?page=1&limit=10\r\nhttps://mockapi.io/docs\r\n*/\r\n\r\nconst init = {\r\n  usersList: [\r\n    {\r\n      id: 1,\r\n      isFollow: false,\r\n      firstName: \"Борян\",\r\n      lastName: \"Полякович\",\r\n      email: \"nicituEbal@mail\",\r\n      title: \"mr\",\r\n      picture: \"https://cdn.discordapp.com/emojis/814691159544561685.png?v=1\",\r\n      adressCity: \"gaga\",\r\n      adressCountry: \"baba\",\r\n      quote: \"waaaa wa wa\",\r\n    },\r\n  ],\r\n  pageSettings: {\r\n    currentPage: 1,\r\n    allUsersCount: 25,\r\n    maxUsersAtPage: 5,\r\n    isLoadinFinished: false,\r\n  },\r\n};\r\n// ========================================\r\nfunction usersReducer(state = init, action) {\r\n  switch (action.type) {\r\n    // --------------\r\n\r\n    case CHANGE_FOLLOW: {\r\n      return _changeFollowed(state, action);\r\n    }\r\n    // --------------\r\n    case GET_MORE_USERS: {\r\n      return _getUsrs(state, action);\r\n    }\r\n\r\n    // --------------\r\n    case CHANGE_CURRENT_PAGE: {\r\n      return _usersPageSwitch(state, action);\r\n    }\r\n    // --------------\r\n    case LODAER_WAITER_CHANGER: {\r\n      return _loaderWaitSwitch(state, action);\r\n    }\r\n    // --------------\r\n    case GET_MAX_USERS: {\r\n      return _setMaxUsers(state, action);\r\n    }\r\n\r\n    // --------------\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// ========================================\r\n\r\n// ---------------------------------------\r\nfunction _changeFollowed(state, action) {\r\n  return {\r\n    ...state,\r\n    usersList: state.usersList.map((now, id) => {\r\n      if (now.id === action.id) {\r\n        now.isFollow = !now.isFollow;\r\n      }\r\n      return now;\r\n    }),\r\n  };\r\n}\r\n// ---------------------------------------\r\n\r\nfunction _getUsrs(state, action) {\r\n  return {\r\n    ...state,\r\n    usersList: [...action.id],\r\n  };\r\n}\r\n\r\n// ---------------------------------------\r\n\r\nfunction _usersPageSwitch(state, action) {\r\n  return {\r\n    ...state,\r\n    pageSettings: { ...state.pageSettings, currentPage: action.id },\r\n  };\r\n}\r\n// ---------------------------------------\r\n\r\nfunction _loaderWaitSwitch(state, action) {\r\n  return {\r\n    ...state,\r\n    pageSettings: {\r\n      ...state.pageSettings,\r\n      isLoadinFinished: action.isFinished,\r\n    },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _setMaxUsers(state, action) {\r\n  return {\r\n    ...state,\r\n    pageSettings: { ...state.pageSettings, allUsersCount: action.count },\r\n  };\r\n}\r\n\r\n// ========================================\r\nexport const getUsersPageThunkCreator =\r\n  (Page = 1, maxUsersAtPage = 5) =>\r\n  async (dispatch) => {\r\n    dispatch(changeIsFinished(false));\r\n    const userListData = await serverAL.getUsersList(Page, maxUsersAtPage);\r\n    dispatch(getMaxUsers(userListData.count));\r\n    dispatch(updateUserChange(userListData.data));\r\n    dispatch(changeCurPage(Page));\r\n    dispatch(changeIsFinished(true));\r\n  };\r\n// ---------------------------------------\r\nexport const changeSubscribeThunkCreator =\r\n  (userID, buttonEvent, subBool) => async (dispatch) => {\r\n    buttonEvent.target.disabled = true;\r\n    dispatch(changeIsFinished(false));\r\n    const buttPressAnswer = await serverAL.buttonPressed(userID, !subBool);\r\n    console.log(buttPressAnswer);\r\n    dispatch(userFollowChange(userID));\r\n    buttonEvent.target.disabled = false;\r\n    dispatch(changeIsFinished(true));\r\n  };\r\n\r\n// ========================================\r\nexport default usersReducer;\r\n","import users from \"./users.module.css\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n// -----------------------------------------\r\nfunction UsersPage(props) {\r\n\r\n  const maxPagesNumber = props.pageSettings.allUsersCount;\r\n  const maxItemsInPage = props.pageSettings.maxUsersAtPage;\r\n\r\n  const pagesToDraw = Math.ceil(maxPagesNumber / maxItemsInPage);\r\n\r\n  //------------------------------\r\n  const pageButtOns = []; //зфпу\r\n  for (let i = 1; i <= pagesToDraw; i++) {\r\n    pageButtOns.push(\r\n      <span key={i}>\r\n        <button\r\n          className={\r\n            props.pageSettings.currentPage === i //css\r\n              ? users.activeB\r\n              : users.regularB\r\n          }\r\n          onClick={() => props.changePage(i)}\r\n        >\r\n          {i}\r\n        </button>{\" \"}\r\n      </span>\r\n    );\r\n  }\r\n  // ------------------------------\r\n  const formUsers = props.usersList.map((currUsers, count) => {\r\n    return (\r\n      <div className={users.post} key={currUsers.id}>\r\n        <NavLink to={`/profile/${currUsers.id}`}>\r\n          <img\r\n            alt={\"UsersPicture\"}\r\n            src={currUsers.picture}\r\n            onError={(e) => {\r\n              e.target.onerror = null;\r\n              e.target.src =\r\n                \"https://discord.com/assets/dd77cf000a729a9bf0fc03b97e1e4a5d.svg\";\r\n            }}\r\n          />\r\n        </NavLink>\r\n\r\n        <div className={users.name}>\r\n          {`${currUsers.title} ${currUsers.firstName} ${currUsers.lastName}`}\r\n        </div>\r\n\r\n        <div className={users.adress}>\r\n          {` ${currUsers.adressCountry} ${currUsers.adressCity}`}\r\n\r\n          <button\r\n            id={currUsers.id}\r\n            onClick={(e) => {\r\n              props.userFollowChange(currUsers.id, e, currUsers.isFollow);\r\n            }}\r\n          >\r\n            {currUsers.isFollow ? \"UnSubscribe\" : \"Subscribe\"}\r\n          </button>\r\n        </div>\r\n        <div className={users.quote}> {` ${currUsers.quote} `} </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  //-----------------------------------------//-----------------------------------------\r\n\r\n  return (\r\n    <div className={users.main}>\r\n      <div>{pageButtOns}</div>\r\n      {formUsers}\r\n      <div>{pageButtOns}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo( UsersPage);\r\n","import { connect } from \"react-redux\";\r\nimport * as axios from \"axios\";\r\nimport {\r\n  getUsersPageThunkCreator,\r\n  changeSubscribeThunkCreator,\r\n} from \"../../../redux/usersReducer\";\r\nimport UsersPage from \"./usersDrawer\";\r\nimport React, { useEffect } from \"react\";\r\nimport LoadingModule from \"../../commonComponent/loader/loader\";\r\nimport { compose } from \"redux\";\r\n\r\nconst UserConnectConreiner = (props) =>  {\r\n  const getUPtc = props.getUsersPageThunkCreator\r\n  const maxUsersAtPage = props.pageSettings.maxUsersAtPage\r\n\r\n  useEffect(() => {\r\n    getUPtc(1, maxUsersAtPage);\r\n  }, [maxUsersAtPage, getUPtc]);\r\n\r\n  \r\n// -----------------------------------------\r\n  const changePage = (Page) => {\r\n    if (Page !== props.pageSettings.currentPage) {\r\n      props.getUsersPageThunkCreator(\r\n        Page,\r\n        props.pageSettings.maxUsersAtPage\r\n      );\r\n    }\r\n  };\r\n  // ========================================\r\n\r\n \r\n    return (\r\n      <>\r\n        {\" \"}\r\n        {props.pageSettings.isLoadinFinished ? null : <LoadingModule />}\r\n        <UsersPage\r\n          pageSettings={props.pageSettings}\r\n          usersList={props.usersList}\r\n          changePage={changePage}\r\n          userFollowChange={props.changeSubscribeThunkCreator}\r\n        />{\" \"}\r\n      </>\r\n    );\r\n \r\n}\r\n\r\n//-----------------------------------------//-----------------------------------------\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    usersList: state.usersPart.usersList,\r\n    pageSettings: state.usersPart.pageSettings,\r\n  };\r\n};\r\n// -----------------------------------------\r\n\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUsersPageThunkCreator,\r\n    changeSubscribeThunkCreator,\r\n  })\r\n\r\n) (UserConnectConreiner) \r\n","import \"./App.css\";\r\n\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport MusicPage from \"./easyWb/bodComp/music/music\";\r\nimport NewsPage from \"./easyWb/bodComp/news/news\";\r\nimport React from \"react\";\r\nimport SettingsPage from \"./easyWb/bodComp/settings/settings\";\r\nimport Header from \"./easyWb/headerPart/header\";\r\nimport LeftColone from \"./easyWb/leftColone/leftColone\";\r\nimport MassagePageContainer from \"./easyWb/bodComp/massage/massageContainer\";\r\nimport ProfileContainer from \"./easyWb/bodComp/profile/profileContainer\";\r\nimport UserContainer from \"./easyWb/bodComp/users/usersContainer\";\r\n\r\n//import RegiserContainer from \"./easyWb/bodComp/register/regContainer\";\r\nconst RegiserContainer = React.lazy(()=> import (`./easyWb/bodComp/register/regContainer`))\r\n/*\r\n <Route \r\n            path='/massage' render={() => <MassagePage\r\n              massagePart={props.state.massagePart}\r\n              dispatch={props.dispatch}\r\n               <Route path=\"/register\" component={regiserContainer} \r\n            <Route path=\"/register\" render={() => <React.Suspense fallback={`Loadingu`}> <RegiserContainer/> </React.Suspense> } />                               />}\r\n*/\r\n//is init done?\r\nfunction App({ store, ...props }) {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n\r\n      <LeftColone store={store} />\r\n\r\n      <div className=\"mainCont\">\r\n        <Route\r\n          path=\"/profile/:userId?\"\r\n          render={() => <ProfileContainer store={store} />}\r\n        />\r\n\r\n        <Route\r\n          path=\"/massage\"\r\n          render={() => <MassagePageContainer store={store} />}\r\n        />\r\n        <Route path=\"/news\" component={NewsPage} />\r\n\r\n        <Route path=\"/music\" component={MusicPage} />\r\n\r\n        <Route path=\"/users\" render={() => <UserContainer store={store} />} />\r\n\r\n        <Route path=\"/settings\" component={SettingsPage} />\r\n\r\n        <Route path=\"/register\" render={() => (<React.Suspense fallback={`Loadingu`}> <RegiserContainer /> </React.Suspense>) } />   \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// ========================================\r\n\r\n// ========================================\r\nlet init = {\r\n  friendPanel: [\r\n    {\r\n      avatar:\r\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9UFLmQd7NpWuL9uIZGl7dhgdZzvZNHfBUnQ&usqp=CAU\",\r\n      url: \"/profile\",\r\n    },\r\n    {\r\n      avatar:\r\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQGrJrIYwuzxXd1wyofUM2TS9CDfUCYJr0Qxw&usqp=CAU\",\r\n      url: \"/profile\",\r\n    },\r\n    {\r\n      avatar:\r\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT-W5InZ2e1xZmvfkOOMmoOK0hFfVLJyJW7cQ&usqp=CAU\",\r\n      url: \"/profile\",\r\n    },\r\n    {\r\n      avatar:\r\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQbnjfsdxdZA8BDLxwd4GMC7zB10_SOuHk8KA&usqp=CAU\",\r\n      url: \"/profile\",\r\n    },\r\n  ],\r\n}\r\n// ========================================\r\n\r\n//state= this._state.massagePart//\r\nfunction leftColonePartReducer (state=init, action) {\r\n  switch (action.type) {\r\n    // --------------\r\n\r\n    // --------------\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// ========================================\r\n\r\n// ---------------------------------------\r\nfunction _postMassage(state, action) {\r\n\r\n  return state;\r\n}\r\n// ---------------------------------------\r\nfunction _privMassTempAreaEdit(state, action) {\r\n  \r\n  return state;\r\n}\r\n// ---------------------------------------\r\n\r\nexport default leftColonePartReducer;\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\n\r\nimport bodyReducer from \"./profileReducer\";\r\nimport leftColonePartReducer from \"./leftColonyReducer\";\r\nimport massageReducer from \"./massageReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport autorizationReduser from \"./autorizationReduser\";\r\nimport thunk from \"redux-thunk\";  //thunk middleware\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport commonReduser from \"./commonReduser\";\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\n\r\n\r\nlet reducersPush = combineReducers({\r\n  bodyPart: bodyReducer,\r\n  massagePart: massageReducer,\r\n  usersPart: usersReducer,\r\n  leftColonePart: leftColonePartReducer,\r\n  autorizationPart: autorizationReduser,\r\n   commonPart: commonReduser,\r\n  form: formReducer,\r\n});\r\n\r\n\r\n\r\nconst store = createStore(reducersPush, composeWithDevTools(applyMiddleware(thunk)));\r\nexport default store;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\r\n\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter} from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from './App';\r\nimport store from './redux/rStore';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n// ========================================\r\n\r\n// renderAllTree(state, stateEditFunctions)\r\n\r\n/*\r\n <React.StrictMode>\r\n </React.StrictMode>\r\n*/\r\n\r\n\r\n  ReactDOM.render(\r\n   \r\n      <BrowserRouter>\r\n     <Provider store={store}>\r\n      <App state={store.getState()} dispatch={store.dispatch.bind(store)} store={store}/>\r\n      </Provider>\r\n      </BrowserRouter>\r\n   ,\r\n    document.getElementById('root')\r\n  )\r\n\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"users_main__1Spo2\",\"post\":\"users_post__3Fei4\",\"name\":\"users_name__-0lc6\",\"adress\":\"users_adress__sppmD\",\"quote\":\"users_quote__33s6Z\",\"activeB\":\"users_activeB__Pxha2\",\"regularB\":\"users_regularB__1aNiD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logout\":\"autorization_logout__3kPp1\",\"loginButt\":\"autorization_loginButt__3UGGB\",\"login\":\"autorization_login__3LGal\",\"userAvatarLogin\":\"autorization_userAvatarLogin__1TUxr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"input_field__3J1as\",\"bField\":\"input_bField__2b0DC\",\"erors\":\"input_erors__2S-Rb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"massWall_history__2AJsu\",\"clock\":\"massWall_clock__1VETm\",\"buttActive\":\"massWall_buttActive__3Tv9i\",\"buttPass\":\"massWall_buttPass__3BFZb\"};","import loader from './loader.module.css'\r\n\r\nfunction LoadingModule (props) {\r\n    return (\r\n  \r\n    <span className={loader.lds_circle} ><span></span></span>\r\n  \r\n    )\r\n  }\r\n\r\nexport default LoadingModule","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"leftColone_button__2QpQq\",\"active\":\"leftColone_active__2EqFl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userdataBlock\":\"user_userdataBlock__1xnqB\",\"editText\":\"user_editText__lpekL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newpost\":\"newpost_newpost__2SSpO\",\"inputt\":\"newpost_inputt__1d6vW\"};"],"sourceRoot":""}