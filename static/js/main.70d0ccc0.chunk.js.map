{"version":3,"sources":["store/commonReduser.js","components/pages/music/music.module.css","components/pages/news/news.module.css","components/pages/settings/settings.module.css","components/sidebar/friendPanel/friendPanel.module.css","api/api.js","components/commonComponent/loader/loader.module.css","components/commonComponent/inputErorPanel/input.jsx","components/pages/massage/massage.module.css","components/pages/music/music.jsx","store/newsReducer.js","components/pages/news/newsDrawer.jsx","components/pages/news/newsContainer.js","components/pages/settings/settings.jsx","components/header/authorization/autorizationDrawer.jsx","store/autorizationReduser.js","components/header/authorization/autorizationContainer.jsx","components/header/header.js","components/sidebar/friendPanel/friendsPanelDrawer.jsx","store/leftColonyReducer.js","components/sidebar/friendPanel/friendsPanelContainer.jsx","components/sidebar/sidebar.js","store/massageReducer.js","components/pages/massage/messageDrawer.jsx","components/pages/massage/massageContainer.jsx","store/profileReducer.js","components/pages/profile/history/massageWall.jsx","components/pages/profile/profileDrawer.js","components/pages/profile/profileContainer.js","store/usersReducer.js","components/pages/users/usersDrawer.jsx","components/pages/users/usersContainer.js","App.js","store/rStore.js","reportWebVitals.js","index.js","components/pages/users/users.module.css","components/header/authorization/autorization.module.css","components/commonComponent/inputErorPanel/input.module.css","components/pages/profile/history/massWall.module.css","components/commonComponent/loader/loader.jsx","components/sidebar/sidebar.module.css","components/pages/profile/user.module.css","components/pages/profile/newpost.module.css"],"names":["CHANGE_LOADING_STATUS","APP_INIT_DONE","changeLoadStatus","status","type","init","loadingModules","isSomethingLoading","isInitComplete","_changeLoadStatus","state","action","_appInitComplete","commonReduser","module","exports","instanceDummy","axios","baseURL","headers","instanceMock","serverAL","getUsersList","CurrentPage","maxUsersAtPage","get","then","res","data","buttonPressed","userID","byl","put","isFollow","getUserbyId","getQuotebyUsrId","updateQuote","qText","quote","updateElement","whatElement","text","likeButtPressed","postID","likes","newWallPost","post","newUser","userInit","Promise","resolve","reject","setTimeout","getSubscrUsers","getNewsList","inputCondition","required","value","undefined","maxLength","max","length","minLength","min","number","isNaN","Number","minValue","email","test","renderField","input","label","meta","touched","error","warning","className","inputStyle","field","erors","placeholder","bigField","bField","MusicPage","props","music","main","SET_NEWS_POSTS","newsList","image","link","tags","publishDate","owner","_setPosts","newsReducer","NewsPage","news","connect","newsPart","getNewsPostsTC","dispatch","a","newsAnswData","console","log","useEffect","SettingsPage","settings","maxLength10","minLength2","AutorizationDrawer","userData","isLoggedIn","autiruzationStyle","login","userAvatarLogin","src","loginData","avatar","userName","loginButt","onClick","tryLogout","LogFormWithRed","reduxForm","form","pristine","submitting","onSubmit","handleSubmit","Field","component","name","validate","disabled","to","logout","loginFormSubmit","notLogined","React","memo","TRY_LOGIN","TRY_LOGOUT","LOGIN_FORM_SUBMIT","token","inputLogin","inputPassword","_loginSend","_loginFormSubmit","elem","_logout","autorizationReduser","AutorizationContainerConnect","regButtonPress","this","editLoginArea","editPasswordArea","Component","compose","autorizationPart","tryLogin","withRouter","Header","CompactFriendPanel","friendPanelStyle","friendPanel","map","friend","count","id","picture","alt","userNotLogined","UPDATE_FRIEND_PANEL","udpateFriends","_setAvatars","leftColonePartReducer","FriendColoneContainer","leftColonePart","updateFriendsTC","wallPostSucces","LeftButton","leftColone","button","href","activeClassName","active","Sidebar","store","POST_PRIVATE_MASSAGE","EDIT_PM_AREA","dialogsMain","path","userDialogs","changedText","PMtext","_postMassage","currState","cloneDeep","curr","push","_privMassTempAreaEdit","massageReducer","MassagePage","massagePart","useState","selecId","setTempID","DrawAutors","massage","nameAut","selectedId","autor","formDialog","dialog","formMassage","autorUser","DrawDialog","chat","NewPost","editPM","sendPM","dialogMassage","DrawMassageText","current","slice","includes","autorNotUser","areaPMtemp","createRef","newpost","ref","onChange","MassagePageContainer","editPmTempActionCreator","pmSendActionCreator","WALL_POST_PUBLISH","TEXTAREA_EDIT_WALL","GET_USER","LODAER_WAITER_CHANGER","EDIT_QUOTE_TEXT","ENABLE_EDIT_ELEMENT","DISABLE_EDIT_ELEMENT","EDIT_CURR_ELEM","GET_USER_WALL","WALL_LIKE_BUTTON_CHANGE","getUser","changeIsFinished","isFinished","getUserWallPost","postsWall","createdAt","wallText","isLoadinFinished","whatEdit","isEditorOneNeed","title","firstName","lastName","dateOfBirth","registerDate","phone","adressCity","adressCountry","_textAreaEditWall","_postWallComment","avatarImg","postArea","date","_getUser","_loaderWaitSwitch","_editChangeStatus","_enableEditElement","_disableEditElement","_editCurrElem","_getUsrWall","_changeLike","now","postId","bodyReducer","PostHistory","massWall","history","clock","buttActive","buttPass","oncl","e","likeChangeTC","userId","maxLength50","minLength10","Profile","doubleClickHolder","stringName","enableEditElement","DrawEditor","areaNewPost","editProfilePart","autoFocus","onBlur","updateQuoteOnServer","formWall","currenUserData","userStyle","userdataBlock","onDoubleClick","SendPostForm","newPost","editText","inputt","wallSend","bodyPart","wallPostSend","wallPostEdit","getUserByIdTC","userAnswer","userQuote","editQuote","updateQuteServer","buttonEvent","subBool","target","userid","newWallPostTC","updateWallPost","usrID","match","params","usrFunc","CHANGE_FOLLOW","GET_MORE_USERS","CHANGE_CURRENT_PAGE","GET_MAX_USERS","updateUserChange","changeCurPage","getMaxUsers","usersList","pageSettings","currentPage","allUsersCount","_changeFollowed","_getUsrs","_usersPageSwitch","_setMaxUsers","usersReducer","UsersPage","maxPagesNumber","maxItemsInPage","pagesToDraw","Math","ceil","pageButtOns","i","users","activeB","regularB","changePage","formUsers","currUsers","onError","onerror","adress","userFollowChange","usersPart","getUsersPageThunkCreator","Page","userListData","changeSubscribeThunkCreator","buttPressAnswer","getUPtc","RegiserContainer","lazy","App","exact","from","render","Suspense","fallback","reducersPush","combineReducers","commonPart","formReducer","createStore","composeWithDevTools","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getState","bind","document","getElementById","LoadingModule","loader","lds_circle"],"mappings":"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","file":"static/js/main.70d0ccc0.chunk.js","sourcesContent":["//import { cloneDeep } from \"lodash\";\r\n\r\nimport { serverAL } from \"../api/api\";\r\n\r\n// ========================================\r\nconst CHANGE_LOADING_STATUS = \"CHANGE-LOADING-STATUS\";\r\nconst APP_INIT_DONE = \"APP-INIT-DONE\";\r\n\r\n\r\n// ========================================\r\nexport const changeLoadStatus = (status) => ({ type: CHANGE_LOADING_STATUS, status });\r\n// --------------\r\nexport const initComplete = () => ({ type: APP_INIT_DONE });\r\n// ========================================\r\n\r\nconst init = {\r\n  loadingModules: {\r\n isSomethingLoading:false,\r\n isInitComplete:false,\r\n  },\r\n};\r\n// ========================================\r\n\r\nfunction commonReduser(state = init, action) {\r\n  switch (action.type) {\r\n    // --------------\r\n\r\n    case CHANGE_LOADING_STATUS: {\r\n      return _changeLoadStatus(state, action);\r\n    }\r\n    case APP_INIT_DONE: {\r\n      return _appInitComplete(state, action);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// ========================================\r\n\r\n\r\n// ---------------------------------------\r\nfunction _changeLoadStatus(state, action) {\r\n  \r\n  return {\r\n    ...state,\r\n    loadingModules: { isSomethingLoading: action.status },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _appInitComplete(state, action) {\r\n  \r\n  return {\r\n    ...state,\r\n    loadingModules: { isInitComplete: true },\r\n  };\r\n}\r\n// ========================================\r\n// ========================================\r\n\r\nexport const initPageTC = () => {\r\n  return (dispatch) => {\r\n   \r\n    dispatch(changeLoadStatus(false));\r\n\r\n  const promiseMass = promiseMass.push(  serverAL.userInit() )\r\n\r\n   Promise.all([promiseMass]).then ( ()=> { \r\n      dispatch(initComplete())\r\n      dispatch(changeLoadStatus(true));\r\n    })\r\n  };\r\n};\r\nexport default commonReduser;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"music_main__OqcXD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"news_main__2cNg_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"settings_main__P9Tzb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"friendPanel_main__2-xIY\"};","import * as axios from \"axios\";\r\n\r\nconst instanceDummy = axios.create({\r\n  baseURL: \"https://dummyapi.io/data/api/post\",\r\n  headers: {\r\n    \"app-id\": `608ec88017752b6496d65b8f`,\r\n  },\r\n});\r\n\r\nconst instancefakeapi = axios.create({\r\n  baseURL: \"https://www.fakeapi.online/api/apis/agent32/\",\r\n});\r\n\r\nconst instanceMock = axios.create({\r\n  baseURL: \"https://60885809a6f4a300174263e9.mockapi.io/users/\",\r\n});\r\n\r\n//https://www.fakeapi.online/apis\r\n\r\nexport const serverAL = {\r\n  //---------------users------------------\r\n  getUsersList: (CurrentPage = 0, maxUsersAtPage = 10) => {\r\n    return instanceMock\r\n      .get(`?page=${CurrentPage}&limit=${maxUsersAtPage}`)\r\n\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  },\r\n\r\n  buttonPressed: (userID, byl) => {\r\n    return instanceMock\r\n      .put(`${userID}`, {\r\n        isFollow: byl,\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  },\r\n    //-----------profile------------------\r\n    getUserbyId: (userID = 1) => {\r\n      return instanceMock.get(`${userID}`).then((res) => {\r\n        return res.data;\r\n      });\r\n    },\r\n    getQuotebyUsrId: (userID = 1) => {\r\n      return instanceMock.get(`${userID}/wallPost/`).then((res) => {\r\n        return res.data;\r\n      });\r\n    },\r\n  updateQuote: (userID, qText) => {\r\n    return instanceMock\r\n      .put(`${userID}`, {\r\n        quote: qText,\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  },\r\n  updateElement: (userID, whatElement, text) => {\r\n    return instanceMock\r\n      .put(`${userID}`, {\r\n        [whatElement]: text,\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  },\r\n  likeButtPressed: (userID, postID, byl) => {\r\n    debugger\r\n    return instanceMock\r\n      .put(`${userID}/wallPost/${postID}`, {\r\n        likes: byl,\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  },\r\n  newWallPost: (userID, data) => {\r\n    return instanceMock\r\n      .post(`${userID}/wallPost/`, {\r\n        ...data\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  },\r\n    //-----------registr------------------\r\n  newUser: (data) => {\r\n    return instanceMock\r\n      .post(``, {\r\n        ...data\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  },\r\n   //-----------init------------------\r\n  userInit: () => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        resolve();\r\n      }, 300);\r\n    });\r\n  },\r\n     //-----------friendPannel------------------\r\n  getSubscrUsers: () => {\r\n    \r\n    return instanceMock\r\n      .get(`?search=true&p=1&l=4`)\r\n\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  },\r\n    //-----------NewsPart------------------\r\n    getNewsList: () => {\r\n      return instanceDummy\r\n        .get(`?limit=10`)\r\n  \r\n        .then((res) => {\r\n          return res.data;\r\n        });\r\n    },\r\n};\r\n//https://60885809a6f4a300174263e9.mockapi.io/users/1/wallPost/\r\n\r\n//https://60885809a6f4a300174263e9.mockapi.io/users/?search=true&p=1&l=4","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds_circle\":\"loader_lds_circle__2N5Yv\"};","import inputStyle from './input.module.css'\r\n\r\n//---------------------------------------------------------------------------------------------\r\nexport const inputCondition =\r\n{\r\n  required :  (value) => {return (value || typeof value === 'number' ? undefined : 'Required')},\r\n   maxLength: (max) => (value) => { return (\r\n    value && value.length > max ? `Max is ${max}` : undefined)},\r\n    minLength: min => value =>\r\n  value && value.length < min ? `Min is ${min}` : undefined,\r\n   number: value =>\r\n  value && isNaN(Number(value)) ? 'Must be a numb' : undefined,\r\n minValue : min => value =>\r\n  value && value < min ? `Must be at least ${min}` : undefined,\r\n   email: value =>\r\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n    ? 'Invalid email'\r\n    : undefined,\r\n\r\n\r\n}\r\n\r\n//---------------------------------------------------------------------------------------------\r\n\r\n\r\n//---------------------------------------------------------------------------------------------\r\n\r\n    export const renderField = ({\r\n      input,\r\n      label,\r\n      type,\r\n      meta: { touched, error, warning }\r\n    }) => (\r\n      // className={reg.erors}\r\n        <span className={inputStyle.field + \" \" +(touched && error ?  inputStyle.erors: '' )}>\r\n          <input {...input} \r\n          placeholder={touched && error ? error : label} \r\n          type={type} />\r\n         \r\n        {/*   {touched &&\r\n            ((error && <span>{error}</span>) ||\r\n              (warning && <span>{warning}</span>))} */}\r\n              \r\n        </span>\r\n     \r\n    )\r\n\r\n    export const bigField = ({\r\n      input,\r\n      label,\r\n      type,\r\n      meta: { touched, error, warning }\r\n    }) => (\r\n      // className={reg.erors}\r\n        <span >\r\n          <input {...input} \r\n          placeholder={touched && error ? error : label} \r\n          type={type} \r\n          className={inputStyle.bField + \" \" +(touched && error ?  inputStyle.erors: '' )}\r\n          />\r\n         \r\n        {/*   {touched &&\r\n            ((error && <span>{error}</span>) ||\r\n              (warning && <span>{warning}</span>))} */}\r\n              \r\n        </span>\r\n     \r\n    )\r\n//---------------------------------------------------------------------------------------------","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"massage_main__3g7aE\",\"autor\":\"massage_autor__3hdZY\",\"nameAut\":\"massage_nameAut__K1Wpa\",\"active\":\"massage_active__1X31B\",\"dialogMassage\":\"massage_dialogMassage__1CwxN\",\"autorNotUser\":\"massage_autorNotUser__5WP9l\",\"autorUser\":\"massage_autorUser__1o8Ks\",\"newpost\":\"massage_newpost___aCTo\"};","import music from './music.module.css'\r\n\r\nfunction MusicPage (props) {\r\n  return <div className={music.main}>MusicList</div>\r\n}\r\n\r\nexport default MusicPage\r\n","import { serverAL } from \"../api/api\";\r\n\r\n// ========================================\r\n\r\nconst SET_NEWS_POSTS = \"SET-NEWS-POSTS/newsPart\";\r\n\r\n// ========================================\r\n\r\n// --------------\r\nexport const setNewsPosts = (data) => ({\r\n  type: SET_NEWS_POSTS,\r\n  data,\r\n});\r\n// --------------\r\n\r\nconst init = {\r\n  newsList: [\r\n    {\r\n      text: \"\",\r\n      image: \"\",\r\n      likes: \"\",\r\n      link: \"\",\r\n      tags: \"\",\r\n      publishDate: \"\",\r\n      owner: {},\r\n    },\r\n  ],\r\n};\r\n// ========================================\r\nfunction newsReducer(state = init, action) {\r\n  switch (action.type) {\r\n    // --------------\r\n\r\n    // --------------\r\n    case SET_NEWS_POSTS: {\r\n      return _setPosts(state, action);\r\n    }\r\n\r\n    // --------------\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// ========================================\r\n//, owner: ...action.data.owner\r\n// ---------------------------------------\r\nfunction _setPosts(state, action) {\r\n  return {\r\n    ...state,\r\n    newsList: [...action.data],\r\n  };\r\n}\r\n// ---------------------------------------\r\n\r\n// ========================================\r\nexport const getNewsPostsTC = () => async (dispatch) => {\r\n  try {\r\n    // dispatch(changeIsFinished(false));\r\n    const newsAnswData = await serverAL.getNewsList();\r\n\r\n    dispatch(setNewsPosts(newsAnswData));\r\n\r\n    //dispatch(changeIsFinished(true));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n// ---------------------------------------\r\n\r\n// ========================================\r\nexport default newsReducer;\r\n","import news from \"./news.module.css\";\r\n\r\nfunction NewsPage(props) {\r\n  /* const newsPost = props.newsList.map((current, count) => {}); */\r\n\r\n  return <div className={news.main}>News List</div>;\r\n}\r\n\r\nexport default NewsPage;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getNewsPostsTC } from \"../../../store/newsReducer\";\r\nimport NewsPage from \"./newsDrawer\";\r\n\r\nfunction NewsConnectContainer(props) {\r\n    useEffect(() => {\r\n    props.getNewsPostsTC()\r\n    \r\n  }, []); \r\n  // {props.changedText.isLoadinFinished ? null : <LoadingModule />}\r\n  return (\r\n    <>\r\n      <NewsPage />\r\n    </>\r\n  );\r\n}\r\n\r\n// ========================================\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    newsList: state.newsPart.newsList,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getNewsPostsTC })(\r\n  NewsConnectContainer\r\n);\r\n","import settings from './settings.module.css'\r\n\r\nfunction SettingsPage (props) {\r\n    return (\r\n  \r\n    <div className={settings.main} >Settings go</div>\r\n  \r\n    )\r\n  }\r\n\r\nexport default SettingsPage","import autiruzationStyle from \"./autorization.module.css\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {renderField, inputCondition } from \"../../commonComponent/inputErorPanel/input\";\r\n\r\nconst maxLength10 = inputCondition.maxLength(10)\r\nconst minLength2 = inputCondition.minLength(2)\r\n\r\nfunction AutorizationDrawer(props) {\r\n\r\n    //---------------------------------------------------------\r\n  function logined() {\r\n    return (\r\n      <div className={autiruzationStyle.login}>\r\n        <div>\r\n          <img\r\n            className={autiruzationStyle.userAvatarLogin}\r\n            src={props.userData.loginData.avatar}\r\n          />{\" \"}\r\n          Hello {props.userData.loginData.userName}\r\n        </div>\r\n        <div className={autiruzationStyle.loginButt}>\r\n          {\" \"}\r\n          <button onClick={props.tryLogout}> Logout</button>{\" \"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function notLogined() {\r\n    //---------------------------------------------------------\r\n    const LogFormWithRed = reduxForm({\r\n      form: \"loginForm\",\r\n    })(LoginForm);\r\n  //---------------------------------------------------------\r\n    function LoginForm(props) {\r\n      const {  pristine, submitting } = props\r\n      return (\r\n        <form onSubmit={props.handleSubmit}>\r\n          {\" \"}\r\n          <div>\r\n            <Field \r\n            \r\n            component=\"input\" name=\"login\" placeholder={`Login`}\r\n            validate={[inputCondition.required, maxLength10, minLength2]}\r\n            \r\n              />{\" \"}\r\n          </div>{\" \"}\r\n          <div>\r\n            <Field\r\n              component=\"input\"\r\n              name=\"password\"\r\n              placeholder={`Password`}\r\n              type=\"password\"\r\n              validate={[inputCondition.required, maxLength10, minLength2]}\r\n            />{\" \"}\r\n          </div>\r\n          <button type=\"submit\"  disabled={pristine || submitting}> Login </button>{\" \"}\r\n          <NavLink to={`/register`}>\r\n            <button>Registration</button>{\" \"}\r\n          </NavLink>\r\n        </form>\r\n      );\r\n    }\r\n  //---------------------------------------------------------\r\n\r\n    return (\r\n      <div className={autiruzationStyle.logout}>\r\n        <LogFormWithRed onSubmit={props.loginFormSubmit} />\r\n      </div>\r\n    );\r\n  }\r\n  //---------------------------------------------------------\r\n  return <> {props.userData.isLoggedIn ? logined() : notLogined()}</>;\r\n}\r\n\r\nexport default React.memo( AutorizationDrawer);\r\n","//import { cloneDeep } from \"lodash\";\r\n// ========================================\r\nconst TRY_LOGIN = \"TRY-LOGIN\";\r\nconst TRY_LOGOUT = \"TRY-LOGOUT\";\r\nconst LOGIN_FORM_SUBMIT = \"LOGIN-FORM-SUBMIT\";\r\n\r\n// ========================================\r\nexport const tryLogin = (data) => ({ type: TRY_LOGIN, data });\r\n// --------------\r\n// --------------\r\nexport const loginFormSubmit = (elem) => ({ type: LOGIN_FORM_SUBMIT, elem });\r\n// --------------\r\nexport const tryLogout = () => ({ type: TRY_LOGOUT });\r\n\r\n// ========================================\r\n\r\nconst init = {\r\n  userData: {\r\n    token: \"\",\r\n    inputLogin: \"\",\r\n    inputPassword: \"\",\r\n    isLoggedIn: false,\r\n    loginData: {\r\n      userName: \"\",\r\n      avatar: \"\",\r\n    },\r\n  },\r\n};\r\n// ========================================\r\n\r\nfunction autorizationReduser(state = init, action) {\r\n  switch (action.type) {\r\n    // --------------\r\n\r\n    case TRY_LOGIN: {\r\n      return _loginSend(state, action);\r\n    }\r\n    // --------------\r\n\r\n    case LOGIN_FORM_SUBMIT: {\r\n      return _loginFormSubmit(state, action);\r\n    }\r\n    // --------------\r\n\r\n    case TRY_LOGOUT: {\r\n      return _logout(state, action);\r\n    }\r\n    // --------------\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// ========================================\r\n\r\n// ---------------------------------------\r\nfunction _loginSend(state, action) {\r\n  return {\r\n    ...state,\r\n    userData: {\r\n      ...state.userData,\r\n      isLoggedIn: true,\r\n      inputLogin: \"\",\r\n      inputPassword: \"\",\r\n      token: action.data.token,\r\n      loginData: {\r\n        userName: action.data.userName,\r\n        avatar: action.data.avatar,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\n// ---------------------------------------\r\n// ---------------------------------------\r\nfunction _loginFormSubmit (state, action) {\r\n//if (!action.elem.login) { return state} \r\n  return {\r\n    ...state,\r\n    userData: {\r\n      ...state.userData,\r\n      isLoggedIn: true,\r\n      inputLogin: \"\",\r\n      inputPassword: \"\",\r\n      token: 'agagag',\r\n      loginData: {\r\n        userName: action.elem.login,\r\n      },\r\n    },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _logout(state, action) {\r\n  return {\r\n    ...state,\r\n    userData: {\r\n      ...state.userData,\r\n      isLoggedIn: false,\r\n      inputLogin: \"\",\r\n      inputPassword: \"\",\r\n      token: \"\",\r\n      loginData: {\r\n        userName: \"\",\r\n        avatar: \"\",\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default autorizationReduser;\r\n","import React from \"react\";\r\n\r\nimport AutorizationDrawer from \"./autorizationDrawer\";\r\nimport { connect } from \"react-redux\";\r\nimport * as axios from \"axios\";\r\nimport { Redirect, NavLink, withRouter } from \"react-router-dom\";\r\nimport { tryLogin,  tryLogout, loginFormSubmit} from \"../../../store/autorizationReduser\";\r\n\r\n\r\nimport { compose } from \"redux\";\r\n\r\n\r\nclass AutorizationContainerConnect extends React.Component {\r\n\r\n/* \r\n  getAutorization = () =>\r\n  { \r\n     \r\n     const returnDataEmu = {\r\n         avatar: 'https://cdn.discordapp.com/emojis/621056505373786112.png?v=1',\r\n         userName: 'NAGIBATOR2000',\r\n         token: 'IIIIIAAAAUUUU'\r\n         \r\n     }\r\n   this.props.tryLogin(returnDataEmu)\r\n\r\n  }\r\n  */\r\n\r\n  //<NavLink to={`/register`}> Registration</NavLink>\r\n  regButtonPress = () => {\r\n    \r\nreturn <Redirect to = { \"/register\"} />\r\n\r\n  }\r\n\r\n  // https://reqres.in/api/login\r\n\r\n  render() {\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n      <> \r\n        <AutorizationDrawer \r\n        userData={this.props.userData} \r\n        editLoginArea={this.props.editLoginArea}\r\n        editPasswordArea={this.props.editPasswordArea}\r\n       \r\n        tryLogout= {this.props.tryLogout}\r\n        regButtonPress= {this.regButtonPress}\r\n        loginFormSubmit={this.props.loginFormSubmit}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\n// ========================================\r\nconst mapStateToProps = (state) => {\r\n  return { userData: state.autorizationPart.userData };\r\n};\r\n\r\n//const AutorizationContainer = (withRouter(AutorizationContainerConnect));\r\n\r\nexport default compose(\r\n  connect(  mapStateToProps,  {tryLogin, tryLogout,loginFormSubmit}) ,\r\n  withRouter,\r\n  ) (AutorizationContainerConnect);\r\n","import '../../App.css'\r\nimport AutorizationContainer from './authorization/autorizationContainer'\r\n\r\nfunction Header (props) {\r\n  return (\r\n    \r\n    <header className='headS'>\r\n      <img className='mainIMG' src='https://upload.wikimedia.org/wikipedia/commons/thumb/1/1c/DC_Comics_logo.png/600px-DC_Comics_logo.png' />\r\n      <div className='pap'>  </div>\r\n      <div className='login'><AutorizationContainer /> </div> \r\n    </header>\r\n\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import friendPanelStyle from './friendPanel.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction CompactFriendPanel (props) {\r\n  function logined () {\r\n    return (\r\n      <div className={friendPanelStyle.main}>\r\n        {' '}\r\n        {props.friendPanel.map((friend, count) => (\r\n          \r\n  \r\n\r\n  <NavLink to={`/profile/${friend.id}`}>    <img key={count} src={friend.picture} alt={'friendPic'} /> </NavLink> \r\n\r\n\r\n\r\n        ))}{' '}\r\n      </div>\r\n    )\r\n  }\r\n\r\n/*   onError={(e) => {\r\n    e.target.onerror = null;\r\n    e.target.src =\r\n      \"https://discord.com/assets/dd77cf000a729a9bf0fc03b97e1e4a5d.svg\";\r\n  }} */\r\n  \r\n  \r\n  function userNotLogined () {}\r\n  // {props.isLoginned?  userNotLogined(): logined ()\r\n\r\n  return <> {props.isLoggedIn ? logined() : userNotLogined()} </>\r\n}\r\n\r\nexport default CompactFriendPanel\r\n","import { serverAL } from \"../api/api\";\r\n\r\n// ========================================\r\nconst UPDATE_FRIEND_PANEL = \"UPDATE-FRIEND-PANEL/COLONY-REDUCER\";\r\n// ========================================\r\nexport const udpateFriends = (data) => ({\r\n  type: UPDATE_FRIEND_PANEL,\r\n  data,\r\n});\r\n// ========================================s\r\nconst init = {\r\n  friendPanel: [\r\n  \r\n  ],\r\n};\r\n// ========================================\r\n\r\n// state= this._state.massagePart//\r\nfunction leftColonePartReducer(state = init, action) {\r\n  switch (action.type) {\r\n    // --------------\r\n\r\n    case UPDATE_FRIEND_PANEL: {\r\n      return _setAvatars(state, action);\r\n    }\r\n    // --------------\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// ========================================\r\nfunction _setAvatars(state, action) {\r\n \r\n  return {\r\n    ...state,\r\n    friendPanel: [...action.data],\r\n  };\r\n}\r\n// ---------------------------------------\r\nexport const updateFriendsTC = (data) => async (dispatch) => {\r\n  try {\r\n    //dispatch(changeIsFinished(false));\r\n\r\n    const wallPostSucces = await serverAL.getSubscrUsers();\r\n    \r\n   dispatch(udpateFriends(wallPostSucces.data));\r\n    \r\n    //  dispatch(changeIsFinished(true));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n// ---------------------------------------\r\n\r\n/* getUsersList: (CurrentPage = 0, maxUsersAtPage = 10) => {\r\n  return instanceMock\r\n    .get(`?page=${CurrentPage}&limit=${maxUsersAtPage}`)\r\n\r\n    .then((res) => {\r\n      return res.data;\r\n    });\r\n},   */\r\n// ---------------------------------------\r\n\r\nexport default leftColonePartReducer;\r\n","import { connect } from \"react-redux\";\r\nimport React from \"react\";\r\nimport CompactFriendPanel from \"./friendsPanelDrawer\";\r\nimport { updateFriendsTC } from \"../../../store/leftColonyReducer\";\r\n\r\nfunction FriendsPannelConnect(props) {\r\n    React.useEffect(() => {\r\n     if (props.isLoggedIn) {props.updateFriendsTC()}\r\n    }, [props.isLoggedIn]); \r\n\r\n  return <CompactFriendPanel {...props} />;\r\n}\r\n\r\n/* function FriendsPannelConnect(...props) {\r\n    React.useEffect(() => {\r\n     props.updateFriendsTC();\r\n    }, [props.isLoggedIn]); */\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    friendPanel: state.leftColonePart.friendPanel,\r\n    isLoggedIn: state.autorizationPart.userData.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst FriendColoneContainer = connect(mapStateToProps, { updateFriendsTC })(\r\n  FriendsPannelConnect\r\n);\r\n\r\nexport default FriendColoneContainer;\r\n// isLoginned={props.state.autorizationPart.userData.isLoggedIn}\r\n","import '../../App.css'\r\n\r\nimport FriendColoneContainer from './friendPanel/friendsPanelContainer'\r\nimport leftColone from './sidebar.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction Sidebar (props) {\r\n  // <LeftButton href='/settings' name='Settings' />\r\n  //<LeftButton href='/music' name='Music' />\r\n\r\n  return (\r\n    <div className='columLeft'>\r\n        <LeftButton href='/users' name='Users' />\r\n      <LeftButton href='/profile' name='Profile' />\r\n      <LeftButton href='/massage' name='Massage' />\r\n      <LeftButton href='/news' name='News' />\r\n      \r\n    \r\n\r\n      <FriendColoneContainer store={props.store} />\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction LeftButton (props) {\r\n  return (\r\n    <div className={leftColone.button}>\r\n      <NavLink to={props.href} activeClassName={leftColone.active}>\r\n        {props.name}{' '}\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import { cloneDeep } from \"lodash\";\r\n// ========================================\r\nconst POST_PRIVATE_MASSAGE = \"POST-PRIVATE-MASSAGE\";\r\nconst EDIT_PM_AREA = \"EDIT-PM-AREA\";\r\n// ========================================\r\nexport const pmSendActionCreator = (id, text) => ({\r\n  type: POST_PRIVATE_MASSAGE,\r\n  id: id,\r\n  text: text,\r\n});\r\nexport const editPmTempActionCreator = (text) => ({\r\n  type: EDIT_PM_AREA,\r\n  text: text,\r\n});\r\n// ========================================\r\n\r\n//state= this._state.massagePart//\r\nconst init = {\r\n  dialogsMain: [\r\n    {\r\n      id: 0,\r\n      name: \"Борян\",\r\n      path: \"/massage/test\",\r\n      userDialogs: [\r\n        \"Борян: Еп, никитин баланс\",\r\n        \"Я: Похуй\",\r\n        \"Борян: Калаш с отдачей ХК?\",\r\n        \"Борян: мы абузим\",\r\n        \"Я: Лах\",\r\n      ],\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Саня\",\r\n      path: \"/massage/test2\",\r\n      userDialogs: [\r\n        \"Саня: Объявляю крестовый поход на Харьков\",\r\n        \"Саня: Ну отслужил и иди на пограмиста\",\r\n        \"Я: Отслужил тебе за зеку, проверяй\",\r\n        \"Саня: Это и есть прогрессивный налог\",\r\n        \"Я: Сасай кудасай\",\r\n      ],\r\n    },\r\n  ],\r\n  changedText: {\r\n    PMtext: \"\",\r\n  },\r\n};\r\n// ========================================\r\nfunction massageReducer(state = init, action) {\r\n  switch (action.type) {\r\n    // --------------\r\n\r\n    case POST_PRIVATE_MASSAGE: {\r\n      return _postMassage(state, action);\r\n    }\r\n    // --------------\r\n    case EDIT_PM_AREA: {\r\n      return _privMassTempAreaEdit(state, action);\r\n    }\r\n\r\n    // --------------\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// ========================================\r\n\r\n// ---------------------------------------\r\nfunction _postMassage(state, action) {\r\n  const currState = cloneDeep(state);\r\n  const curr = \"Я: \" + state.changedText.PMtext;\r\n  currState.dialogsMain[action.id].userDialogs.push(curr);\r\n  currState.changedText.PMtext = \"\";\r\n  return currState;\r\n}\r\n// ---------------------------------------\r\nfunction _privMassTempAreaEdit(state, action) {\r\n  return {\r\n    ...state,\r\n    changedText: { ...state.changedText, PMtext: action.text },\r\n  };\r\n}\r\n// ---------------------------------------\r\n\r\nexport default massageReducer;\r\n","import massage from \"./massage.module.css\";\r\nimport React, { useState } from \"react\";\r\nimport { BrowserRouter, Route, NavLink } from \"react-router-dom\";\r\n\r\n\r\nfunction MassagePage(props) {\r\n  const dialogsMain = props.massagePart.dialogsMain;\r\n  const [selecId, setTempID] = useState(0);\r\n  \r\n  // ========================================\r\n  function DrawAutors(props) {\r\n   \r\n    return (\r\n      <div className={massage.nameAut}>\r\n        <NavLink\r\n          to={props.href}\r\n          activeClassName={massage.active}\r\n          onClick={() => setTempID(props.selectedId)}\r\n        >\r\n          {props.autor}{\" \"}\r\n        </NavLink>\r\n      </div>\r\n    );\r\n  }\r\n  // ========================================\r\n\r\n  const formDialog = dialogsMain.map((dialog, count) => (\r\n    <DrawAutors\r\n      key={dialog.id}\r\n      autor={dialog.name}\r\n      href={dialog.path}\r\n      selectedId={dialog.id}\r\n    />\r\n  ));\r\n  // ========================================\r\n  const formMassage = dialogsMain.map((dialog, count) => (\r\n    <Route\r\n      className={massage.autorUser}\r\n      key={dialog.id}\r\n      path={dialog.path}\r\n      component={() => (\r\n        <DrawDialog autor={dialog.name} chat={dialog.userDialogs} />\r\n      )}\r\n    ></Route>\r\n  ));\r\n  // ========================================\r\n\r\n  // ========================================\r\n  \r\n  return (\r\n    <BrowserRouter>\r\n      <div className={massage.main}>\r\n        <div className={massage.autor}>{formDialog}</div>\r\n        {formMassage}\r\n      </div> <NewPost\r\n        id={selecId}\r\n        editPM={props.editPM}\r\n        sendPM={props.sendPM}\r\n        changedText={props.massagePart.changedText}\r\n      /> \r\n     \r\n     \r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nfunction DrawDialog(props) {\r\n  return (\r\n    <span className={massage.dialogMassage}>\r\n      <DrawMassageText autor={props.autor} dialog={props.chat} />\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction DrawMassageText(props) {\r\n  const baba = props.dialog.map((current, count) => (\r\n    <div\r\n      key={count}\r\n      className={\r\n        current.slice(0, props.autor.length).includes(props.autor)\r\n          ? massage.autorUser\r\n          : massage.autorNotUser\r\n      }\r\n    >\r\n      {current}\r\n    </div>\r\n  ));\r\n  return baba;\r\n}\r\n\r\nfunction NewPost(props) {\r\n  let areaPMtemp = React.createRef();\r\n\r\n\r\n  return (\r\n    <div className={massage.newpost}>\r\n      <h2> My posts</h2>\r\n      <textarea\r\n        ref={areaPMtemp}\r\n        onChange={() => props.editPM(areaPMtemp.current.value)}\r\n        value={props.changedText.PMtext}\r\n        placeholder=\"your news...\"\r\n      />\r\n      <div />\r\n      <button onClick={() => props.sendPM(props.id)}> Send</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(MassagePage);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  pmSendActionCreator,\r\n  editPmTempActionCreator,\r\n} from \"../../../store/massageReducer\";\r\n\r\nimport MassagePage from \"./messageDrawer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { massagePart: state.massagePart };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    editPM: (text) => dispatch(editPmTempActionCreator(text)),\r\n    sendPM: (id) => dispatch(pmSendActionCreator(id)),\r\n  };\r\n};\r\nconst MassagePageContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MassagePage);\r\n\r\nexport default MassagePageContainer;\r\n","//import { cloneDeep } from \"lodash\";\r\n\r\nimport { serverAL } from \"../api/api\";\r\n\r\n// ========================================\r\nconst WALL_POST_PUBLISH = \"WALL-POST-PUBLISH\";\r\nconst TEXTAREA_EDIT_WALL = \"TEXTAREA-EDIT-WALL\";\r\nconst GET_USER = \"GET-USER\";\r\nconst LODAER_WAITER_CHANGER = \"LODAER-WAITER-CHANGER\";\r\nconst EDIT_QUOTE_TEXT = \"EDIT-QUOTE-TEXT\";\r\nconst ENABLE_EDIT_ELEMENT = \"ENABLE_EDIT_ELEMENT\";\r\nconst DISABLE_EDIT_ELEMENT = \"DISABLE_EDIT_ELEMENT\";\r\nconst EDIT_CURR_ELEM = \"EDIT-CURR-ELEM\";\r\nconst GET_USER_WALL = \"GET-USER-WALL\";\r\nconst WALL_LIKE_BUTTON_CHANGE = \"WALL-LIKE-BUTTON-CHANGE\";\r\n// ========================================\r\nexport const wallPostSend = (text) => ({ type: WALL_POST_PUBLISH, text });\r\n//----------------------------\r\nexport const wallPostEdit = (text) => ({\r\n  type: TEXTAREA_EDIT_WALL,\r\n  text: text,\r\n});\r\n//----------------------------\r\nexport const getUser = (text) => ({ type: GET_USER, text });\r\n// --------------\r\nexport const changeIsFinished = (isFinished) => ({\r\n  type: LODAER_WAITER_CHANGER,\r\n  isFinished: isFinished,\r\n});\r\n// --------------\r\nexport const editQuote = (text) => ({ type: EDIT_QUOTE_TEXT, text });\r\n// --------------\r\nexport const enableEditElement = (elem) => ({\r\n  type: ENABLE_EDIT_ELEMENT,\r\n  elem,\r\n});\r\n// --------------\r\nexport const diesableEditElement = () => ({\r\n  type: DISABLE_EDIT_ELEMENT,\r\n});\r\n// --------------\r\nexport const editProfilePart = (text) => ({\r\n  type: EDIT_CURR_ELEM,\r\n  text,\r\n});\r\n// --------------\r\nexport const getUserWallPost = (data) => ({\r\n  type: GET_USER_WALL,\r\n  data,\r\n});\r\n// --------------\r\nexport const likeChange = (userid, postId) => ({\r\n  type: WALL_LIKE_BUTTON_CHANGE,\r\n  userid,\r\n  postId,\r\n});\r\n// ========================================\r\n//state= this._state.bodyPart\r\n\r\n/*\r\n\"https://www.vokrug.tv/pic/person/2/b/f/4/2bf448098b7badf3b37e87c510da29bc.jpeg\",\r\n    \"Anon\",\r\n    \"2 jan\",\r\n    \"Minsk\",\r\n    \"HNAGH-11\",\r\n    \"https://learn.javascript\",\r\n    */\r\n\r\nconst init = {\r\n  // ---------------------------------------\r\n  postsWall: [\r\n     {\r\n      id: 0,\r\n      picture:\r\n        \"loading\",\r\n      text: \"loading\",\r\n      createdAt: \"loading\",\r\n      likes: false,\r\n    },\r\n  ],\r\n  // ---------------------------------------\r\n  changedText: {\r\n    wallText: \"\",\r\n    isLoadinFinished: false,\r\n    whatEdit: null,\r\n    isEditorOneNeed: false,\r\n  },\r\n  // ---------------------------------------\r\n  userData: {\r\n    id: `loading`,\r\n    title: `loading`,\r\n    firstName: `loading`,\r\n    lastName: `loading`,\r\n    email: `loading`,\r\n    dateOfBirth: `loading`,\r\n    registerDate: `loading`,\r\n    phone: `loading`,\r\n    quote: ``,\r\n    picture: ``,\r\n    adressCity: ``,\r\n    adressCountry: ``,\r\n  },\r\n};\r\n// ========================================\r\n\r\nfunction bodyReducer(state = init, action) {\r\n  switch (action.type) {\r\n    // --------------\r\n\r\n    case TEXTAREA_EDIT_WALL: {\r\n      return _textAreaEditWall(state, action);\r\n    }\r\n    // --------------\r\n    case WALL_POST_PUBLISH: {\r\n      return _postWallComment(state, action);\r\n    }\r\n    // --------------\r\n    case GET_USER: {\r\n      return _getUser(state, action);\r\n    }\r\n    // --------------\r\n    case GET_USER_WALL: {\r\n      return _getUsrWall(state, action);\r\n    }\r\n    // --------------\r\n    case LODAER_WAITER_CHANGER: {\r\n      return _loaderWaitSwitch(state, action);\r\n    }\r\n    // --------------\r\n    case EDIT_QUOTE_TEXT: {\r\n      return _editChangeStatus(state, action);\r\n    }\r\n    // --------------\r\n    case ENABLE_EDIT_ELEMENT: {\r\n      return _enableEditElement(state, action);\r\n    }\r\n    // --------------\r\n    case DISABLE_EDIT_ELEMENT: {\r\n      return _disableEditElement(state, action);\r\n    }\r\n    // --------------\r\n    case EDIT_CURR_ELEM: {\r\n      return _editCurrElem(state, action);\r\n    }\r\n    // --------------\r\n    case WALL_LIKE_BUTTON_CHANGE: {\r\n      return _changeLike(state, action);\r\n    }\r\n\r\n    // --------------\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// ========================================\r\n\r\n// ---------------------------------------\r\nfunction _textAreaEditWall(state, action) {\r\n  return {\r\n    ...state,\r\n    changedText: { ...state.changedText, wallText: action.text },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _postWallComment(state, action) {\r\n  const curr = {\r\n    avatarImg:\r\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSq_I0JFO2DxoAV3J-sI7ajtx0qW0Q5neaY_A&usqp=CAU\",\r\n    text: action.text.postArea,\r\n    date: \"15.04.21\",\r\n    likes: 0,\r\n  };\r\n\r\n  return {\r\n    ...state,\r\n    postsWall: [...state.postsWall, curr],\r\n    changedText: { ...state.changedText, wallText: \"\" },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _getUser(state, action) {\r\n  return {\r\n    ...state,\r\n    userData: { ...action.text },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _loaderWaitSwitch(state, action) {\r\n  return {\r\n    ...state,\r\n    changedText: { ...state.changedText, isLoadinFinished: action.isFinished },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _editChangeStatus(state, action) {\r\n  return {\r\n    ...state,\r\n    userData: { ...state.userData, quote: action.text },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _enableEditElement(state, action) {\r\n  /*   state.userData.[action.elem] = 'zaebus'\r\n  console.log(state.userData.picture)\r\n  debugger */\r\n  return {\r\n    ...state,\r\n    changedText: {\r\n      ...state.changedText,\r\n      isEditorOneNeed: true,\r\n      whatEdit: action.elem,\r\n    },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _disableEditElement(state, action) {\r\n  /*   state.userData.[action.elem] = 'zaebus'\r\n  console.log(state.userData.picture)\r\n  debugger */\r\n  return {\r\n    ...state,\r\n    changedText: {\r\n      ...state.changedText,\r\n      isEditorOneNeed: false,\r\n      whatEdit: \"\",\r\n    },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _editCurrElem(state, action) {\r\n  return {\r\n    ...state,\r\n    userData: { ...state.userData, [state.changedText.whatEdit]: action.text },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _getUsrWall(state, action) {\r\n  return {\r\n    ...state,\r\n    postsWall: [...action.data],\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _changeLike(state, action) {\r\n  return {\r\n    ...state,\r\n    postsWall: state.postsWall.map((now, id) => {\r\n      if (now.id === action.postId) {\r\n        now.likes = !now.likes;\r\n      }\r\n      return now;\r\n    }),\r\n  };\r\n}\r\n\r\n// ---------------------------------------\r\n// ========================================\r\n\r\nexport const getUserByIdTC =\r\n  (userID = 1) =>\r\n  async (dispatch) => {\r\n    try {\r\n    dispatch(changeIsFinished(false));\r\n\r\n    const userAnswer = await serverAL.getUserbyId(userID);\r\n    dispatch(getUser(userAnswer));\r\n\r\n    const userQuote = await serverAL.getQuotebyUsrId(userID);\r\n    dispatch(getUserWallPost(userQuote));\r\n\r\n    dispatch(changeIsFinished(true));\r\n  }\r\n  catch (err) { console.log(err) }\r\n  };\r\n// ---------------------------------------\r\nexport const updateQuteServer = (id, whatEdit, text) => async (dispatch) => {\r\n  try {\r\n    dispatch(changeIsFinished(false));\r\n await  serverAL.updateElement(id, whatEdit, text)\r\n      dispatch(diesableEditElement());\r\n      dispatch(changeIsFinished(true));\r\n   \r\n    }\r\n    catch (err) { console.log(err) }\r\n};\r\n// ---------------------------------------\r\nexport const likeChangeTC =\r\n  (userID, postID, buttonEvent, subBool) => async (dispatch) => {\r\n    try {\r\n    buttonEvent.target.disabled = true;\r\n    dispatch(changeIsFinished(false));\r\n    await serverAL.likeButtPressed(userID, postID, !subBool);\r\n    dispatch(likeChange(userID, postID));\r\n    buttonEvent.target.disabled = false;\r\n    dispatch(changeIsFinished(true));\r\n  }\r\n  catch (err) { console.log(err) }\r\n  };\r\n\r\n// ---------------------------------------\r\nexport const newWallPostTC = (userID, data) => async (dispatch) =>{\r\n  try {\r\n    dispatch(changeIsFinished(false));\r\n\r\n   const wallPostSucces = await serverAL.newWallPost(userID, data)\r\n\r\n    const updateWallPost= await  serverAL.getQuotebyUsrId(userID)\r\n        dispatch(getUserWallPost(updateWallPost));\r\n        dispatch(changeIsFinished(true));\r\n    \r\n      }\r\n      catch (err) { console.log(err) }\r\n  \r\n};\r\n\r\n// ---------------------------------------\r\n// ========================================\r\nexport default bodyReducer;\r\n","import massWall from './massWall.module.css'\r\nimport React from \"react\";\r\nconst PostHistory = React.memo( (props) => {\r\n  \r\n  return (\r\n    <div className={massWall.history}>\r\n      <img src={props.picture} />\r\n      <div>\r\n      <div>  <div className={massWall.clock}>{props.createdAt}</div>\r\n     \r\n       \r\n        <button className= {props.likes ? massWall.buttActive : massWall.buttPass } onClick={props.oncl}\r\n            \r\n            onClick={(e) => {\r\n              props.likeChangeTC(props.userId, props.postId, e, props.likes);\r\n            }}\r\n>Like { props.likes ? `🖒`: `` }</button></div>\r\n        <h3> {props.text}</h3>\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n})\r\n\r\n\r\n\r\nexport default PostHistory\r\n","import userStyle from \"./user.module.css\";\r\nimport newPost from \"./newpost.module.css\";\r\nimport PostHistory from \"./history/massageWall\";\r\nimport React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  bigField,\r\n  inputCondition,\r\n} from \"../../commonComponent/inputErorPanel/input\";\r\n\r\nconst maxLength50 = inputCondition.maxLength(50);\r\nconst minLength10 = inputCondition.minLength(10);\r\n\r\nconst Profile = (props) => {\r\n  const userData = props.userData;\r\n  const postsWall = props.postsWall;\r\n  // ---------------------------------------\r\n  // ========================================\r\n\r\n  //elem - stringТ\r\n  const doubleClickHolder = (stringName) => {\r\n    console.log(userData.picture);\r\n\r\n    if (!props.changedText.isEditorOneNeed) {\r\n      props.enableEditElement(stringName);\r\n    }\r\n  };\r\n  // ---------------------------------------\r\n  const DrawEditor = () => {\r\n    const areaNewPost = React.createRef();\r\n    const nothing = () => {\r\n      return <></>;\r\n    };\r\n    const textForm = () => {\r\n      return (\r\n        <div>\r\n          {\" \"}\r\n          <input\r\n            ref={areaNewPost}\r\n            onChange={() => props.editProfilePart(areaNewPost.current.value)}\r\n            autoFocus={true}\r\n            value={props.userData[props.changedText.whatEdit]}\r\n            onBlur={() => {\r\n              props.updateQuoteOnServer();\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    };\r\n    // state whatEdit IsEditorNeed isAnotherRedacted\r\n    //double click - isAnotherRedacted? IsEditorNeed=true, whatEdit\r\n\r\n    //\r\n    return (\r\n      <>\r\n        {props.changedText.isLoadinFinished && props.changedText.isEditorOneNeed\r\n          ? textForm()\r\n          : nothing()}\r\n      </>\r\n    );\r\n  };\r\n  // ========================================\r\n\r\n  const formWall = postsWall.map((post, count) => (\r\n    <PostHistory\r\n      key={count}\r\n      picture={post.picture}\r\n      text={post.text}\r\n      createdAt={post.createdAt}\r\n      likes={post.likes}\r\n      postId={post.id}\r\n      userId={post.userId}\r\n      likeChangeTC={props.likeChangeTC}\r\n    />\r\n  ));\r\n\r\n  // ---------------------------------------\r\n  const currenUserData = (\r\n    <div className={userStyle.userdataBlock}>\r\n      <img\r\n        onDoubleClick={() => doubleClickHolder(`picture`)}\r\n        src={userData.picture}\r\n      />\r\n      <div>\r\n        <div>id: {userData.id}</div>\r\n        <div>\r\n          Name:\r\n          <span onDoubleClick={() => doubleClickHolder(`title`)}>\r\n            {` ${userData.title}`}{\" \"}\r\n          </span>\r\n          <span onDoubleClick={() => doubleClickHolder(`firstName`)}>\r\n            {\" \"}\r\n            {`${userData.firstName}`}{\" \"}\r\n          </span>\r\n          <span onDoubleClick={() => doubleClickHolder(`lastName`)}>\r\n            {\" \"}\r\n            {`${userData.lastName}`}{\" \"}\r\n          </span>\r\n        </div>\r\n        <div onDoubleClick={() => doubleClickHolder(`email`)}>\r\n          {\" \"}\r\n          Mail: {userData.email}\r\n        </div>\r\n        <div onDoubleClick={() => doubleClickHolder(`registerDate`)}>\r\n          {\" \"}\r\n          Register: {userData.registerDate}\r\n        </div>\r\n        <div onDoubleClick={() => doubleClickHolder(`phone`)}>\r\n          {\" \"}\r\n          Phone: {userData.phone}\r\n        </div>\r\n        <div>\r\n          Country:\r\n          <span onDoubleClick={() => doubleClickHolder(`adressCountry`)}>\r\n            {\" \"}\r\n            {userData.adressCountry}{\" \"}\r\n          </span>\r\n          City:\r\n          <span onDoubleClick={() => doubleClickHolder(`adressCity`)}>\r\n            {\" \"}\r\n            {userData.adressCity}{\" \"}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  // ---------------------------------------\r\n  //---------------------------------------------------------\r\n  const SendPostForm = reduxForm({\r\n    form: \"wallPostForm\",\r\n  })(SendPost);\r\n  //---------------------------------------------------------\r\n  //wallPostSend\r\n  function SendPost(props) {\r\n    const { pristine, submitting } = props;\r\n    return (\r\n      <form className={newPost.newpost} onSubmit={props.handleSubmit}>\r\n        <div className={userStyle.editText}>\r\n          Двойной клик по полю для редактирования\r\n        </div>\r\n        <h2> My posts</h2>\r\n        <Field\r\n          className={newPost.inputt}\r\n          component=\"textarea\"\r\n          label={`What on mind?`}\r\n          component={bigField}\r\n          validate={[inputCondition.required, minLength10, maxLength50]}\r\n          name=\"text\"\r\n        />\r\n        <br />\r\n        <button type=\"submit\" disabled={pristine || submitting}>\r\n          {\" \"}\r\n          Send\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  // ========================================\r\n\r\n  // ========================================\r\n  return (\r\n    <div>\r\n      <img src=\"https://static3.depositphotos.com/1000454/256/i/600/depositphotos_2567474-stock-photo-wide-panorama-of-french-alps.jpg\" />\r\n\r\n      <div>\r\n        {\" \"}\r\n        <div onDoubleClick={() => doubleClickHolder(`quote`)}>\r\n          {userData.quote}\r\n        </div>{\" \"}\r\n      </div>\r\n      {currenUserData}\r\n      <DrawEditor />\r\n      <SendPostForm onSubmit={props.wallSend} />\r\n      {formWall}\r\n    </div>\r\n  );\r\n};\r\n// ==================Profile end======================\r\n\r\n// ========================================\r\n\r\nexport default React.memo(Profile);\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  wallPostSend,\r\n  wallPostEdit,\r\n  getUser,\r\n  changeIsFinished,\r\n  getUserByIdTC,\r\n  editQuote,\r\n  updateQuteServer,\r\n  editProfilePart,\r\n  enableEditElement,\r\n  likeChangeTC,\r\n  newWallPostTC,\r\n} from \"../../../store/profileReducer\";\r\nimport Profile from \"./profileDrawer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingModule from \"../../commonComponent/loader/loader\";\r\n\r\nimport { compose } from \"redux\";\r\n\r\nfunction ProfileConnectContainer(props) {\r\n  const usrID = props.match.params.userId;\r\n  const usrFunc = props.getUserByIdTC;\r\n//console.log(`2`)\r\n  useEffect(() => {\r\n    usrFunc(usrID);\r\n  }, [usrID, usrFunc]);\r\n\r\n  const updateQuoteOnServer = () => {\r\n    props.updateQuteServer(\r\n      props.userData.id,\r\n      props.changedText.whatEdit,\r\n      props.userData[props.changedText.whatEdit]\r\n    );\r\n  };\r\n\r\n  const wallSend = (data) => {\r\n   \r\n    props.newWallPostTC(props.userData.id, data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.changedText.isLoadinFinished ? null : <LoadingModule />}\r\n\r\n      <Profile\r\n        changedText={props.changedText}\r\n        userData={props.userData}\r\n        postsWall={props.postsWall}\r\n        wallSend={wallSend}\r\n        wallPostEdit={props.wallPostEdit}\r\n        getUser={props.getUser}\r\n        editQuote={props.editQuote}\r\n        updateQuoteOnServer={updateQuoteOnServer}\r\n        enableEditElement={props.enableEditElement}\r\n        editProfilePart={props.editProfilePart}\r\n        likeChangeTC={props.likeChangeTC}\r\n        newWallPostTC={props.newWallPostTC}\r\n      />\r\n    </>\r\n  );\r\n}\r\n/* \r\nclass ProfileConnectContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getUserByIdTC(this.props.match.params.userId);\r\n\r\n    //props.match.params - navlink income\r\n  }\r\n\r\n  updateQuoteOnServer = () => {\r\n    this.props.updateQuteServer(\r\n      this.props.userData.id,\r\n      this.props.changedText.whatEdit,\r\n      this.props.userData[this.props.changedText.whatEdit]\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.changedText.isLoadinFinished ? null : <LoadingModule />}\r\n\r\n        <Profile\r\n          changedText={this.props.changedText}\r\n          userData={this.props.userData}\r\n          postsWall={this.props.postsWall}\r\n          wallPostSend={this.props.wallPostSend}\r\n          wallPostEdit={this.props.wallPostEdit}\r\n          getUser={this.props.getUser}\r\n          editQuote={this.props.editQuote}\r\n          updateQuoteOnServer={this.updateQuoteOnServer}\r\n          enableEditElement={this.props.enableEditElement}\r\n          editProfilePart={this.props.editProfilePart}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n} */\r\n\r\n// ========================================\r\n\r\n// ========================================\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    changedText: state.bodyPart.changedText,\r\n    userData: state.bodyPart.userData,\r\n    postsWall: state.bodyPart.postsWall,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    wallPostSend,\r\n    wallPostEdit,\r\n    getUser,\r\n    changeIsFinished,\r\n    getUserByIdTC,\r\n    editQuote,\r\n    updateQuteServer,\r\n    enableEditElement,\r\n    editProfilePart,\r\n    likeChangeTC,\r\n    newWallPostTC,\r\n  }),\r\n  withRouter\r\n)(ProfileConnectContainer);\r\n","import { cloneDeep } from \"lodash\";\r\nimport { serverAL } from \"../api/api\";\r\n\r\n// ========================================\r\nconst CHANGE_FOLLOW = \"CHANGE-FOLLOW\";\r\nconst GET_MORE_USERS = \"GET-MORE-USERS\";\r\nconst CHANGE_CURRENT_PAGE = \"CHANGE-CURRENT-PAGE\";\r\nconst LODAER_WAITER_CHANGER = \"LODAER-WAITER-CHANGER\";\r\nconst GET_MAX_USERS = \"GET-MAX-USERS\";\r\n\r\n// ========================================\r\nexport const userFollowChange = (id) => ({\r\n  type: CHANGE_FOLLOW,\r\n  id: id,\r\n});\r\n// --------------\r\nexport const updateUserChange = (id) => ({\r\n  type: GET_MORE_USERS,\r\n  id: id,\r\n});\r\n// --------------\r\nexport const changeCurPage = (id) => ({\r\n  type: CHANGE_CURRENT_PAGE,\r\n  id: id,\r\n});\r\n// --------------\r\nexport const changeIsFinished = (isFinished) => ({\r\n  type: LODAER_WAITER_CHANGER,\r\n  isFinished: isFinished,\r\n});\r\n// --------------\r\nexport const getMaxUsers = (count) => ({\r\n  type: GET_MAX_USERS,\r\n  count,\r\n});\r\n// --------------\r\n\r\n//------------------------------------------\r\nconst friendTest = [\r\n  {\r\n    id: 111,\r\n    isFollow: false,\r\n    firstName: \"Борян\",\r\n    lastName: \"Полякович\",\r\n    email: \"nicituEbal@mail\",\r\n    title: \"mr\",\r\n    picture: \"https://cdn.discordapp.com/emojis/814691159544561685.png?v=1\",\r\n  },\r\n  {\r\n    id: 222,\r\n    isFollow: false,\r\n    firstName: \"Cаня\",\r\n    lastName: \"зауральский1087\",\r\n    email: \"nicituEbal@mail\",\r\n    title: \"mr\",\r\n    picture: \"https://cdn.discordapp.com/emojis/814691159544561685.png?v=1\",\r\n  },\r\n  {\r\n    id: 333,\r\n    isFollow: false,\r\n    firstName: \"Никита\",\r\n    lastName: \"Питерский\",\r\n    email: \"nicituEbal@mail\",\r\n    title: \"mr\",\r\n    picture: \"https://cdn.discordapp.com/emojis/814691159544561685.png?v=1\",\r\n  },\r\n  {\r\n    id: 444,\r\n    isFollow: false,\r\n    firstName: \"Барак\",\r\n    lastName: \"Обэма\",\r\n    email: \"russkievpered@mail\",\r\n    title: \"mr\",\r\n    picture: \"https://cdn.discordapp.com/emojis/814691159544561685.png?v=1\",\r\n  },\r\n];\r\n// ========================================\r\n//https://60885809a6f4a300174263e9.mockapi.io/Test\r\n//state= this._state.massagePart//\r\n\r\n/*\r\nhttps://60885809a6f4a300174263e9.mockapi.io/Test/?id=5 \r\nhttps://60885809a6f4a300174263e9.mockapi.io/Test/?page=1&limit=10\r\nhttps://mockapi.io/docs\r\n*/\r\n\r\nconst init = {\r\n  usersList: [\r\n    {\r\n      id: 1,\r\n      isFollow: false,\r\n      firstName: \"Борян\",\r\n      lastName: \"Полякович\",\r\n      email: \"nicituEbal@mail\",\r\n      title: \"mr\",\r\n      picture: \"https://cdn.discordapp.com/emojis/814691159544561685.png?v=1\",\r\n      adressCity: \"gaga\",\r\n      adressCountry: \"baba\",\r\n      quote: \"waaaa wa wa\",\r\n    },\r\n  ],\r\n  pageSettings: {\r\n    currentPage: 1,\r\n    allUsersCount: 25,\r\n    maxUsersAtPage: 5,\r\n    isLoadinFinished: false,\r\n  },\r\n};\r\n// ========================================\r\nfunction usersReducer(state = init, action) {\r\n  switch (action.type) {\r\n    // --------------\r\n\r\n    case CHANGE_FOLLOW: {\r\n      return _changeFollowed(state, action);\r\n    }\r\n    // --------------\r\n    case GET_MORE_USERS: {\r\n      return _getUsrs(state, action);\r\n    }\r\n\r\n    // --------------\r\n    case CHANGE_CURRENT_PAGE: {\r\n      return _usersPageSwitch(state, action);\r\n    }\r\n    // --------------\r\n    case LODAER_WAITER_CHANGER: {\r\n      return _loaderWaitSwitch(state, action);\r\n    }\r\n    // --------------\r\n    case GET_MAX_USERS: {\r\n      return _setMaxUsers(state, action);\r\n    }\r\n\r\n    // --------------\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// ========================================\r\n\r\n// ---------------------------------------\r\nfunction _changeFollowed(state, action) {\r\n  return {\r\n    ...state,\r\n    usersList: state.usersList.map((now, id) => {\r\n      if (now.id === action.id) {\r\n        now.isFollow = !now.isFollow;\r\n      }\r\n      return now;\r\n    }),\r\n  };\r\n}\r\n// ---------------------------------------\r\n\r\nfunction _getUsrs(state, action) {\r\n  return {\r\n    ...state,\r\n    usersList: [...action.id],\r\n  };\r\n}\r\n\r\n// ---------------------------------------\r\n\r\nfunction _usersPageSwitch(state, action) {\r\n  return {\r\n    ...state,\r\n    pageSettings: { ...state.pageSettings, currentPage: action.id },\r\n  };\r\n}\r\n// ---------------------------------------\r\n\r\nfunction _loaderWaitSwitch(state, action) {\r\n  return {\r\n    ...state,\r\n    pageSettings: {\r\n      ...state.pageSettings,\r\n      isLoadinFinished: action.isFinished,\r\n    },\r\n  };\r\n}\r\n// ---------------------------------------\r\nfunction _setMaxUsers(state, action) {\r\n  return {\r\n    ...state,\r\n    pageSettings: { ...state.pageSettings, allUsersCount: action.count },\r\n  };\r\n}\r\n\r\n// ========================================\r\nexport const getUsersPageThunkCreator =\r\n  (Page = 1, maxUsersAtPage = 5) =>\r\n  async (dispatch) => {\r\n    try{\r\n    dispatch(changeIsFinished(false));\r\n    const userListData = await serverAL.getUsersList(Page, maxUsersAtPage);\r\n    dispatch(getMaxUsers(userListData.count));\r\n    dispatch(updateUserChange(userListData.data));\r\n    dispatch(changeCurPage(Page));\r\n    dispatch(changeIsFinished(true));\r\n  }\r\n  catch (err) { console.log(err) }\r\n  };\r\n// ---------------------------------------\r\nexport const changeSubscribeThunkCreator =\r\n  (userID, buttonEvent, subBool) => async (dispatch) => {\r\n    try {\r\n    buttonEvent.target.disabled = true;\r\n    dispatch(changeIsFinished(false));\r\n    const buttPressAnswer = await serverAL.buttonPressed(userID, !subBool);\r\n    console.log(buttPressAnswer);\r\n    dispatch(userFollowChange(userID));\r\n    buttonEvent.target.disabled = false;\r\n    dispatch(changeIsFinished(true));\r\n  }\r\n  catch (err) { console.log(err) }\r\n  };\r\n\r\n// ========================================\r\nexport default usersReducer;\r\n","import users from \"./users.module.css\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n// -----------------------------------------\r\nfunction UsersPage(props) {\r\n\r\n  const maxPagesNumber = props.pageSettings.allUsersCount;\r\n  const maxItemsInPage = props.pageSettings.maxUsersAtPage;\r\n\r\n  const pagesToDraw = Math.ceil(maxPagesNumber / maxItemsInPage);\r\n\r\n  //------------------------------\r\n  const pageButtOns = []; \r\n  for (let i = 1; i <= pagesToDraw; i++) {\r\n    pageButtOns.push(\r\n      <span key={i}>\r\n        <button\r\n          className={\r\n            props.pageSettings.currentPage === i //css\r\n              ? users.activeB\r\n              : users.regularB\r\n          }\r\n          onClick={() => props.changePage(i)}\r\n        >\r\n          {i}\r\n        </button>{\" \"}\r\n      </span>\r\n    );\r\n  }\r\n  // ------------------------------\r\n  const formUsers = props.usersList.map((currUsers, count) => {\r\n    return (\r\n      <div className={users.post} key={currUsers.id}>\r\n        <NavLink to={`/profile/${currUsers.id}`}>\r\n          <img\r\n            alt={\"UsersPicture\"}\r\n            src={currUsers.picture}\r\n            onError={(e) => {\r\n              e.target.onerror = null;\r\n              e.target.src =\r\n                \"https://discord.com/assets/dd77cf000a729a9bf0fc03b97e1e4a5d.svg\";\r\n            }}\r\n          />\r\n        </NavLink>\r\n\r\n        <div className={users.name}>\r\n          {`${currUsers.title} ${currUsers.firstName} ${currUsers.lastName}`}\r\n        </div>\r\n\r\n        <div className={users.adress}>\r\n          {` ${currUsers.adressCountry} ${currUsers.adressCity}`}\r\n\r\n          <button\r\n            id={currUsers.id}\r\n            onClick={(e) => {\r\n              props.userFollowChange(currUsers.id, e, currUsers.isFollow);\r\n            }}\r\n          >\r\n            {currUsers.isFollow ? \"UnSubscribe\" : \"Subscribe\"}\r\n          </button>\r\n        </div>\r\n        <div className={users.quote}> {` ${currUsers.quote} `} </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  //-----------------------------------------//-----------------------------------------\r\n\r\n  return (\r\n    <div className={users.main}>\r\n      <div>{pageButtOns}</div>\r\n      {formUsers}\r\n      <div>{pageButtOns}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo( UsersPage);\r\n","import { connect } from \"react-redux\";\r\nimport * as axios from \"axios\";\r\nimport {\r\n  getUsersPageThunkCreator,\r\n  changeSubscribeThunkCreator,\r\n} from \"../../../store/usersReducer\";\r\nimport UsersPage from \"./usersDrawer\";\r\nimport React, { useEffect } from \"react\";\r\nimport LoadingModule from \"../../commonComponent/loader/loader\";\r\nimport { compose } from \"redux\";\r\n\r\nconst UserConnectConreiner = (props) =>  {\r\n  const getUPtc = props.getUsersPageThunkCreator\r\n  const maxUsersAtPage = props.pageSettings.maxUsersAtPage\r\n\r\n  useEffect(() => {\r\n    getUPtc(1, maxUsersAtPage);\r\n  }, [maxUsersAtPage, getUPtc]);\r\n\r\n  \r\n// -----------------------------------------\r\n  const changePage = (Page) => {\r\n    if (Page !== props.pageSettings.currentPage) {\r\n      props.getUsersPageThunkCreator(\r\n        Page,\r\n        props.pageSettings.maxUsersAtPage\r\n      );\r\n    }\r\n  };\r\n  // ========================================\r\n\r\n \r\n    return (\r\n      <>\r\n        {\" \"}\r\n        {props.pageSettings.isLoadinFinished ? null : <LoadingModule />}\r\n        <UsersPage\r\n          pageSettings={props.pageSettings}\r\n          usersList={props.usersList}\r\n          changePage={changePage}\r\n          userFollowChange={props.changeSubscribeThunkCreator}\r\n        />{\" \"}\r\n      </>\r\n    );\r\n \r\n}\r\n\r\n//-----------------------------------------//-----------------------------------------\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    usersList: state.usersPart.usersList,\r\n    pageSettings: state.usersPart.pageSettings,\r\n  };\r\n};\r\n// -----------------------------------------\r\n\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUsersPageThunkCreator,\r\n    changeSubscribeThunkCreator,\r\n  })\r\n\r\n) (UserConnectConreiner) \r\n","import './App.css'\r\n\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { Redirect } from 'react-router-dom'\r\nimport MusicPage from './components/pages/music/music'\r\nimport NewsPage from './components/pages/news/newsContainer'\r\nimport React from 'react'\r\nimport SettingsPage from './components/pages/settings/settings'\r\nimport Header from './components/header/header'\r\nimport LeftColone from './components/sidebar/sidebar'\r\nimport MassagePageContainer from './components/pages/massage/massageContainer'\r\nimport ProfileContainer from './components/pages/profile/profileContainer'\r\nimport UserContainer from './components/pages/users/usersContainer'\r\n\r\n// import RegiserContainer from \"./components/pages/register/regContainer\";\r\nconst RegiserContainer = React.lazy(() => import('./components/pages/register/regContainer'))\r\n/*\r\n <Route\r\n            path='/massage' render={() => <MassagePage\r\n              massagePart={props.state.massagePart}\r\n              dispatch={props.dispatch}\r\n               <Route path=\"/register\" component={regiserContainer}\r\n            <Route path=\"/register\" render={() => <React.Suspense fallback={`Loadingu`}> <RegiserContainer/> </React.Suspense> } />\r\n            https://agent32.github.io/way/                         />}\r\n*/\r\n// is init done?\r\nfunction App ({ store, ...props }) {\r\n  return (\r\n    <div className='App'>\r\n      <Header />\r\n\r\n      <LeftColone store={store} />\r\n\r\n      <div className='mainCont'>\r\n        <Switch>\r\n        <Redirect exact from=\"/\" to=\"/users\" />\r\n        \r\n        <Route\r\n          path='/profile/:userId?'\r\n          render={() => <ProfileContainer store={store} />}\r\n        />\r\n\r\n        <Route\r\n          path='/massage'\r\n          render={() => <MassagePageContainer store={store} />}\r\n        />\r\n        <Route path='/news' component={NewsPage} />\r\n\r\n        <Route path='/music' component={MusicPage} />\r\n\r\n        <Route path='/users' render={() => <UserContainer store={store} />} />\r\n\r\n        <Route path='/settings' component={SettingsPage} />\r\n\r\n        <Route path='/register' render={() => (<React.Suspense fallback='Loadingu'> <RegiserContainer /> </React.Suspense>)} />\r\n\r\n        <Route path='*'  render={() => <div>404</div>} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n \r\nexport default App\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\n\r\nimport bodyReducer from \"./profileReducer\";\r\nimport leftColonePartReducer from \"./leftColonyReducer\";\r\nimport massageReducer from \"./massageReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport autorizationReduser from \"./autorizationReduser\";\r\nimport newsReducer from \"./newsReducer\";\r\nimport thunk from \"redux-thunk\";  //thunk middleware\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport commonReduser from \"./commonReduser\";\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\n\r\n\r\nlet reducersPush = combineReducers({\r\n  bodyPart: bodyReducer,\r\n  massagePart: massageReducer,\r\n  usersPart: usersReducer,\r\n  leftColonePart: leftColonePartReducer,\r\n  autorizationPart: autorizationReduser,\r\n   commonPart: commonReduser,\r\n   newsPart: newsReducer,\r\n  form: formReducer,\r\n});\r\n\r\n\r\n\r\nconst store = createStore(reducersPush, composeWithDevTools(applyMiddleware(thunk)));\r\nexport default store;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport store from './store/rStore'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\n// ========================================\r\n\r\n// renderAllTree(state, stateEditFunctions)\r\n\r\n/*\r\n <React.StrictMode>\r\n </React.StrictMode>\r\n*/\r\n\r\nReactDOM.render(\r\n\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n          <App state={store.getState()} dispatch={store.dispatch.bind(store)} store={store} />\r\n        </Provider>\r\n    </HashRouter>\r\n    ,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"users_main__bfcD7\",\"post\":\"users_post__2MrWB\",\"name\":\"users_name__1Tss8\",\"adress\":\"users_adress__ecSKK\",\"quote\":\"users_quote__-dOEO\",\"activeB\":\"users_activeB__j847P\",\"regularB\":\"users_regularB__1WREL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logout\":\"autorization_logout__feZNw\",\"loginButt\":\"autorization_loginButt__3orwJ\",\"login\":\"autorization_login__28M-c\",\"userAvatarLogin\":\"autorization_userAvatarLogin__30wSQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"input_field__WPT-A\",\"bField\":\"input_bField__1eBei\",\"erors\":\"input_erors__1xalX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"massWall_history__1ec4V\",\"clock\":\"massWall_clock__1Yhl4\",\"buttActive\":\"massWall_buttActive__1REhQ\",\"buttPass\":\"massWall_buttPass__1-nlw\"};","import loader from './loader.module.css'\r\n\r\nfunction LoadingModule (props) {\r\n    return (\r\n  \r\n    <span className={loader.lds_circle} ><span></span></span>\r\n  \r\n    )\r\n  }\r\n\r\nexport default LoadingModule","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"sidebar_button__cPYJ7\",\"active\":\"sidebar_active__3vO5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userdataBlock\":\"user_userdataBlock__1uaOI\",\"editText\":\"user_editText__1du2v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newpost\":\"newpost_newpost__3z6tG\",\"inputt\":\"newpost_inputt__3pZsl\"};"],"sourceRoot":""}